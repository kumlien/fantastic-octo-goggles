{
  "version": 3,
  "sources": ["../../@vaadin/app-layout/theme/lumo/vaadin-drawer-toggle-styles.js", "../../@vaadin/app-layout/src/vaadin-drawer-toggle.js", "../../@hilla/react-components/src/DrawerToggle.ts", "../../@hilla/react-components/src/generated/DrawerToggle.ts"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/font-icons.js';\nimport { button } from '@vaadin/button/theme/lumo/vaadin-button-styles.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst drawerToggle = css`\n  :host {\n    width: var(--lumo-size-l);\n    height: var(--lumo-size-l);\n    min-width: auto;\n    margin: 0 var(--lumo-space-s);\n    padding: 0;\n    background: transparent;\n  }\n\n  [part='icon'],\n  [part='icon']::after,\n  [part='icon']::before {\n    position: inherit;\n    height: auto;\n    width: auto;\n    background: transparent;\n    top: auto;\n  }\n\n  [part='icon']::before {\n    font-family: lumo-icons;\n    font-size: var(--lumo-icon-size-m);\n    content: var(--lumo-icons-menu);\n  }\n\n  :host([slot~='navbar']) {\n    color: var(--lumo-secondary-text-color);\n  }\n`;\n\nregisterStyles('vaadin-drawer-toggle', [button, drawerToggle], { moduleId: 'lumo-drawer-toggle' });\n", "/**\n * @license\n * Copyright (c) 2018 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { Button } from '@vaadin/button/src/vaadin-button.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { isEmptyTextNode } from '@vaadin/component-base/src/dom-utils.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * Use registerStyles instead of the `<style>` tag to make sure\n * that this CSS will override core styles of `vaadin-button`.\n */\nregisterStyles(\n  'vaadin-drawer-toggle',\n  css`\n    :host {\n      display: inline-flex;\n      align-items: center;\n      justify-content: center;\n      cursor: default;\n      position: relative;\n      outline: none;\n      height: 24px;\n      width: 24px;\n      padding: 4px;\n    }\n\n    [part='icon'],\n    [part='icon']::after,\n    [part='icon']::before {\n      position: absolute;\n      top: 8px;\n      height: 3px;\n      width: 24px;\n      background-color: #000;\n    }\n\n    [part='icon']::after,\n    [part='icon']::before {\n      content: '';\n    }\n\n    [part='icon']::after {\n      top: 6px;\n    }\n\n    [part='icon']::before {\n      top: 12px;\n    }\n  `,\n  { moduleId: 'vaadin-drawer-toggle-styles' },\n);\n\n/**\n * The Drawer Toggle component controls the drawer in App Layout component.\n *\n * ```\n * <vaadin-app-layout>\n *   <vaadin-drawer-toggle slot=\"navbar\">Toggle drawer</vaadin-drawer-toggle>\n * </vaadin-app-layout>\n * ```\n *\n * @customElement\n * @extends Button\n */\nclass DrawerToggle extends Button {\n  static get template() {\n    return html`\n      <slot id=\"slot\">\n        <div part=\"icon\"></div>\n      </slot>\n      <div part=\"icon\" hidden$=\"[[!_showFallbackIcon]]\"></div>\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-drawer-toggle';\n  }\n\n  static get properties() {\n    return {\n      ariaLabel: {\n        type: String,\n        value: 'Toggle navigation panel',\n        reflectToAttribute: true,\n      },\n\n      /** @private */\n      _showFallbackIcon: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n\n    this.addEventListener('click', () => {\n      this.dispatchEvent(new CustomEvent('drawer-toggle-click', { bubbles: true, composed: true }));\n    });\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._toggleFallbackIcon();\n\n    this.$.slot.addEventListener('slotchange', () => {\n      this._toggleFallbackIcon();\n    });\n  }\n\n  /** @private */\n  _toggleFallbackIcon() {\n    const nodes = this.$.slot.assignedNodes();\n\n    // Show fallback icon if there are 1-2 empty text nodes assigned to the default slot.\n    this._showFallbackIcon = nodes.length > 0 && nodes.every((node) => isEmptyTextNode(node));\n  }\n}\n\ndefineCustomElement(DrawerToggle);\n\nexport { DrawerToggle };\n", "export * from \"@vaadin/app-layout/vaadin-drawer-toggle.js\";\nexport * from './generated/DrawerToggle.js';\n", "import type {} from \"@lit-labs/react\";\nimport { DrawerToggle as DrawerToggleElement, } from \"@vaadin/app-layout/vaadin-drawer-toggle.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { DrawerToggleElement, };\nexport type DrawerToggleEventMap = Readonly<{}>;\nconst events = {} as DrawerToggleEventMap;\nexport type DrawerToggleProps = WebComponentProps<DrawerToggleElement, DrawerToggleEventMap>;\nexport const DrawerToggle = createComponent({\n    elementClass: DrawerToggleElement, events, react: React, tagName: \"vaadin-drawer-toggle\"\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAM,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BrB,eAAe,wBAAwB,CAAC,QAAQ,YAAY,GAAG,EAAE,UAAU,qBAAqB,CAAC;;;ACpBjG;AAAA,EACE;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAoCA,EAAE,UAAU,8BAA8B;AAC5C;AAcA,IAAM,eAAN,cAA2B,OAAO;AAAA,EAChC,WAAW,WAAW;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOT;AAAA,EAEA,WAAW,KAAK;AACd,WAAO;AAAA,EACT;AAAA,EAEA,WAAW,aAAa;AACtB,WAAO;AAAA,MACL,WAAW;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,QACP,oBAAoB;AAAA,MACtB;AAAA;AAAA,MAGA,mBAAmB;AAAA,QACjB,MAAM;AAAA,QACN,OAAO;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAAA,EAEA,cAAc;AACZ,UAAM;AAEN,SAAK,iBAAiB,SAAS,MAAM;AACnC,WAAK,cAAc,IAAI,YAAY,uBAAuB,EAAE,SAAS,MAAM,UAAU,KAAK,CAAC,CAAC;AAAA,IAC9F,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,QAAQ;AACN,UAAM,MAAM;AAEZ,SAAK,oBAAoB;AAEzB,SAAK,EAAE,KAAK,iBAAiB,cAAc,MAAM;AAC/C,WAAK,oBAAoB;AAAA,IAC3B,CAAC;AAAA,EACH;AAAA;AAAA,EAGA,sBAAsB;AACpB,UAAM,QAAQ,KAAK,EAAE,KAAK,cAAc;AAGxC,SAAK,oBAAoB,MAAM,SAAS,KAAK,MAAM,MAAM,CAAC,SAAS,gBAAgB,IAAI,CAAC;AAAA,EAC1F;AACF;AAEA,oBAAoB,YAAY;;;AE7HhC,IAAAA,KAAuB;AAIvB,IAAMC,IAAS,CAAC;AAAhB,IAEaC,IAAeC,EAAgB,EACxC,cAAcC,cAAqB,QAAAH,GAAQ,OAAOI,IAAO,SAAS,uBACtE,CAAC;",
  "names": ["r", "events", "DrawerToggle", "createComponent", "DrawerToggleElement", "React"]
}
