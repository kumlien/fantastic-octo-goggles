{
  "version": 3,
  "sources": ["../../@vaadin/app-layout/theme/lumo/vaadin-app-layout-styles.js", "../../@vaadin/app-layout/src/detect-ios-navbar.js", "../../@vaadin/app-layout/src/safe-area-inset.js", "../../@polymer/polymer/lib/utils/render-status.js", "../../@vaadin/a11y-base/src/aria-hidden.js", "../../@vaadin/a11y-base/src/aria-modal-controller.js", "../../@vaadin/a11y-base/src/focus-trap-controller.js", "../../@vaadin/app-layout/src/vaadin-app-layout.js", "../../@hilla/react-components/src/AppLayout.ts", "../../@hilla/react-components/src/generated/AppLayout.ts"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-app-layout',\n  css`\n    [part='navbar'],\n    [part='drawer'] {\n      background-color: var(--lumo-base-color);\n      background-clip: padding-box;\n    }\n\n    [part='navbar'] {\n      min-height: var(--lumo-size-xl);\n      border-bottom: 1px solid var(--lumo-contrast-10pct);\n    }\n\n    [part='navbar'][bottom] {\n      border-bottom: none;\n      border-top: 1px solid var(--lumo-contrast-10pct);\n    }\n\n    [part='drawer'] {\n      border-inline-end: 1px solid var(--lumo-contrast-10pct);\n    }\n\n    :host([overlay]) [part='drawer'] {\n      border-inline-end: none;\n      box-shadow: var(--lumo-box-shadow-s);\n    }\n\n    :host([primary-section='navbar']) [part='navbar'] {\n      border: none;\n      background-image: linear-gradient(var(--lumo-contrast-5pct), var(--lumo-contrast-5pct));\n    }\n\n    :host([primary-section='drawer']:not([overlay])) [part='drawer'] {\n      background-image: linear-gradient(var(--lumo-shade-5pct), var(--lumo-shade-5pct));\n    }\n\n    [part='backdrop'] {\n      background-color: var(--lumo-shade-20pct);\n      opacity: 1;\n    }\n\n    [part] ::slotted(h2),\n    [part] ::slotted(h3),\n    [part] ::slotted(h4) {\n      margin-top: var(--lumo-space-xs) !important;\n      margin-bottom: var(--lumo-space-xs) !important;\n    }\n  `,\n  { moduleId: 'lumo-app-layout' },\n);\n", "/**\n * @license\n * Copyright (c) 2018 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isIOS } from '@vaadin/component-base/src/browser-utils.js';\n\nexport function _detectIosNavbar() {\n  /* c8 ignore next 11 */\n  if (isIOS) {\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n    const landscape = innerWidth > innerHeight;\n    const clientHeight = document.documentElement.clientHeight;\n    if (landscape && clientHeight > innerHeight) {\n      document.documentElement.style.setProperty('--vaadin-viewport-offset-bottom', `${clientHeight - innerHeight}px`);\n    } else {\n      document.documentElement.style.setProperty('--vaadin-viewport-offset-bottom', '');\n    }\n  }\n}\n\n_detectIosNavbar();\nwindow.addEventListener('resize', _detectIosNavbar);\n", "const template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    /* Use units so that the values can be used in calc() */\n    html {\n      --safe-area-inset-top: env(safe-area-inset-top, 0px);\n      --safe-area-inset-right: env(safe-area-inset-right, 0px);\n      --safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);\n      --safe-area-inset-left: env(safe-area-inset-left, 0px);\n    }\n  </style>\n`;\n\ndocument.head.appendChild(template.content);\n", "/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Module for scheduling flushable pre-render and post-render tasks.\n *\n * @summary Module for scheduling flushable pre-render and post-render tasks.\n */\n\nimport './boot.js';\n\nlet scheduled = false;\nlet beforeRenderQueue = [];\nlet afterRenderQueue = [];\n\nfunction schedule() {\n  scheduled = true;\n  // before next render\n  requestAnimationFrame(function() {\n    scheduled = false;\n    flushQueue(beforeRenderQueue);\n    // after the render\n    setTimeout(function() {\n      runQueue(afterRenderQueue);\n    });\n  });\n}\n\nfunction flushQueue(queue) {\n  while (queue.length) {\n    callMethod(queue.shift());\n  }\n}\n\nfunction runQueue(queue) {\n  for (let i=0, l=queue.length; i < l; i++) {\n    callMethod(queue.shift());\n  }\n}\n\nfunction callMethod(info) {\n  const context = info[0];\n  const callback = info[1];\n  const args = info[2];\n  try {\n    callback.apply(context, args);\n  } catch(e) {\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n\n/**\n * Flushes all `beforeNextRender` tasks, followed by all `afterNextRender`\n * tasks.\n *\n * @return {void}\n */\nexport function flush() {\n  while (beforeRenderQueue.length || afterRenderQueue.length) {\n    flushQueue(beforeRenderQueue);\n    flushQueue(afterRenderQueue);\n  }\n  scheduled = false;\n}\n\n\n/**\n * Enqueues a callback which will be run before the next render, at\n * `requestAnimationFrame` timing.\n *\n * This method is useful for enqueuing work that requires DOM measurement,\n * since measurement may not be reliable in custom element callbacks before\n * the first render, as well as for batching measurement tasks in general.\n *\n * Tasks in this queue may be flushed by calling `flush()`.\n *\n * @param {*} context Context object the callback function will be bound to\n * @param {function(...*):void} callback Callback function\n * @param {!Array=} args An array of arguments to call the callback function with\n * @return {void}\n */\nexport function beforeNextRender(context, callback, args) {\n  if (!scheduled) {\n    schedule();\n  }\n  beforeRenderQueue.push([context, callback, args]);\n}\n\n/**\n * Enqueues a callback which will be run after the next render, equivalent\n * to one task (`setTimeout`) after the next `requestAnimationFrame`.\n *\n * This method is useful for tuning the first-render performance of an\n * element or application by deferring non-critical work until after the\n * first paint.  Typical non-render-critical work may include adding UI\n * event listeners and aria attributes.\n *\n * @param {*} context Context object the callback function will be bound to\n * @param {function(...*):void} callback Callback function\n * @param {!Array=} args An array of arguments to call the callback function with\n * @return {void}\n */\nexport function afterNextRender(context, callback, args) {\n  if (!scheduled) {\n    schedule();\n  }\n  afterRenderQueue.push([context, callback, args]);\n}\n\n", "/**\n * @license\n * Copyright (c) 2017 Anton Korzunov\n * SPDX-License-Identifier: MIT\n */\n\n/**\n * @fileoverview\n *\n * This module includes JS code copied from the `aria-hidden` package:\n * https://github.com/theKashey/aria-hidden/blob/master/src/index.ts\n */\n\n/** @type {WeakMap<Element, number>} */\nlet counterMap = new WeakMap();\n\n/** @type {WeakMap<Element, boolean>} */\nlet uncontrolledNodes = new WeakMap();\n\n/** @type {Record<string, WeakMap<Element, number>>} */\nlet markerMap = {};\n\n/** @type {number} */\nlet lockCount = 0;\n\n/**\n * @param {?Node} node\n * @return {boolean}\n */\nconst isElement = (node) => node && node.nodeType === Node.ELEMENT_NODE;\n\n/**\n * @param  {...unknown} args\n */\nconst logError = (...args) => {\n  console.error(`Error: ${args.join(' ')}. Skip setting aria-hidden.`);\n};\n\n/**\n * @param {HTMLElement} parent\n * @param {Element[]} targets\n * @return {Element[]}\n */\nconst correctTargets = (parent, targets) => {\n  if (!isElement(parent)) {\n    logError(parent, 'is not a valid element');\n    return [];\n  }\n\n  return targets\n    .map((target) => {\n      if (!isElement(target)) {\n        logError(target, 'is not a valid element');\n        return null;\n      }\n\n      let node = target;\n      while (node && node !== parent) {\n        if (parent.contains(node)) {\n          return target;\n        }\n        node = node.getRootNode().host;\n      }\n\n      logError(target, 'is not contained inside', parent);\n      return null;\n    })\n    .filter((x) => Boolean(x));\n};\n\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param {HTMLElement} [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @param {String} [controlAttribute] - html Attribute to control\n * @return {Function}\n */\nconst applyAttributeToOthers = (originalTarget, parentNode, markerName, controlAttribute) => {\n  const targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n\n  if (!markerMap[markerName]) {\n    markerMap[markerName] = new WeakMap();\n  }\n\n  const markerCounter = markerMap[markerName];\n\n  /** @type {Element[]} */\n  const hiddenNodes = [];\n\n  /** @type {Set<Node>} */\n  const elementsToKeep = new Set();\n\n  /** @type {Set<Node>} */\n  const elementsToStop = new Set(targets);\n\n  /**\n   * @param {?Node} el\n   */\n  const keep = (el) => {\n    if (!el || elementsToKeep.has(el)) {\n      return;\n    }\n\n    elementsToKeep.add(el);\n\n    const slot = el.assignedSlot;\n    if (slot) {\n      keep(slot);\n    }\n\n    keep(el.parentNode || el.host);\n  };\n\n  targets.forEach(keep);\n\n  /**\n   * @param {?Node} el\n   */\n  const deep = (parent) => {\n    if (!parent || elementsToStop.has(parent)) {\n      return;\n    }\n\n    const root = parent.shadowRoot;\n    const children = root ? [...parent.children, ...root.children] : [...parent.children];\n    children.forEach((node) => {\n      // Skip elements that don't need to be hidden\n      if (['template', 'script', 'style'].includes(node.localName)) {\n        return;\n      }\n\n      if (elementsToKeep.has(node)) {\n        deep(node);\n      } else {\n        const attr = node.getAttribute(controlAttribute);\n        const alreadyHidden = attr !== null && attr !== 'false';\n        const counterValue = (counterMap.get(node) || 0) + 1;\n        const markerValue = (markerCounter.get(node) || 0) + 1;\n\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        hiddenNodes.push(node);\n\n        if (counterValue === 1 && alreadyHidden) {\n          uncontrolledNodes.set(node, true);\n        }\n\n        if (markerValue === 1) {\n          node.setAttribute(markerName, 'true');\n        }\n\n        if (!alreadyHidden) {\n          node.setAttribute(controlAttribute, 'true');\n        }\n      }\n    });\n  };\n\n  deep(parentNode);\n\n  elementsToKeep.clear();\n\n  lockCount += 1;\n\n  return () => {\n    hiddenNodes.forEach((node) => {\n      const counterValue = counterMap.get(node) - 1;\n      const markerValue = markerCounter.get(node) - 1;\n\n      counterMap.set(node, counterValue);\n      markerCounter.set(node, markerValue);\n\n      if (!counterValue) {\n        if (uncontrolledNodes.has(node)) {\n          uncontrolledNodes.delete(node);\n        } else {\n          node.removeAttribute(controlAttribute);\n        }\n      }\n\n      if (!markerValue) {\n        node.removeAttribute(markerName);\n      }\n    });\n\n    lockCount -= 1;\n\n    if (!lockCount) {\n      // clear\n      counterMap = new WeakMap();\n      counterMap = new WeakMap();\n      uncontrolledNodes = new WeakMap();\n      markerMap = {};\n    }\n  };\n};\n\n/**\n * Marks everything except given node(or nodes) as aria-hidden\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param {HTMLElement} [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Function} undo command\n */\nexport const hideOthers = (originalTarget, parentNode = document.body, markerName = 'data-aria-hidden') => {\n  const targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n\n  if (parentNode) {\n    // We should not hide ariaLive elements - https://github.com/theKashey/aria-hidden/issues/10\n    targets.push(...Array.from(parentNode.querySelectorAll('[aria-live]')));\n  }\n\n  return applyAttributeToOthers(targets, parentNode, markerName, 'aria-hidden');\n};\n\n/**\n * Marks everything except given node(or nodes) as inert\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param {HTMLElement} [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Function} undo command\n */\nexport const inertOthers = (originalTarget, parentNode = document.body, markerName = 'data-inert-ed') => {\n  return applyAttributeToOthers(originalTarget, parentNode, markerName, 'inert');\n};\n\n/**\n * @return if current browser supports inert\n */\nexport const supportsInert = 'inert' in HTMLElement.prototype;\n\n/**\n * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n * @param {Element | Element[]} originalTarget - elements to keep on the page\n * @param {HTMLElement} [parentNode] - top element, defaults to document.body\n * @param {String} [markerName] - a special attribute to mark every node\n * @return {Function} undo command\n */\nexport const suppressOthers = (originalTarget, parentNode, markerName) =>\n  (supportsInert ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { hideOthers } from './aria-hidden.js';\n\n/**\n * A controller for handling modal state on the elements with `dialog` and `alertdialog` role.\n * See https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-modal\n *\n * Note, the actual `role` and `aria-modal` attributes are supposed to be handled by the\n * consumer web component. This is done in to ensure the controller only does one thing.\n */\nexport class AriaModalController {\n  /**\n   * @param {HTMLElement} host\n   */\n  constructor(host, callback) {\n    /**\n     * The controller host element.\n     *\n     * @type {HTMLElement}\n     */\n    this.host = host;\n\n    /**\n     * The callback used to detect which element\n     * to use as a target. Defaults to the host.\n     *\n     * @type {Function}\n     */\n    this.callback = typeof callback === 'function' ? callback : () => host;\n  }\n\n  /**\n   * Make the controller host modal by hiding other elements from screen readers\n   * using `aria-hidden` attribute (can be replaced with `inert` in the future).\n   *\n   * The method name is chosen to align with the one provided by native `<dialog>`:\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLDialogElement/showModal\n   */\n  showModal() {\n    const targets = this.callback();\n    this.__showOthers = hideOthers(targets);\n  }\n\n  /**\n   * Remove `aria-hidden` from other elements unless there are any other\n   * controller hosts on the page activated by using `showModal()` call.\n   */\n  close() {\n    if (this.__showOthers) {\n      this.__showOthers();\n      this.__showOthers = null;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { getFocusableElements, isElementFocused } from './focus-utils.js';\n\nconst instances = [];\n\n/**\n * A controller for trapping focus within a DOM node.\n */\nexport class FocusTrapController {\n  /**\n   * @param {HTMLElement} host\n   */\n  constructor(host) {\n    /**\n     * The controller host element.\n     *\n     * @type {HTMLElement}\n     */\n    this.host = host;\n\n    /**\n     * A node for trapping focus in.\n     *\n     * @type {HTMLElement | null}\n     * @private\n     */\n    this.__trapNode = null;\n\n    this.__onKeyDown = this.__onKeyDown.bind(this);\n  }\n\n  /**\n   * An array of tab-ordered focusable elements inside the trap node.\n   *\n   * @return {HTMLElement[]}\n   * @private\n   */\n  get __focusableElements() {\n    return getFocusableElements(this.__trapNode);\n  }\n\n  /**\n   * The index of the element inside the trap node that currently has focus.\n   *\n   * @return {HTMLElement | undefined}\n   * @private\n   */\n  get __focusedElementIndex() {\n    const focusableElements = this.__focusableElements;\n    return focusableElements.indexOf(focusableElements.filter(isElementFocused).pop());\n  }\n\n  hostConnected() {\n    document.addEventListener('keydown', this.__onKeyDown);\n  }\n\n  hostDisconnected() {\n    document.removeEventListener('keydown', this.__onKeyDown);\n  }\n\n  /**\n   * Activates a focus trap for a DOM node that will prevent focus from escaping the node.\n   * The trap can be deactivated with the `.releaseFocus()` method.\n   *\n   * If focus is initially outside the trap, the method will move focus inside,\n   * on the first focusable element of the trap in the tab order.\n   * The first focusable element can be the trap node itself if it is focusable\n   * and comes first in the tab order.\n   *\n   * If there are no focusable elements, the method will throw an exception\n   * and the trap will not be set.\n   *\n   * @param {HTMLElement} trapNode\n   */\n  trapFocus(trapNode) {\n    this.__trapNode = trapNode;\n\n    if (this.__focusableElements.length === 0) {\n      this.__trapNode = null;\n      throw new Error('The trap node should have at least one focusable descendant or be focusable itself.');\n    }\n\n    instances.push(this);\n\n    if (this.__focusedElementIndex === -1) {\n      this.__focusableElements[0].focus();\n    }\n  }\n\n  /**\n   * Deactivates the focus trap set with the `.trapFocus()` method\n   * so that it becomes possible to tab outside the trap node.\n   */\n  releaseFocus() {\n    this.__trapNode = null;\n\n    instances.pop();\n  }\n\n  /**\n   * A `keydown` event handler that manages tabbing navigation when the trap is enabled.\n   *\n   * - Moves focus to the next focusable element of the trap on `Tab` press.\n   * When no next element to focus, the method moves focus to the first focusable element.\n   * - Moves focus to the prev focusable element of the trap on `Shift+Tab` press.\n   * When no prev element to focus, the method moves focus to the last focusable element.\n   *\n   * @param {KeyboardEvent} event\n   * @private\n   */\n  __onKeyDown(event) {\n    if (!this.__trapNode) {\n      return;\n    }\n\n    // Only handle events for the last instance\n    if (this !== Array.from(instances).pop()) {\n      return;\n    }\n\n    if (event.key === 'Tab') {\n      event.preventDefault();\n\n      const backward = event.shiftKey;\n      this.__focusNextElement(backward);\n    }\n  }\n\n  /**\n   * - Moves focus to the next focusable element if `backward === false`.\n   * When no next element to focus, the method moves focus to the first focusable element.\n   * - Moves focus to the prev focusable element if `backward === true`.\n   * When no prev element to focus the method moves focus to the last focusable element.\n   *\n   * If no focusable elements, the method returns immediately.\n   *\n   * @param {boolean} backward\n   * @private\n   */\n  __focusNextElement(backward = false) {\n    const focusableElements = this.__focusableElements;\n    const step = backward ? -1 : 1;\n    const currentIndex = this.__focusedElementIndex;\n    const nextIndex = (focusableElements.length + currentIndex + step) % focusableElements.length;\n    const element = focusableElements[nextIndex];\n    element.focus();\n    if (element.localName === 'input') {\n      element.select();\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2018 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './detect-ios-navbar.js';\nimport './safe-area-inset.js';\nimport { afterNextRender, beforeNextRender } from '@polymer/polymer/lib/utils/render-status.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { AriaModalController } from '@vaadin/a11y-base/src/aria-modal-controller.js';\nimport { FocusTrapController } from '@vaadin/a11y-base/src/focus-trap-controller.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * @typedef {import('./vaadin-app-layout.js').AppLayoutI18n} AppLayoutI18n\n */\n\n/**\n * `<vaadin-app-layout>` is a Web Component providing a quick and easy way to get a common application layout structure done.\n *\n * ```\n * <vaadin-app-layout primary-section=\"navbar|drawer\">\n *  <vaadin-drawer-toggle slot=\"navbar [touch-optimized]\"></vaadin-drawer-toggle>\n *  <h3 slot=\"navbar [touch-optimized]\">Company Name</h3>\n *  <vaadin-tabs orientation=\"vertical\" slot=\"drawer\">\n *    <vaadin-tab>Menu item 1</vaadin-tab>\n *  </vaadin-tabs>\n *  <!-- Everything else will be the page content -->\n *  <div>\n *    <h3>Page title</h3>\n *    <p>Page content</p>\n *  </div>\n * </vaadin-app-layout>\n * ```\n *\n * For best results, the component should be added to the root level of your application (i.e., as a direct child of `<body>`).\n *\n * The page should include a viewport meta tag which contains `viewport-fit=cover`, like the following:\n * ```\n * <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, viewport-fit=cover\">\n * ```\n * This causes the viewport to be scaled to fill the device display.\n * To ensure that important content is displayed, use the provided css variables.\n * ```\n * --safe-area-inset-top\n * --safe-area-inset-right\n * --safe-area-inset-bottom\n * --safe-area-inset-left\n * ```\n *\n * ### Styling\n *\n * The following Shadow DOM parts of the `<vaadin-app-layout>` are available for styling:\n *\n * Part name     | Description\n * --------------|---------------------------------------------------------|\n * `navbar`      | Container for the navigation bar\n * `drawer`      | Container for the drawer area\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * ### Component's slots\n *\n * The following slots are available to be set\n *\n * Slot name          | Description\n * -------------------|---------------------------------------------------|\n * no name            | Default container for the page content\n * `navbar `          | Container for the top navbar area\n * `drawer`           | Container for an application menu\n * `touch-optimized`  | Container for the bottom navbar area (only visible for mobile devices)\n *\n * #### Touch optimized\n *\n * App Layout has a pseudo-slot `touch-optimized` in order to give more control of the presentation of\n * elements with `slot[navbar]`. Internally, when the user is interacting with App Layout from a\n * touchscreen device, the component will search for elements with `slot[navbar touch-optimized]` and move\n * them to the bottom of the page.\n *\n * ### Navigation\n *\n * As the drawer opens as an overlay in small devices, it makes sense to close it once a navigation happens.\n * If you are using Vaadin Router, this will happen automatically unless you change the `closeDrawerOn` event name.\n *\n * In order to do so, there are two options:\n * - If the `vaadin-app-layout` instance is available, then `drawerOpened` can be set to `false`\n * - If not, a custom event `close-overlay-drawer` can be dispatched either by calling\n *  `window.dispatchEvent(new CustomEvent('close-overlay-drawer'))` or by calling\n *  `AppLayout.dispatchCloseOverlayDrawerEvent()`\n *\n * ### Scrolling areas\n *\n * By default, the component will act with the \"body scrolling\", so on mobile (iOS Safari and Android Chrome),\n * the toolbars will collapse when a scroll happens.\n *\n * To use the \"content scrolling\", in case of the content of the page relies on a pre-defined height (for instance,\n * it has a `height:100%`), then the developer can set `height: 100%` to both `html` and `body`.\n * That will make the `[content]` element of app layout scrollable.\n * On this case, the toolbars on mobile device won't collapse.\n *\n * @fires {CustomEvent} drawer-opened-changed - Fired when the `drawerOpened` property changes.\n * @fires {CustomEvent} overlay-changed - Fired when the `overlay` property changes.\n * @fires {CustomEvent} primary-section-changed - Fired when the `primarySection` property changes.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes ThemableMixin\n * @mixes ControllerMixin\n */\nclass AppLayout extends ElementMixin(ThemableMixin(ControllerMixin(PolymerElement))) {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n          box-sizing: border-box;\n          height: 100%;\n          --vaadin-app-layout-transition: 200ms;\n          transition: padding var(--vaadin-app-layout-transition);\n          --vaadin-app-layout-touch-optimized: false;\n          --vaadin-app-layout-navbar-offset-top: var(--_vaadin-app-layout-navbar-offset-size);\n          --vaadin-app-layout-navbar-offset-bottom: var(--_vaadin-app-layout-navbar-offset-size-bottom);\n          padding-block: var(--vaadin-app-layout-navbar-offset-top) var(--vaadin-app-layout-navbar-offset-bottom);\n          padding-inline-start: var(--vaadin-app-layout-navbar-offset-left);\n        }\n\n        :host([hidden]),\n        [hidden] {\n          display: none !important;\n        }\n\n        :host([no-anim]) {\n          --vaadin-app-layout-transition: none !important;\n        }\n\n        :host([drawer-opened]) {\n          --vaadin-app-layout-drawer-offset-left: var(--_vaadin-app-layout-drawer-offset-size);\n        }\n\n        :host([overlay]) {\n          --vaadin-app-layout-drawer-offset-left: 0;\n          --vaadin-app-layout-navbar-offset-left: 0;\n        }\n\n        :host(:not([no-scroll])) [content] {\n          overflow: auto;\n        }\n\n        [content] {\n          height: 100%;\n        }\n\n        @media (pointer: coarse) and (max-width: 800px) and (min-height: 500px) {\n          :host {\n            --vaadin-app-layout-touch-optimized: true;\n          }\n        }\n\n        [part='navbar'] {\n          position: fixed;\n          display: flex;\n          align-items: center;\n          top: 0;\n          inset-inline: 0;\n          transition: inset-inline-start var(--vaadin-app-layout-transition);\n          padding-top: var(--safe-area-inset-top);\n          padding-left: var(--safe-area-inset-left);\n          padding-right: var(--safe-area-inset-right);\n          z-index: 1;\n        }\n\n        :host([primary-section='drawer'][drawer-opened]:not([overlay])) [part='navbar'] {\n          inset-inline-start: var(--vaadin-app-layout-drawer-offset-left, 0);\n        }\n\n        :host([primary-section='drawer']) [part='drawer'] {\n          top: 0;\n        }\n\n        [part='navbar'][bottom] {\n          top: auto;\n          bottom: 0;\n          padding-bottom: var(--safe-area-inset-bottom);\n        }\n\n        [part='drawer'] {\n          overflow: auto;\n          position: fixed;\n          top: var(--vaadin-app-layout-navbar-offset-top, 0);\n          bottom: var(--vaadin-app-layout-navbar-offset-bottom, var(--vaadin-viewport-offset-bottom, 0));\n          inset-inline: var(--vaadin-app-layout-navbar-offset-left, 0) auto;\n          transition: transform var(--vaadin-app-layout-transition), visibility var(--vaadin-app-layout-transition);\n          transform: translateX(-100%);\n          max-width: 90%;\n          width: 16em;\n          box-sizing: border-box;\n          padding: var(--safe-area-inset-top) 0 var(--safe-area-inset-bottom) var(--safe-area-inset-left);\n          outline: none;\n          /* The drawer should be inaccessible by the tabbing navigation when it is closed. */\n          visibility: hidden;\n          display: flex;\n          flex-direction: column;\n        }\n\n        :host([drawer-opened]) [part='drawer'] {\n          /* The drawer should be accessible by the tabbing navigation when it is opened. */\n          visibility: visible;\n          transform: translateX(0%);\n          touch-action: manipulation;\n        }\n\n        [part='backdrop'] {\n          background-color: #000;\n          opacity: 0.3;\n        }\n\n        :host(:not([drawer-opened])) [part='backdrop'] {\n          opacity: 0;\n        }\n\n        :host([overlay]) [part='backdrop'] {\n          position: fixed;\n          inset: 0;\n          pointer-events: none;\n          transition: opacity var(--vaadin-app-layout-transition);\n          -webkit-tap-highlight-color: transparent;\n        }\n\n        :host([overlay]) [part='drawer'] {\n          top: 0;\n          bottom: 0;\n        }\n\n        :host([overlay]) [part='drawer'],\n        :host([overlay]) [part='backdrop'] {\n          z-index: 2;\n        }\n\n        :host([drawer-opened][overlay]) [part='backdrop'] {\n          pointer-events: auto;\n          touch-action: manipulation;\n        }\n\n        :host([dir='rtl']) [part='drawer'] {\n          transform: translateX(100%);\n        }\n\n        :host([dir='rtl'][drawer-opened]) [part='drawer'] {\n          transform: translateX(0%);\n        }\n\n        :host([drawer-opened]:not([overlay])) {\n          padding-inline-start: var(--vaadin-app-layout-drawer-offset-left);\n        }\n\n        @media (max-width: 800px), (max-height: 600px) {\n          :host {\n            --vaadin-app-layout-drawer-overlay: true;\n          }\n\n          [part='drawer'] {\n            width: 20em;\n          }\n        }\n\n        /* If a vaadin-scroller is used in the drawer, allow it to take all remaining space and contain scrolling */\n        [part='drawer'] ::slotted(vaadin-scroller) {\n          flex: 1;\n          overscroll-behavior: contain;\n        }\n      </style>\n      <div part=\"navbar\" id=\"navbarTop\">\n        <slot name=\"navbar\" on-slotchange=\"_updateTouchOptimizedMode\"></slot>\n      </div>\n      <div part=\"backdrop\" on-click=\"_onBackdropClick\" on-touchend=\"_onBackdropTouchend\"></div>\n      <div part=\"drawer\" id=\"drawer\">\n        <slot name=\"drawer\" id=\"drawerSlot\" on-slotchange=\"_updateDrawerSize\"></slot>\n      </div>\n      <div content>\n        <slot></slot>\n      </div>\n      <div part=\"navbar\" id=\"navbarBottom\" bottom hidden>\n        <slot name=\"navbar-bottom\"></slot>\n      </div>\n      <div hidden>\n        <slot id=\"touchSlot\" name=\"navbar touch-optimized\" on-slotchange=\"_updateTouchOptimizedMode\"></slot>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-app-layout';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * The object used to localize this component.\n       * To change the default localization, replace the entire\n       * `i18n` object with a custom one.\n       *\n       * To update individual properties, extend the existing i18n object as follows:\n       * ```js\n       * appLayout.i18n = {\n       *   ...appLayout.i18n,\n       *   drawer: 'Drawer'\n       * }\n       * ```\n       *\n       * The object has the following structure and default values:\n       * ```\n       * {\n       *   drawer: 'Drawer'\n       * }\n       * ```\n       *\n       * @type {AppLayoutI18n}\n       * @default {English/US}\n       */\n      i18n: {\n        type: Object,\n        observer: '__i18nChanged',\n        value: () => {\n          return {\n            drawer: 'Drawer',\n          };\n        },\n      },\n\n      /**\n       * Defines whether navbar or drawer will come first visually.\n       * - By default (`primary-section=\"navbar\"`), the navbar takes the full available width and moves the drawer down.\n       * - If `primary-section=\"drawer\"` is set, then the drawer will move the navbar, taking the full available height.\n       * @attr {navbar|drawer} primary-section\n       * @type {!PrimarySection}\n       */\n      primarySection: {\n        type: String,\n        value: 'navbar',\n        notify: true,\n        reflectToAttribute: true,\n        observer: '__primarySectionChanged',\n      },\n\n      /**\n       * Controls whether the drawer is opened (visible) or not.\n       * Its default value depends on the viewport:\n       * - `true`, for desktop size views\n       * - `false`, for mobile size views\n       * @attr {boolean} drawer-opened\n       * @type {boolean}\n       */\n      drawerOpened: {\n        type: Boolean,\n        notify: true,\n        value: true,\n        reflectToAttribute: true,\n        observer: '__drawerOpenedChanged',\n      },\n\n      /**\n       * Drawer is an overlay on top of the content\n       * Controlled via CSS using `--vaadin-app-layout-drawer-overlay: true|false`;\n       * @type {boolean}\n       */\n      overlay: {\n        type: Boolean,\n        notify: true,\n        readOnly: true,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * A global event that causes the drawer to close (be hidden) when it is in overlay mode.\n       * - The default is `vaadin-router-location-changed` dispatched by Vaadin Router\n       *\n       * @attr {string} close-drawer-on\n       * @type {string}\n       */\n      closeDrawerOn: {\n        type: String,\n        value: 'vaadin-router-location-changed',\n        observer: '_closeDrawerOnChanged',\n      },\n    };\n  }\n\n  /**\n   * Helper static method that dispatches a `close-overlay-drawer` event\n   */\n  static dispatchCloseOverlayDrawerEvent() {\n    window.dispatchEvent(new CustomEvent('close-overlay-drawer'));\n  }\n\n  constructor() {\n    super();\n    // TODO(jouni): might want to debounce\n    this.__boundResizeListener = this._resize.bind(this);\n    this.__drawerToggleClickListener = this._drawerToggleClick.bind(this);\n    this.__onDrawerKeyDown = this.__onDrawerKeyDown.bind(this);\n    this.__closeOverlayDrawerListener = this.__closeOverlayDrawer.bind(this);\n    this.__trapFocusInDrawer = this.__trapFocusInDrawer.bind(this);\n    this.__releaseFocusFromDrawer = this.__releaseFocusFromDrawer.bind(this);\n\n    // Hide all the elements except the drawer toggle and drawer content\n    this.__ariaModalController = new AriaModalController(this, () => [\n      ...this.querySelectorAll('vaadin-drawer-toggle, [slot=\"drawer\"]'),\n    ]);\n    this.__focusTrapController = new FocusTrapController(this);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    this._blockAnimationUntilAfterNextRender();\n\n    window.addEventListener('resize', this.__boundResizeListener);\n    this.addEventListener('drawer-toggle-click', this.__drawerToggleClickListener);\n\n    beforeNextRender(this, this._afterFirstRender);\n\n    this._updateTouchOptimizedMode();\n    this._updateDrawerSize();\n    this._updateOverlayMode();\n\n    this._navbarSizeObserver = new ResizeObserver(() => {\n      requestAnimationFrame(() => {\n        // Prevent updating offset size multiple times\n        // during the drawer open / close transition.\n        if (this.__isDrawerAnimating) {\n          this.__updateOffsetSizePending = true;\n        } else {\n          this._updateOffsetSize();\n        }\n      });\n    });\n    this._navbarSizeObserver.observe(this.$.navbarTop);\n    this._navbarSizeObserver.observe(this.$.navbarBottom);\n\n    window.addEventListener('close-overlay-drawer', this.__closeOverlayDrawerListener);\n    window.addEventListener('keydown', this.__onDrawerKeyDown);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addController(this.__focusTrapController);\n    this.__setAriaExpanded();\n\n    this.$.drawer.addEventListener('transitionstart', () => {\n      this.__isDrawerAnimating = true;\n    });\n\n    this.$.drawer.addEventListener('transitionend', () => {\n      // Update offset size after drawer animation.\n      if (this.__updateOffsetSizePending) {\n        this.__updateOffsetSizePending = false;\n        this._updateOffsetSize();\n      }\n\n      // Delay resetting the flag until animation frame\n      // to avoid updating offset size again on resize.\n      requestAnimationFrame(() => {\n        this.__isDrawerAnimating = false;\n      });\n    });\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    window.removeEventListener('resize', this.__boundResizeListener);\n    this.removeEventListener('drawer-toggle-click', this.__drawerToggleClickListener);\n    window.removeEventListener('close-overlay-drawer', this.__drawerToggleClickListener);\n    window.removeEventListener('keydown', this.__onDrawerKeyDown);\n  }\n\n  /**\n   * A callback for the `primarySection` property observer.\n   *\n   * Ensures the property is set to its default value `navbar`\n   * whenever the new value is not one of the valid values: `navbar`, `drawer`.\n   *\n   * @param {string} value\n   * @private\n   */\n  __primarySectionChanged(value) {\n    const isValid = ['navbar', 'drawer'].includes(value);\n    if (!isValid) {\n      this.set('primarySection', 'navbar');\n    }\n  }\n\n  /**\n   * A callback for the `drawerOpened` property observer.\n   *\n   * When the drawer opens, the method ensures the drawer has a proper height and sets focus on it.\n   * As long as the drawer is open, the focus is trapped within the drawer.\n   *\n   * When the drawer closes, the method releases focus from the drawer, setting focus on the drawer toggle.\n   *\n   * @param {boolean} drawerOpened\n   * @param {boolean} oldDrawerOpened\n   * @private\n   */\n  __drawerOpenedChanged(drawerOpened, oldDrawerOpened) {\n    if (this.overlay) {\n      if (drawerOpened) {\n        this.__trapFocusInDrawer();\n      } else if (oldDrawerOpened) {\n        this.__releaseFocusFromDrawer();\n      }\n    }\n\n    this.__setAriaExpanded();\n  }\n\n  /**\n   * A callback for the `i18n` property observer.\n   *\n   * The method ensures the drawer has ARIA attributes updated\n   * once the `i18n` property changes.\n   *\n   * @private\n   */\n  __i18nChanged() {\n    this.__updateDrawerAriaAttributes();\n  }\n\n  /** @protected */\n  _afterFirstRender() {\n    this._blockAnimationUntilAfterNextRender();\n    this._updateOffsetSize();\n  }\n\n  /** @private */\n  _drawerToggleClick(e) {\n    e.stopPropagation();\n    this.drawerOpened = !this.drawerOpened;\n  }\n\n  /** @private */\n  __closeOverlayDrawer() {\n    if (this.overlay) {\n      this.drawerOpened = false;\n    }\n  }\n\n  /** @private */\n  __setAriaExpanded() {\n    const toggle = this.querySelector('vaadin-drawer-toggle');\n    if (toggle) {\n      toggle.setAttribute('aria-expanded', this.drawerOpened);\n    }\n  }\n\n  /** @protected */\n  _updateDrawerSize() {\n    const childCount = this.querySelectorAll('[slot=drawer]').length;\n    const drawer = this.$.drawer;\n\n    if (childCount === 0) {\n      drawer.setAttribute('hidden', '');\n    } else {\n      drawer.removeAttribute('hidden');\n    }\n    this._updateOffsetSize();\n  }\n\n  /** @private */\n  _resize() {\n    this._blockAnimationUntilAfterNextRender();\n    this._updateTouchOptimizedMode();\n    this._updateOverlayMode();\n  }\n\n  /** @protected */\n  _updateOffsetSize() {\n    const navbar = this.$.navbarTop;\n    const navbarRect = navbar.getBoundingClientRect();\n\n    const navbarBottom = this.$.navbarBottom;\n    const navbarBottomRect = navbarBottom.getBoundingClientRect();\n\n    this.style.setProperty('--_vaadin-app-layout-navbar-offset-size', `${navbarRect.height}px`);\n    this.style.setProperty('--_vaadin-app-layout-navbar-offset-size-bottom', `${navbarBottomRect.height}px`);\n\n    const drawer = this.$.drawer;\n    const drawerRect = drawer.getBoundingClientRect();\n\n    this.style.setProperty('--_vaadin-app-layout-drawer-offset-size', `${drawerRect.width}px`);\n  }\n\n  /** @protected */\n  _updateOverlayMode() {\n    const overlay = this._getCustomPropertyValue('--vaadin-app-layout-drawer-overlay') === 'true';\n\n    if (!this.overlay && overlay) {\n      // Changed from not overlay to overlay\n      this._drawerStateSaved = this.drawerOpened;\n      this.drawerOpened = false;\n    }\n\n    this._setOverlay(overlay);\n\n    if (!this.overlay && this._drawerStateSaved) {\n      this.drawerOpened = this._drawerStateSaved;\n      this._drawerStateSaved = null;\n    }\n\n    this.__updateDrawerAriaAttributes();\n  }\n\n  /**\n   * Updates ARIA attributes on the drawer depending on the drawer mode.\n   *\n   * - In the overlay mode, the method marks the drawer with ARIA attributes as a dialog\n   * labelled with the `i18n.drawer` property.\n   * - In the normal mode, the method removes the ARIA attributes that has been set for the overlay mode.\n   *\n   * @private\n   */\n  __updateDrawerAriaAttributes() {\n    const drawer = this.$.drawer;\n    if (this.overlay) {\n      drawer.setAttribute('role', 'dialog');\n      drawer.setAttribute('aria-modal', 'true');\n      drawer.setAttribute('aria-label', this.i18n.drawer);\n    } else {\n      drawer.removeAttribute('role');\n      drawer.removeAttribute('aria-modal');\n      drawer.removeAttribute('aria-label');\n    }\n  }\n\n  /**\n   * Returns a promise that resolves when the drawer opening/closing CSS transition ends.\n   *\n   * The method relies on the `--vaadin-app-layout-transition` CSS variable to detect whether\n   * the drawer has a CSS transition that needs to be awaited. If the CSS variable equals `none`,\n   * the promise resolves immediately.\n   *\n   * @return {Promise}\n   * @private\n   */\n  __drawerTransitionComplete() {\n    return new Promise((resolve) => {\n      if (this._getCustomPropertyValue('--vaadin-app-layout-transition') === 'none') {\n        resolve();\n        return;\n      }\n\n      this.$.drawer.addEventListener('transitionend', resolve, { once: true });\n    });\n  }\n\n  /** @private */\n  async __trapFocusInDrawer() {\n    // Wait for the drawer CSS transition before focusing the drawer\n    // in order for VoiceOver to have a proper outline.\n    await this.__drawerTransitionComplete();\n\n    if (!this.drawerOpened) {\n      // The drawer has been closed during the CSS transition.\n      return;\n    }\n\n    this.$.drawer.setAttribute('tabindex', '0');\n\n    this.__ariaModalController.showModal();\n    this.__focusTrapController.trapFocus(this.$.drawer);\n  }\n\n  /** @private */\n  async __releaseFocusFromDrawer() {\n    // Wait for the drawer CSS transition in order to restore focus to the toggle\n    // only after `visibility` becomes `hidden`, that is, the drawer becomes inaccessible by the tabbing navigation.\n    await this.__drawerTransitionComplete();\n\n    if (this.drawerOpened) {\n      // The drawer has been opened during the CSS transition.\n      return;\n    }\n\n    this.__ariaModalController.close();\n    this.__focusTrapController.releaseFocus();\n    this.$.drawer.removeAttribute('tabindex');\n\n    // Move focus to the drawer toggle when closing the drawer.\n    const toggle = this.querySelector('vaadin-drawer-toggle');\n    if (toggle) {\n      toggle.focus();\n      toggle.setAttribute('focus-ring', 'focus');\n    }\n  }\n\n  /**\n   * Closes the drawer on Escape press if it has been opened in the overlay mode.\n   *\n   * @param {KeyboardEvent} event\n   * @private\n   */\n  __onDrawerKeyDown(event) {\n    if (event.key === 'Escape' && this.overlay) {\n      this.drawerOpened = false;\n    }\n  }\n\n  /** @private */\n  _closeDrawerOnChanged(closeDrawerOn, oldCloseDrawerOn) {\n    if (oldCloseDrawerOn) {\n      window.removeEventListener(oldCloseDrawerOn, this.__closeOverlayDrawerListener);\n    }\n    if (closeDrawerOn) {\n      window.addEventListener(closeDrawerOn, this.__closeOverlayDrawerListener);\n    }\n  }\n\n  /** @private */\n  _onBackdropClick() {\n    this._close();\n  }\n\n  /** @private */\n  _onBackdropTouchend(event) {\n    // Prevent the click event from being fired\n    // on clickable element behind the backdrop\n    event.preventDefault();\n\n    this._close();\n  }\n\n  /** @protected */\n  _close() {\n    this.drawerOpened = false;\n  }\n\n  /** @private */\n  _getCustomPropertyValue(customProperty) {\n    const customPropertyValue = getComputedStyle(this).getPropertyValue(customProperty);\n    return (customPropertyValue || '').trim().toLowerCase();\n  }\n\n  /** @protected */\n  _updateTouchOptimizedMode() {\n    const touchOptimized = this._getCustomPropertyValue('--vaadin-app-layout-touch-optimized') === 'true';\n\n    const navbarItems = this.querySelectorAll('[slot*=\"navbar\"]');\n\n    if (navbarItems.length > 0) {\n      Array.from(navbarItems).forEach((navbar) => {\n        if (navbar.getAttribute('slot').indexOf('touch-optimized') > -1) {\n          navbar.__touchOptimized = true;\n        }\n\n        if (touchOptimized && navbar.__touchOptimized) {\n          navbar.setAttribute('slot', 'navbar-bottom');\n        } else {\n          navbar.setAttribute('slot', 'navbar');\n        }\n      });\n    }\n\n    if (this.$.navbarTop.querySelector('[name=navbar]').assignedNodes().length === 0) {\n      this.$.navbarTop.setAttribute('hidden', '');\n    } else {\n      this.$.navbarTop.removeAttribute('hidden');\n    }\n\n    if (this.$.navbarBottom.querySelector('[name=navbar-bottom]').assignedNodes().length === 0) {\n      this.$.navbarBottom.setAttribute('hidden', '');\n    } else {\n      this.$.navbarBottom.removeAttribute('hidden');\n    }\n\n    this._updateOffsetSize();\n  }\n\n  /** @protected */\n  _blockAnimationUntilAfterNextRender() {\n    this.setAttribute('no-anim', '');\n    afterNextRender(this, () => {\n      this.removeAttribute('no-anim');\n    });\n  }\n\n  /**\n   * App Layout listens to `close-overlay-drawer` on the window level.\n   * A custom event can be dispatched and the App Layout will close the drawer in overlay.\n   *\n   * That can be used, for instance, when a navigation occurs when user clicks in a menu item inside the drawer.\n   *\n   * See `dispatchCloseOverlayDrawerEvent()` helper method.\n   *\n   * @event close-overlay-drawer\n   */\n}\n\ndefineCustomElement(AppLayout);\n\nexport { AppLayout };\n", "export * from \"@vaadin/app-layout/vaadin-app-layout.js\";\nexport * from './generated/AppLayout.js';\n", "import type { EventName } from \"@lit-labs/react\";\nimport { AppLayout as AppLayoutElement, type AppLayoutEventMap as _AppLayoutEventMap, } from \"@vaadin/app-layout/vaadin-app-layout.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { AppLayoutElement, };\nexport type AppLayoutEventMap = Readonly<{\n    onPrimarySectionChanged: EventName<_AppLayoutEventMap[\"primary-section-changed\"]>;\n    onDrawerOpenedChanged: EventName<_AppLayoutEventMap[\"drawer-opened-changed\"]>;\n    onOverlayChanged: EventName<_AppLayoutEventMap[\"overlay-changed\"]>;\n}>;\nconst events = { onPrimarySectionChanged: \"primary-section-changed\", onDrawerOpenedChanged: \"drawer-opened-changed\", onOverlayChanged: \"overlay-changed\" } as AppLayoutEventMap;\nexport type AppLayoutProps = WebComponentProps<AppLayoutElement, AppLayoutEventMap>;\nexport const AppLayout = createComponent({\n    elementClass: AppLayoutElement, events, react: React, tagName: \"vaadin-app-layout\"\n});\n"],
  "mappings": "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",
  "names": ["events", "AppLayout", "createComponent", "AppLayoutElement", "React"]
}
