{
  "version": 3,
  "sources": ["../../atmosphere.js/lib/atmosphere.js", "../../atmosphere.js/lib/browser.js", "../../js-cookie/dist/js.cookie.mjs", "../../@hilla/frontend/src/CookieManager.ts", "../../@hilla/frontend/src/CsrfUtils.ts", "../../@hilla/frontend/src/Authentication.ts", "../../@vaadin/common-frontend/src/ConnectionState.ts", "../../tslib/tslib.es6.mjs", "../../@vaadin/common-frontend/src/ConnectionIndicator.ts", "../../@vaadin/common-frontend/src/index.ts", "../../@hilla/frontend/src/EndpointErrors.ts", "../../@hilla/frontend/src/FluxConnection.ts", "../../@hilla/frontend/src/FluxMessages.ts", "../../@hilla/frontend/src/Connect.ts", "../../@hilla/frontend/src/index.ts"],
  "sourcesContent": ["/*\n * Copyright 2011-2021 Async-IO.org\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Atmosphere.js\n * https://github.com/Atmosphere/atmosphere-javascript\n *\n * API reference\n * https://github.com/Atmosphere/atmosphere/wiki/jQuery.atmosphere.js-API\n *\n * Highly inspired by\n * - Portal by Donghwan Kim http://flowersinthesand.github.io/portal/\n */\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        // AMD\n        define(factory);\n    } else if (typeof exports !== 'undefined') {\n        // CommonJS\n        module.exports = factory();\n    } else {\n        // Browser globals, Window\n        root.atmosphere = factory();\n    }\n}(this, function () {\n\n    \"use strict\";\n\n    var atmosphere = {},\n        guid,\n        offline = false,\n        requests = [],\n        callbacks = [],\n        uuid = 0,\n        hasOwn = Object.prototype.hasOwnProperty;\n\n    atmosphere = {\n        version: \"3.1.3-javascript\",\n        onError: function (response) {\n        },\n        onClose: function (response) {\n        },\n        onOpen: function (response) {\n        },\n        onReopen: function (response) {\n        },\n        onMessage: function (response) {\n        },\n        onReconnect: function (request, response) {\n        },\n        onMessagePublished: function (response) {\n        },\n        onTransportFailure: function (errorMessage, _request) {\n        },\n        onLocalMessage: function (response) {\n        },\n        onFailureToReconnect: function (request, response) {\n        },\n        onClientTimeout: function (request) {\n        },\n        onOpenAfterResume: function (request) {\n        },\n\n        /**\n         * Creates an object based on an atmosphere subscription that exposes functions defined by the Websocket interface.\n         *\n         * @class WebsocketApiAdapter\n         * @param {Object} request the request object to build the underlying subscription\n         * @constructor\n         */\n        WebsocketApiAdapter: function (request) {\n            var _socket, _adapter;\n\n            /**\n             * Overrides the onMessage callback in given request.\n             *\n             * @method onMessage\n             * @param {Object} e the event object\n             */\n            request.onMessage = function (e) {\n                _adapter.onmessage({data: e.responseBody});\n            };\n\n            /**\n             * Overrides the onMessagePublished callback in given request.\n             *\n             * @method onMessagePublished\n             * @param {Object} e the event object\n             */\n            request.onMessagePublished = function (e) {\n                _adapter.onmessage({data: e.responseBody});\n            };\n\n            /**\n             * Overrides the onOpen callback in given request to proxy the event to the adapter.\n             *\n             * @method onOpen\n             * @param {Object} e the event object\n             */\n            request.onOpen = function (e) {\n                _adapter.onopen(e);\n            };\n\n            _adapter = {\n                close: function () {\n                    _socket.close();\n                },\n\n                send: function (data) {\n                    _socket.push(data);\n                },\n\n                onmessage: function (e) {\n                },\n\n                onopen: function (e) {\n                },\n\n                onclose: function (e) {\n                },\n\n                onerror: function (e) {\n\n                }\n            };\n            _socket = new atmosphere.subscribe(request);\n\n            return _adapter;\n        },\n\n        AtmosphereRequest: function (options) {\n\n            /**\n             * {Object} Request parameters.\n             *\n             * @private\n             */\n            var _request = {\n                timeout: 300000,\n                method: 'GET',\n                headers: {},\n                contentType: '',\n                callback: null,\n                url: '',\n                data: '',\n                suspend: true,\n                maxRequest: -1,\n                reconnect: true,\n                maxStreamingLength: 10000000,\n                lastIndex: 0,\n                logLevel: 'info',\n                requestCount: 0,\n                fallbackMethod: 'GET',\n                fallbackTransport: 'streaming',\n                transport: 'long-polling',\n                webSocketImpl: null,\n                webSocketBinaryType: null,\n                dispatchUrl: null,\n                webSocketPathDelimiter: \"@@\",\n                enableXDR: false,\n                rewriteURL: false,\n                attachHeadersAsQueryString: true,\n                executeCallbackBeforeReconnect: false,\n                readyState: 0,\n                withCredentials: false,\n                trackMessageLength: false,\n                messageDelimiter: '|',\n                connectTimeout: -1,\n                reconnectInterval: 0,\n                dropHeaders: true,\n                uuid: 0,\n                shared: false,\n                readResponsesHeaders: false,\n                maxReconnectOnClose: 5,\n                enableProtocol: true,\n                disableDisconnect: false,\n                pollingInterval: 0,\n                heartbeat: {\n                    client: null,\n                    server: null\n                },\n                ackInterval: 0,\n                reconnectOnServerError: true,\n                handleOnlineOffline: true,\n                maxWebsocketErrorRetries: 1,\n                curWebsocketErrorRetries: 0,\n                unloadBackwardCompat: !navigator.sendBeacon,\n                onError: function (response) {\n                },\n                onClose: function (response) {\n                },\n                onOpen: function (response) {\n                },\n                onMessage: function (response) {\n                },\n                onReopen: function (request, response) {\n                },\n                onReconnect: function (request, response) {\n                },\n                onMessagePublished: function (response) {\n                },\n                onTransportFailure: function (reason, request) {\n                },\n                onLocalMessage: function (request) {\n                },\n                onFailureToReconnect: function (request, response) {\n                },\n                onClientTimeout: function (request) {\n                },\n                onOpenAfterResume: function (request) {\n                }\n            };\n\n            /**\n             * {Object} Request's last response.\n             *\n             * @private\n             */\n            var _response = {\n                status: 200,\n                reasonPhrase: \"OK\",\n                responseBody: '',\n                messages: [],\n                headers: [],\n                state: \"messageReceived\",\n                transport: \"polling\",\n                error: null,\n                request: null,\n                partialMessage: \"\",\n                errorHandled: false,\n                closedByClientTimeout: false,\n                ffTryingReconnect: false\n            };\n\n            /**\n             * {websocket} Opened web socket.\n             *\n             * @private\n             */\n            var _websocket = null;\n\n            /**\n             * {SSE} Opened SSE.\n             *\n             * @private\n             */\n            var _sse = null;\n\n            /**\n             * {XMLHttpRequest, ActiveXObject} Opened ajax request (in case of http-streaming or long-polling)\n             *\n             * @private\n             */\n            var _activeRequest = null;\n\n            /**\n             * {Object} Object use for streaming with IE.\n             *\n             * @private\n             */\n            var _ieStream = null;\n\n            /**\n             * {Object} Object use for jsonp transport.\n             *\n             * @private\n             */\n            var _jqxhr = null;\n\n            /**\n             * {boolean} If request has been subscribed or not.\n             *\n             * @private\n             */\n            var _subscribed = true;\n\n            /**\n             * {number} Number of test reconnection.\n             *\n             * @private\n             */\n            var _requestCount = 0;\n\n            /**\n             * The Heartbeat interval send by the server.\n             * @type {int}\n             * @private\n             */\n            var _heartbeatInterval = 0;\n\n            /**\n             * The Heartbeat bytes send by the server.\n             * @type {string}\n             * @private\n             */\n            var _heartbeatPadding = 'X';\n\n            /**\n             * {boolean} If request is currently aborted.\n             *\n             * @private\n             */\n            var _abortingConnection = false;\n\n            /**\n             * A local \"channel' of communication.\n             *\n             * @private\n             */\n            var _localSocketF = null;\n\n            /**\n             * The storage used.\n             *\n             * @private\n             */\n            var _storageService;\n\n            /**\n             * Local communication\n             *\n             * @private\n             */\n            var _localStorageService = null;\n\n            /**\n             * A Unique ID\n             *\n             * @private\n             */\n            var guid = atmosphere.util.now();\n\n            /** Trace time */\n            var _traceTimer;\n\n            /** Key for connection sharing */\n            var _sharingKey;\n\n            /**\n             * {boolean} If window beforeUnload event has been called.\n             * Flag will be reset after 5000 ms\n             *\n             * @private\n             */\n            var _beforeUnloadState = false;\n\n            // Automatic call to subscribe\n            _subscribe(options);\n\n            /**\n             * Initialize atmosphere request object.\n             *\n             * @private\n             */\n            function _init() {\n                _subscribed = true;\n                _abortingConnection = false;\n                _requestCount = 0;\n\n                _websocket = null;\n                _sse = null;\n                _activeRequest = null;\n                _ieStream = null;\n            }\n\n            /**\n             * Re-initialize atmosphere object.\n             *\n             * @private\n             */\n            function _reinit() {\n                _clearState();\n                _init();\n            }\n\n            /**\n             * Returns true if the given level is equal or above the configured log level.\n             *\n             * @private\n             */\n            function _canLog(level) {\n                if (level == 'debug') {\n                    return _request.logLevel === 'debug';\n                } else if (level == 'info') {\n                    return _request.logLevel === 'info' || _request.logLevel === 'debug';\n                } else if (level == 'warn') {\n                    return _request.logLevel === 'warn' || _request.logLevel === 'info' || _request.logLevel === 'debug';\n                } else if (level == 'error') {\n                    return _request.logLevel === 'error' || _request.logLevel === 'warn' || _request.logLevel === 'info' || _request.logLevel === 'debug';\n                } else {\n                    return false;\n                }\n            }\n\n            function _debug(msg) {\n                if (_canLog('debug')) {\n                    atmosphere.util.debug(new Date() + \" Atmosphere: \" + msg);\n                }\n            }\n\n            /**\n             *\n             * @private\n             */\n            function _verifyStreamingLength(ajaxRequest, rq) {\n                // Wait to be sure we have the full message before closing.\n                if (_response.partialMessage === \"\" && (rq.transport === 'streaming') && (ajaxRequest.responseText.length > rq.maxStreamingLength)) {\n                    return true;\n                }\n                return false;\n            }\n\n            /**\n             * Disconnect\n             *\n             * @private\n             */\n            function _disconnect() {\n                if (_request.enableProtocol && !_request.disableDisconnect && !_request.firstMessage) {\n                    var query = \"X-Atmosphere-Transport=close&X-Atmosphere-tracking-id=\" + _request.uuid;\n\n                    atmosphere.util.each(_request.headers, function (name, value) {\n                        var h = atmosphere.util.isFunction(value) ? value.call(this, _request, _request, _response) : value;\n                        if (h != null) {\n                            query += \"&\" + encodeURIComponent(name) + \"=\" + encodeURIComponent(h);\n                        }\n                    });\n\n                    var url = _request.url.replace(/([?&])_=[^&]*/, query);\n                    url = url + (url === _request.url ? (/\\?/.test(_request.url) ? \"&\" : \"?\") + query : \"\");\n\n                    var rq = {\n                        connected: false\n                    };\n                    var closeR = new atmosphere.AtmosphereRequest(rq);\n                    closeR.connectTimeout = _request.connectTimeout;\n                    closeR.attachHeadersAsQueryString = false;\n                    closeR.dropHeaders = true;\n                    closeR.url = url;\n                    closeR.contentType = \"text/plain\";\n                    closeR.transport = 'polling';\n                    closeR.method = 'GET';\n                    closeR.data = '';\n                    closeR.heartbeat = null;\n                    if (_request.enableXDR) {\n                        closeR.enableXDR = _request.enableXDR\n                    }\n                    _pushOnClose(\"\", closeR);\n                }\n            }\n\n            /**\n             * Close request.\n             *\n             * @private\n             */\n            function _close() {\n                _debug(\"Closing (AtmosphereRequest._close() called)\");\n\n                _abortingConnection = true;\n                if (_request.reconnectId) {\n                    clearTimeout(_request.reconnectId);\n                    delete _request.reconnectId;\n                }\n\n                if (_request.heartbeatTimer) {\n                    clearTimeout(_request.heartbeatTimer);\n                }\n\n                _request.reconnect = false;\n                _response.request = _request;\n                _response.state = 'unsubscribe';\n                _response.responseBody = \"\";\n                _response.status = 408;\n                _response.partialMessage = \"\";\n                _request.curWebsocketErrorRetries = 0;\n                _invokeCallback();\n                _disconnect();\n                _clearState();\n            }\n\n            function _clearState() {\n                _response.partialMessage = \"\";\n                if (_request.id) {\n                    clearTimeout(_request.id);\n                }\n\n                if (_request.heartbeatTimer) {\n                    clearTimeout(_request.heartbeatTimer);\n                }\n\n                // https://github.com/Atmosphere/atmosphere/issues/1860#issuecomment-74707226\n                if (_request.reconnectId) {\n                    clearTimeout(_request.reconnectId);\n                    delete _request.reconnectId;\n                }\n\n                if (_ieStream != null) {\n                    _ieStream.close();\n                    _ieStream = null;\n                }\n                if (_jqxhr != null) {\n                    _jqxhr.abort();\n                    _jqxhr = null;\n                }\n                if (_activeRequest != null) {\n                    _activeRequest.abort();\n                    _activeRequest = null;\n                }\n                if (_websocket != null) {\n                    if (_websocket.canSendMessage) {\n                        _debug(\"invoking .close() on WebSocket object\");\n                        _websocket.close();\n                    }\n                    _websocket = null;\n                }\n                if (_sse != null) {\n                    _sse.close();\n                    _sse = null;\n                }\n                _clearStorage();\n            }\n\n            function _clearStorage() {\n                // Stop sharing a connection\n                if (_storageService != null) {\n                    // Clears trace timer\n                    clearInterval(_traceTimer);\n                    // Removes the trace\n                    document.cookie = _sharingKey + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n                    // The heir is the parent unless unloading\n                    _storageService.signal(\"close\", {\n                        reason: \"\",\n                        heir: !_abortingConnection ? guid : (_storageService.get(\"children\") || [])[0]\n                    });\n                    _storageService.close();\n                }\n                if (_localStorageService != null) {\n                    _localStorageService.close();\n                }\n            }\n\n            /**\n             * Subscribe request using request transport. <br>\n             * If request is currently opened, this one will be closed.\n             *\n             * @param {Object} Request parameters.\n             * @private\n             */\n            function _subscribe(options) {\n                _reinit();\n\n                _request = atmosphere.util.extend(_request, options);\n                // Allow at least 1 request\n                _request.mrequest = _request.reconnect;\n                if (!_request.reconnect) {\n                    _request.reconnect = true;\n                }\n            }\n\n            /**\n             * Check if web socket is supported (check for custom implementation provided by request object or browser implementation).\n             *\n             * @returns {boolean} True if web socket is supported, false otherwise.\n             * @private\n             */\n            function _supportWebsocket() {\n                return _request.webSocketImpl != null || window.WebSocket || window.MozWebSocket;\n            }\n\n            /**\n             * Check if server side events (SSE) is supported (check for custom implementation provided by request object or browser implementation).\n             *\n             * @returns {boolean} True if web socket is supported, false otherwise.\n             * @private\n             */\n            function _supportSSE() {\n                // Origin parts\n                var url = atmosphere.util.getAbsoluteURL(_request.url.toLowerCase());\n                var parts = /^([\\w\\+\\.\\-]+:)(?:\\/\\/([^\\/?#:]*)(?::(\\d+))?)?/.exec(url);\n                var crossOrigin = !!(parts && (\n                    // protocol\n                    parts[1] != window.location.protocol ||\n                    // hostname\n                    parts[2] != window.location.hostname ||\n                    // port\n                    (parts[3] || (parts[1] === \"http:\" ? 80 : 443)) != (window.location.port || (window.location.protocol === \"http:\" ? 80 : 443))\n                ));\n                return window.EventSource && (!crossOrigin || !atmosphere.util.browser.safari || atmosphere.util.browser.vmajor >= 7);\n            }\n\n            /**\n             * Open request using request transport. <br>\n             * If request transport is 'websocket' but websocket can't be opened, request will automatically reconnect using fallback transport.\n             *\n             * @private\n             */\n            function _execute() {\n                // Shared across multiple tabs/windows.\n                if (_request.shared) {\n                    _localStorageService = _local(_request);\n                    if (_localStorageService != null) {\n                        if (_canLog('debug')) {\n                            atmosphere.util.debug(\"Storage service available. All communication will be local\");\n                        }\n\n                        if (_localStorageService.open(_request)) {\n                            // Local connection.\n                            return;\n                        }\n                    }\n\n                    if (_canLog('debug')) {\n                        atmosphere.util.debug(\"No Storage service available.\");\n                    }\n                    // Wasn't local or an error occurred\n                    _localStorageService = null;\n                }\n\n                // Protocol\n                _request.firstMessage = uuid == 0 ? true : false;\n                _request.isOpen = false;\n                _request.ctime = atmosphere.util.now();\n\n                // We carry any UUID set by the user or from a previous connection.\n                if (_request.uuid === 0) {\n                    _request.uuid = uuid;\n                }\n                _response.closedByClientTimeout = false;\n\n                if (_request.transport !== 'websocket' && _request.transport !== 'sse') {\n                    _executeRequest(_request);\n\n                } else if (_request.transport === 'websocket') {\n                    if (!_supportWebsocket()) {\n                        _reconnectWithFallbackTransport(\"Websocket is not supported, using request.fallbackTransport (\" + _request.fallbackTransport\n                            + \")\");\n                    } else {\n                        _executeWebSocket(false);\n                    }\n                } else if (_request.transport === 'sse') {\n                    if (!_supportSSE()) {\n                        _reconnectWithFallbackTransport(\"Server Side Events(SSE) is not supported, using request.fallbackTransport (\"\n                            + _request.fallbackTransport + \")\");\n                    } else {\n                        _executeSSE(false);\n                    }\n                }\n            }\n\n            function _local(request) {\n                var trace, connector, orphan, name = \"atmosphere-\" + request.url, connectors = {\n                    storage: function () {\n                        function onstorage(event) {\n                            if (event.key === name && event.newValue) {\n                                listener(event.newValue);\n                            }\n                        }\n\n                        if (!atmosphere.util.storage) {\n                            return;\n                        }\n\n                        var storage = window.localStorage,\n                            get = function (key) {\n                                var item = storage.getItem(name + \"-\" + key);\n                                return item === null ? [] : JSON.parse(item);\n                            },\n                            set = function (key, value) {\n                                storage.setItem(name + \"-\" + key, JSON.stringify(value));\n                            };\n\n                        return {\n                            init: function () {\n                                set(\"children\", get(\"children\").concat([guid]));\n                                atmosphere.util.on(window, \"storage\", onstorage);\n                                return get(\"opened\");\n                            },\n                            signal: function (type, data) {\n                                storage.setItem(name, JSON.stringify({\n                                    target: \"p\",\n                                    type: type,\n                                    data: data\n                                }));\n                            },\n                            close: function () {\n                                var children = get(\"children\");\n\n                                atmosphere.util.off(window, \"storage\", onstorage);\n                                if (children) {\n                                    if (removeFromArray(children, request.id)) {\n                                        set(\"children\", children);\n                                    }\n                                }\n                            }\n                        };\n                    },\n                    windowref: function () {\n                        var win = window.open(\"\", name.replace(/\\W/g, \"\"));\n\n                        if (!win || win.closed || !win.callbacks) {\n                            return;\n                        }\n\n                        return {\n                            init: function () {\n                                win.callbacks.push(listener);\n                                win.children.push(guid);\n                                return win.opened;\n                            },\n                            signal: function (type, data) {\n                                if (!win.closed && win.fire) {\n                                    win.fire(JSON.stringify({\n                                        target: \"p\",\n                                        type: type,\n                                        data: data\n                                    }));\n                                }\n                            },\n                            close: function () {\n                                // Removes traces only if the parent is alive\n                                if (!orphan) {\n                                    removeFromArray(win.callbacks, listener);\n                                    removeFromArray(win.children, guid);\n                                }\n                            }\n\n                        };\n                    }\n                };\n\n                function removeFromArray(array, val) {\n                    var i, length = array.length;\n\n                    for (i = 0; i < length; i++) {\n                        if (array[i] === val) {\n                            array.splice(i, 1);\n                        }\n                    }\n\n                    return length !== array.length;\n                }\n\n                // Receives open, close and message command from the parent\n                function listener(string) {\n                    var command = JSON.parse(string), data = command.data;\n\n                    if (command.target === \"c\") {\n                        switch (command.type) {\n                            case \"open\":\n                                _open(\"opening\", 'local', _request);\n                                break;\n                            case \"close\":\n                                if (!orphan) {\n                                    orphan = true;\n                                    if (data.reason === \"aborted\") {\n                                        _close();\n                                    } else {\n                                        // Gives the heir some time to reconnect\n                                        if (data.heir === guid) {\n                                            _execute();\n                                        } else {\n                                            setTimeout(function () {\n                                                _execute();\n                                            }, 100);\n                                        }\n                                    }\n                                }\n                                break;\n                            case \"message\":\n                                _prepareCallback(data, \"messageReceived\", 200, request.transport);\n                                break;\n                            case \"localMessage\":\n                                _localMessage(data);\n                                break;\n                        }\n                    }\n                }\n\n                function findTrace() {\n                    var matcher = new RegExp(\"(?:^|; )(\" + encodeURIComponent(name) + \")=([^;]*)\").exec(document.cookie);\n                    if (matcher) {\n                        return JSON.parse(decodeURIComponent(matcher[2]));\n                    }\n                }\n\n                // Finds and validates the parent socket's trace from the cookie\n                trace = findTrace();\n                if (!trace || atmosphere.util.now() - trace.ts > 1000) {\n                    return;\n                }\n\n                // Chooses a connector\n                connector = connectors.storage() || connectors.windowref();\n                if (!connector) {\n                    return;\n                }\n\n                return {\n                    open: function () {\n                        var parentOpened;\n\n                        // Checks the shared one is alive\n                        _traceTimer = setInterval(function () {\n                            var oldTrace = trace;\n                            trace = findTrace();\n                            if (!trace || oldTrace.ts === trace.ts) {\n                                // Simulates a close signal\n                                listener(JSON.stringify({\n                                    target: \"c\",\n                                    type: \"close\",\n                                    data: {\n                                        reason: \"error\",\n                                        heir: oldTrace.heir\n                                    }\n                                }));\n                            }\n                        }, 1000);\n\n                        parentOpened = connector.init();\n                        if (parentOpened) {\n                            // Firing the open event without delay robs the user of the opportunity to bind connecting event handlers\n                            setTimeout(function () {\n                                _open(\"opening\", 'local', request);\n                            }, 50);\n                        }\n                        return parentOpened;\n                    },\n                    send: function (event) {\n                        connector.signal(\"send\", event);\n                    },\n                    localSend: function (event) {\n                        connector.signal(\"localSend\", JSON.stringify({\n                            id: guid,\n                            event: event\n                        }));\n                    },\n                    close: function () {\n                        // Do not signal the parent if this method is executed by the unload event handler\n                        if (!_abortingConnection) {\n                            clearInterval(_traceTimer);\n                            connector.signal(\"close\");\n                            connector.close();\n                        }\n                    }\n                };\n            }\n\n            function share() {\n                var storageService, name = \"atmosphere-\" + _request.url, servers = {\n                    // Powered by the storage event and the localStorage\n                    // http://www.w3.org/TR/webstorage/#event-storage\n                    storage: function () {\n                        function onstorage(event) {\n                            // When a deletion, newValue initialized to null\n                            if (event.key === name && event.newValue) {\n                                listener(event.newValue);\n                            }\n                        }\n\n                        if (!atmosphere.util.storage) {\n                            return;\n                        }\n\n                        var storage = window.localStorage;\n\n                        return {\n                            init: function () {\n                                // Handles the storage event\n                                atmosphere.util.on(window, \"storage\", onstorage);\n                            },\n                            signal: function (type, data) {\n                                storage.setItem(name, JSON.stringify({\n                                    target: \"c\",\n                                    type: type,\n                                    data: data\n                                }));\n                            },\n                            get: function (key) {\n                                return JSON.parse(storage.getItem(name + \"-\" + key));\n                            },\n                            set: function (key, value) {\n                                storage.setItem(name + \"-\" + key, JSON.stringify(value));\n                            },\n                            close: function () {\n                                atmosphere.util.off(window, \"storage\", onstorage);\n                                storage.removeItem(name);\n                                storage.removeItem(name + \"-opened\");\n                                storage.removeItem(name + \"-children\");\n                            }\n\n                        };\n                    },\n                    // Powered by the window.open method\n                    // https://developer.mozilla.org/en/DOM/window.open\n                    windowref: function () {\n                        // Internet Explorer raises an invalid argument error\n                        // when calling the window.open method with the name containing non-word characters\n                        var neim = name.replace(/\\W/g, \"\"), container = document.getElementById(neim), win;\n\n                        if (!container) {\n                            container = document.createElement(\"div\");\n                            container.id = neim;\n                            container.style.display = \"none\";\n                            container.innerHTML = '<iframe name=\"' + neim + '\"></iframe>';\n                            document.body.appendChild(container);\n                        }\n\n                        win = container.firstChild.contentWindow;\n\n                        return {\n                            init: function () {\n                                // Callbacks from different windows\n                                win.callbacks = [listener];\n                                // In IE 8 and less, only string argument can be safely passed to the function in other window\n                                win.fire = function (string) {\n                                    var i;\n\n                                    for (i = 0; i < win.callbacks.length; i++) {\n                                        win.callbacks[i](string);\n                                    }\n                                };\n                            },\n                            signal: function (type, data) {\n                                if (!win.closed && win.fire) {\n                                    win.fire(JSON.stringify({\n                                        target: \"c\",\n                                        type: type,\n                                        data: data\n                                    }));\n                                }\n                            },\n                            get: function (key) {\n                                return !win.closed ? win[key] : null;\n                            },\n                            set: function (key, value) {\n                                if (!win.closed) {\n                                    win[key] = value;\n                                }\n                            },\n                            close: function () {\n                            }\n                        };\n                    }\n                };\n\n                // Receives send and close command from the children\n                function listener(string) {\n                    var command = JSON.parse(string), data = command.data;\n\n                    if (command.target === \"p\") {\n                        switch (command.type) {\n                            case \"send\":\n                                _push(data);\n                                break;\n                            case \"localSend\":\n                                _localMessage(data);\n                                break;\n                            case \"close\":\n                                _close();\n                                break;\n                        }\n                    }\n                }\n\n                _localSocketF = function propagateMessageEvent(context) {\n                    storageService.signal(\"message\", context);\n                };\n\n                function leaveTrace() {\n                    document.cookie = _sharingKey + \"=\" +\n                        // Opera's JSON implementation ignores a number whose a last digit of 0 strangely\n                        // but has no problem with a number whose a last digit of 9 + 1\n                        encodeURIComponent(JSON.stringify({\n                            ts: atmosphere.util.now() + 1,\n                            heir: (storageService.get(\"children\") || [])[0]\n                        })) + \"; path=/\";\n                }\n\n                // Chooses a storageService\n                storageService = servers.storage() || servers.windowref();\n                storageService.init();\n\n                if (_canLog('debug')) {\n                    atmosphere.util.debug(\"Installed StorageService \" + storageService);\n                }\n\n                // List of children sockets\n                storageService.set(\"children\", []);\n\n                if (storageService.get(\"opened\") != null && !storageService.get(\"opened\")) {\n                    // Flag indicating the parent socket is opened\n                    storageService.set(\"opened\", false);\n                }\n                // Leaves traces\n                _sharingKey = encodeURIComponent(name);\n                leaveTrace();\n                _traceTimer = setInterval(leaveTrace, 1000);\n\n                _storageService = storageService;\n            }\n\n            /**\n             * @private\n             */\n            function _open(state, transport, request) {\n                if (_request.shared && transport !== 'local') {\n                    share();\n                }\n\n                if (_storageService != null) {\n                    _storageService.set(\"opened\", true);\n                }\n\n                request.close = function () {\n                    _close();\n                };\n\n                if (_requestCount > 0 && state === 're-connecting') {\n                    request.isReopen = true;\n                    _tryingToReconnect(_response);\n                } else if (!_response.error) {\n                    _response.request = request;\n                    var prevState = _response.state;\n                    _response.state = state;\n                    var prevTransport = _response.transport;\n                    _response.transport = transport;\n\n                    var _body = _response.responseBody;\n                    _invokeCallback();\n                    _response.responseBody = _body;\n\n                    _response.state = prevState;\n                    _response.transport = prevTransport;\n                }\n            }\n\n            /**\n             * Execute request using jsonp transport.\n             *\n             * @param request {Object} request Request parameters, if undefined _request object will be used.\n             * @private\n             */\n            function _jsonp(request) {\n                // When CORS is enabled, make sure we force the proper transport.\n                request.transport = \"jsonp\";\n\n                var rq = _request, script;\n                if ((request != null) && (typeof (request) !== 'undefined')) {\n                    rq = request;\n                }\n\n                _jqxhr = {\n                    open: function () {\n                        var callback = \"atmosphere\" + (++guid);\n\n                        function _reconnectOnFailure() {\n                            rq.lastIndex = 0;\n\n                            if (rq.openId) {\n                                clearTimeout(rq.openId);\n                            }\n\n                            if (rq.heartbeatTimer) {\n                                clearTimeout(rq.heartbeatTimer);\n                            }\n\n                            if (rq.reconnect && _requestCount++ < rq.maxReconnectOnClose) {\n                                _open('re-connecting', rq.transport, rq);\n                                _reconnect(_jqxhr, rq, request.reconnectInterval);\n                                rq.openId = setTimeout(function () {\n                                    _triggerOpen(rq);\n                                }, rq.reconnectInterval + 1000);\n                            } else {\n                                _onError(0, \"maxReconnectOnClose reached\");\n                            }\n                        }\n\n                        function poll() {\n                            var url = rq.url;\n                            if (rq.dispatchUrl != null) {\n                                url += rq.dispatchUrl;\n                            }\n\n                            var data = rq.data;\n                            if (rq.attachHeadersAsQueryString) {\n                                url = _attachHeaders(rq);\n                                if (data !== '') {\n                                    url += \"&X-Atmosphere-Post-Body=\" + encodeURIComponent(data);\n                                }\n                                data = '';\n                            }\n\n                            var head = document.head || document.getElementsByTagName(\"head\")[0] || document.documentElement;\n\n                            script = document.createElement(\"script\");\n                            script.src = url + \"&jsonpTransport=\" + callback;\n                            script.clean = function () {\n                                script.clean = script.onerror = script.onload = script.onreadystatechange = null;\n                                if (script.parentNode) {\n                                    script.parentNode.removeChild(script);\n                                }\n\n                                if (++request.scriptCount === 2) {\n                                    request.scriptCount = 1;\n                                    _reconnectOnFailure();\n                                }\n\n                            };\n                            script.onload = script.onreadystatechange = function () {\n                                _debug(\"jsonp.onload\");\n                                if (!script.readyState || /loaded|complete/.test(script.readyState)) {\n                                    script.clean();\n                                }\n                            };\n\n                            script.onerror = function () {\n                                _debug(\"jsonp.onerror\");\n                                request.scriptCount = 1;\n                                script.clean();\n                            };\n\n                            head.insertBefore(script, head.firstChild);\n                        }\n\n                        // Attaches callback\n                        window[callback] = function (msg) {\n                            _debug(\"jsonp.window\");\n                            request.scriptCount = 0;\n                            if (rq.reconnect && rq.maxRequest === -1 || rq.requestCount++ < rq.maxRequest) {\n\n                                // _readHeaders(_jqxhr, rq);\n                                if (!rq.executeCallbackBeforeReconnect) {\n                                    _reconnect(_jqxhr, rq, rq.pollingInterval);\n                                }\n\n                                if (msg != null && typeof msg !== 'string') {\n                                    try {\n                                        msg = msg.message;\n                                    } catch (err) {\n                                        // The message was partial\n                                    }\n                                }\n                                var skipCallbackInvocation = _trackMessageSize(msg, rq, _response);\n                                if (!skipCallbackInvocation) {\n                                    _prepareCallback(_response.responseBody, \"messageReceived\", 200, rq.transport);\n                                }\n\n                                if (rq.executeCallbackBeforeReconnect) {\n                                    _reconnect(_jqxhr, rq, rq.pollingInterval);\n                                }\n                                _timeout(rq);\n                            } else {\n                                atmosphere.util.log(_request.logLevel, [\"JSONP reconnect maximum try reached \" + _request.requestCount]);\n                                _onError(0, \"maxRequest reached\");\n                            }\n                        };\n                        setTimeout(function () {\n                            poll();\n                        }, 50);\n                    },\n                    abort: function () {\n                        if (script && script.clean) {\n                            script.clean();\n                        }\n                    }\n                };\n                _jqxhr.open();\n            }\n\n            /**\n             * Build websocket object.\n             *\n             * @param location {string} Web socket url.\n             * @returns {websocket} Web socket object.\n             * @private\n             */\n            function _getWebSocket(location) {\n                if (_request.webSocketImpl != null) {\n                    return _request.webSocketImpl;\n                } else {\n                    if (window.WebSocket) {\n                        return new WebSocket(location);\n                    } else {\n                        return new MozWebSocket(location);\n                    }\n                }\n            }\n\n            /**\n             * Build web socket url from request url.\n             *\n             * @return {string} Web socket url (start with \"ws\" or \"wss\" for secure web socket).\n             * @private\n             */\n            function _buildWebSocketUrl() {\n                return _attachHeaders(_request, atmosphere.util.getAbsoluteURL(_request.webSocketUrl || _request.url)).replace(/^http/, \"ws\");\n            }\n\n            /**\n             * Build SSE url from request url.\n             *\n             * @return a url with Atmosphere's headers\n             * @private\n             */\n            function _buildSSEUrl() {\n                var url = _attachHeaders(_request);\n                return url;\n            }\n\n            /**\n             * Open SSE. <br>\n             * Automatically use fallback transport if SSE can't be opened.\n             *\n             * @private\n             */\n            function _executeSSE(sseOpened) {\n\n                _response.transport = \"sse\";\n\n                var location = _buildSSEUrl();\n\n                if (_canLog('debug')) {\n                    atmosphere.util.debug(\"Invoking executeSSE\");\n                    atmosphere.util.debug(\"Using URL: \" + location);\n                }\n\n                if (sseOpened && !_request.reconnect) {\n                    if (_sse != null) {\n                        _clearState();\n                    }\n                    return;\n                }\n\n                try {\n                    _sse = new EventSource(location, {\n                        withCredentials: _request.withCredentials\n                    });\n                } catch (e) {\n                    _onError(0, e);\n                    _reconnectWithFallbackTransport(\"SSE failed. Downgrading to fallback transport and resending\");\n                    return;\n                }\n\n                if (_request.connectTimeout > 0) {\n                    _request.id = setTimeout(function () {\n                        if (!sseOpened) {\n                            _clearState();\n                        }\n                    }, _request.connectTimeout);\n                }\n\n                _sse.onopen = function () {\n                    _debug(\"sse.onopen\");\n                    _timeout(_request);\n                    if (_canLog('debug')) {\n                        atmosphere.util.debug(\"SSE successfully opened\");\n                    }\n\n                    if (!_request.enableProtocol) {\n                        if (!sseOpened) {\n                            _open('opening', \"sse\", _request);\n                        } else {\n                            _open('re-opening', \"sse\", _request);\n                        }\n                    } else if (_request.isReopen) {\n                        _request.isReopen = false;\n                        _open('re-opening', _request.transport, _request);\n                    }\n\n                    sseOpened = true;\n\n                    if (_request.method === 'POST') {\n                        _response.state = \"messageReceived\";\n                        _push(_request.data);\n                    }\n                };\n\n                _sse.onmessage = function (message) {\n                    _debug(\"sse.onmessage\");\n                    _timeout(_request);\n\n                    if (!_request.enableXDR && window.location.host && message.origin && message.origin !== window.location.protocol + \"//\" + window.location.host) {\n                        atmosphere.util.log(_request.logLevel, [\"Origin was not \" + window.location.protocol + \"//\" + window.location.host]);\n                        return;\n                    }\n\n                    _response.state = 'messageReceived';\n                    _response.status = 200;\n\n                    message = message.data;\n                    var skipCallbackInvocation = _trackMessageSize(message, _request, _response);\n\n                    // https://github.com/remy/polyfills/blob/master/EventSource.js\n                    // Since we polling.\n                    /* if (_sse.URL) {\n                     _sse.interval = 100;\n                     _sse.URL = _buildSSEUrl();\n                     } */\n\n                    if (!skipCallbackInvocation) {\n                        _invokeCallback();\n                        _response.responseBody = '';\n                        _response.messages = [];\n                    }\n                };\n\n                _sse.onerror = function () {\n                    _debug(\"sse.onerror\");\n                    clearTimeout(_request.id);\n\n                    if (_request.heartbeatTimer) {\n                        clearTimeout(_request.heartbeatTimer);\n                    }\n\n                    if (_response.closedByClientTimeout) {\n                        return;\n                    }\n\n                    _invokeClose(sseOpened);\n                    _clearState();\n\n                    if (_abortingConnection) {\n                        atmosphere.util.log(_request.logLevel, [\"SSE closed normally\"]);\n                    } else if (!sseOpened) {\n                        _reconnectWithFallbackTransport(\"SSE failed. Downgrading to fallback transport and resending\");\n                    } else if (_request.reconnect && (_response.transport === 'sse')) {\n                        if (_requestCount++ < _request.maxReconnectOnClose) {\n                            _open('re-connecting', _request.transport, _request);\n                            if (_request.reconnectInterval > 0) {\n                                // Prevent the online event to open a second connection while waiting for reconnect\n                                var handleOnlineOffline = _request.handleOnlineOffline;\n                                _request.handleOnlineOffline = false;\n                                _request.reconnectId = setTimeout(function () {\n                                    _request.handleOnlineOffline = handleOnlineOffline;\n                                    _executeSSE(true);\n                                }, _request.reconnectInterval);\n                            } else {\n                                _executeSSE(true);\n                            }\n                            _response.responseBody = \"\";\n                            _response.messages = [];\n                        } else {\n                            atmosphere.util.log(_request.logLevel, [\"SSE reconnect maximum try reached \" + _requestCount]);\n                            _onError(0, \"maxReconnectOnClose reached\");\n                        }\n                    }\n                };\n            }\n\n            /**\n             * Open web socket. <br>\n             * Automatically use fallback transport if web socket can't be opened.\n             *\n             * @private\n             */\n            function _executeWebSocket(webSocketOpened) {\n\n                _response.transport = \"websocket\";\n\n                var location = _buildWebSocketUrl(_request.url);\n                if (_canLog('debug')) {\n                    atmosphere.util.debug(\"Invoking executeWebSocket, using URL: \" + location);\n                }\n\n                if (webSocketOpened && !_request.reconnect) {\n                    if (_websocket != null) {\n                        _clearState();\n                    }\n                    return;\n                }\n\n                _websocket = _getWebSocket(location);\n                if (_request.webSocketBinaryType != null) {\n                    _websocket.binaryType = _request.webSocketBinaryType;\n                }\n\n                if (_request.connectTimeout > 0) {\n                    _request.id = setTimeout(function () {\n                        if (!webSocketOpened) {\n                            var _message = {\n                                code: 1002,\n                                reason: \"Connection timeout after \" + _request.connectTimeout + \"ms.\",\n                                wasClean: false\n                            };\n                            var socket = _websocket;\n                            // Close it anyway\n                            try {\n                                _clearState();\n                            } catch (e) {\n                            }\n                            socket.onclose(_message);\n                        }\n\n                    }, _request.connectTimeout);\n                }\n\n                _websocket.onopen = function () {\n                    if (_websocket == null) {\n                        this.close();\n                        if (_request.transport == \"websocket\")\n                            _close();\n                        return;\n                    }\n\n                    _debug(\"websocket.onopen\");\n                    if (!_request.enableProtocol || _request.connectTimeout <= 0)\n                        _timeout(_request);\n                    offline = false;\n\n                    if (_canLog('debug')) {\n                        atmosphere.util.debug(\"Websocket successfully opened\");\n                    }\n\n                    var reopening = webSocketOpened;\n\n                    _websocket.canSendMessage = true;\n\n                    if (!_request.enableProtocol) {\n                        webSocketOpened = true;\n                        if (reopening) {\n                            _open('re-opening', \"websocket\", _request);\n                        } else {\n                            _open('opening', \"websocket\", _request);\n                        }\n                    }\n\n                    if (_request.method === 'POST') {\n                        _response.state = \"messageReceived\";\n                        _websocket.send(_request.data);\n                    }\n                };\n\n                _websocket.onmessage = function (message) {\n                    if (_websocket == null) {\n                        this.close();\n                        if (_request.transport == \"websocket\")\n                            _close();\n                        return;\n                    }\n\n                    _debug(\"websocket.onmessage\");\n                    _timeout(_request);\n\n                    // We only consider it opened if we get the handshake data\n                    // https://github.com/Atmosphere/atmosphere-javascript/issues/74\n                    if (_request.enableProtocol) {\n                        webSocketOpened = true;\n                    }\n\n                    _response.state = 'messageReceived';\n                    _response.status = 200;\n\n                    message = message.data;\n                    var isString = typeof (message) === 'string';\n                    if (isString) {\n                        var skipCallbackInvocation = _trackMessageSize(message, _request, _response);\n                        if (!skipCallbackInvocation) {\n                            _invokeCallback();\n                            _response.responseBody = '';\n                            _response.messages = [];\n                        }\n                    } else {\n                        message = _handleProtocol(_request, message);\n                        if (message === \"\")\n                            return;\n\n                        _response.responseBody = message;\n                        _invokeCallback();\n                        _response.responseBody = null;\n                    }\n                };\n\n                _websocket.onerror = function () {\n                    _debug(\"websocket.onerror\");\n                    clearTimeout(_request.id);\n\n                    if (_request.heartbeatTimer) {\n                        clearTimeout(_request.heartbeatTimer);\n                    }\n\n                    _response.error = true;\n                };\n\n                _websocket.onclose = function (message) {\n                    _debug(\"websocket.onclose\");\n                    if (_response.transport !== 'websocket')\n                        return;\n                    clearTimeout(_request.id);\n                    if (_response.state === 'closed')\n                        return;\n\n                    var reason = message.reason;\n                    if (reason === \"\") {\n                        switch (message.code) {\n                            case 1000:\n                                reason = \"Normal closure; the connection successfully completed whatever purpose for which it was created.\";\n                                break;\n                            case 1001:\n                                reason = \"The endpoint is going away, either because of a server failure or because the \"\n                                    + \"browser is navigating away from the page that opened the connection.\";\n                                break;\n                            case 1002:\n                                reason = \"The endpoint is terminating the connection due to a protocol error.\";\n                                break;\n                            case 1003:\n                                reason = \"The connection is being terminated because the endpoint received data of a type it \"\n                                    + \"cannot accept (for example, a text-only endpoint received binary data).\";\n                                break;\n                            case 1004:\n                                reason = \"The endpoint is terminating the connection because a data frame was received that is too large.\";\n                                break;\n                            case 1005:\n                                reason = \"Unknown: no status code was provided even though one was expected.\";\n                                break;\n                            case 1006:\n                                reason = \"Connection was closed abnormally (that is, with no close frame being sent).\";\n                                break;\n                        }\n                    }\n\n                    if (_canLog('warn')) {\n                        atmosphere.util.warn(\"Websocket closed, reason: \" + reason + ' - wasClean: ' + message.wasClean);\n                    }\n\n                    if (_response.closedByClientTimeout || (_request.handleOnlineOffline && offline)) {\n                        // IFF online/offline events are handled and we happen to be offline, we stop all reconnect attempts and\n                        // resume them in the \"online\" event (if we get here in that case, something else went wrong as the\n                        // offline handler should stop any reconnect attempt).\n                        //\n                        // On the other hand, if we DO NOT handle online/offline events, we continue as before with reconnecting\n                        // even if we are offline. Failing to do so would stop all reconnect attemps forever.\n                        if (_request.reconnectId) {\n                            clearTimeout(_request.reconnectId);\n                            delete _request.reconnectId;\n                        }\n                        return;\n                    }\n\n                    _invokeClose(webSocketOpened);\n\n                    _response.state = 'closed';\n\n                    if (_abortingConnection) {\n                        atmosphere.util.log(_request.logLevel, [\"Websocket closed normally\"]);\n                    } else if (_response.error && _request.curWebsocketErrorRetries < _request.maxWebsocketErrorRetries && _requestCount + 1 < _request.maxReconnectOnClose) {\n                        _response.error = false;\n                        _request.curWebsocketErrorRetries++;\n                        _reconnectWebSocket();\n                    } else if ((_response.error || !webSocketOpened || _request.maxWebsocketErrorRetries === 0) && _request.fallbackTransport !== 'websocket') {\n                        _response.error = false;\n                        _reconnectWithFallbackTransport(\"Websocket failed on first connection attempt. Downgrading to \" + _request.fallbackTransport + \" and resending\");\n                    } else if (_request.reconnect) {\n                        _reconnectWebSocket();\n                    }\n                };\n\n                var ua = navigator.userAgent.toLowerCase();\n                var isAndroid = ua.indexOf(\"android\") > -1;\n                if (isAndroid && _websocket.url === undefined) {\n                    // Android 4.1 does not really support websockets and fails silently\n                    _websocket.onclose({\n                        reason: \"Android 4.1 does not support websockets.\",\n                        wasClean: false\n                    });\n                }\n            }\n\n            function _handleProtocol(request, message) {\n\n                var nMessage = message;\n                if (request.transport === 'polling') return nMessage;\n\n                if (request.enableProtocol && request.firstMessage && atmosphere.util.trim(message).length !== 0) {\n                    var pos = request.trackMessageLength ? 1 : 0;\n                    var messages = message.split(request.messageDelimiter);\n\n                    if (messages.length <= pos + 1) {\n                        // Something went wrong, normally with IE or when a message is written before the\n                        // handshake has been received.\n                        return nMessage;\n                    }\n\n                    request.firstMessage = false;\n                    request.uuid = atmosphere.util.trim(messages[pos]);\n\n                    if (messages.length <= pos + 2) {\n                        atmosphere.util.log('error', [\"Protocol data not sent by the server. \" +\n                        \"If you enable protocol on client side, be sure to install JavascriptProtocol interceptor on server side.\" +\n                        \"Also note that atmosphere-runtime 2.2+ should be used.\"]);\n                    }\n\n                    _heartbeatInterval = parseInt(atmosphere.util.trim(messages[pos + 1]), 10);\n                    _heartbeatPadding = messages[pos + 2];\n\n                    if (request.transport !== 'long-polling') {\n                        _triggerOpen(request);\n                    }\n                    uuid = request.uuid;\n                    nMessage = \"\";\n\n                    // We have trailing messages\n                    pos = request.trackMessageLength ? 4 : 3;\n                    if (messages.length > pos + 1) {\n                        for (var i = pos; i < messages.length; i++) {\n                            nMessage += messages[i];\n                            if (i + 1 !== messages.length) {\n                                nMessage += request.messageDelimiter;\n                            }\n                        }\n                    }\n\n                    if (request.ackInterval !== 0) {\n                        setTimeout(function () {\n                            _push(\"...ACK...\");\n                        }, request.ackInterval);\n                    }\n                } else if (request.enableProtocol && request.firstMessage && atmosphere.util.browser.msie && +atmosphere.util.browser.version.split(\".\")[0] < 10) {\n                    // In case we are getting some junk from IE\n                    atmosphere.util.log(_request.logLevel, [\"Receiving unexpected data from IE\"]);\n                } else {\n                    _triggerOpen(request);\n                }\n                return nMessage;\n            }\n\n            function _timeout(_request) {\n                clearTimeout(_request.id);\n                if (_request.timeout > 0 && _request.transport !== 'polling') {\n                    _request.id = setTimeout(function () {\n                        _onClientTimeout(_request);\n                        _disconnect();\n                        _clearState();\n                    }, _request.timeout);\n                }\n            }\n\n            function _onClientTimeout(_request) {\n                _response.closedByClientTimeout = true;\n                _response.state = 'closedByClient';\n                _response.responseBody = \"\";\n                _response.status = 408;\n                _response.messages = [];\n                _invokeCallback();\n            }\n\n            function _onError(code, reason) {\n                _clearState();\n                clearTimeout(_request.id);\n                _response.state = 'error';\n                _response.reasonPhrase = reason;\n                _response.responseBody = \"\";\n                _response.status = code;\n                _response.messages = [];\n                _invokeCallback();\n            }\n\n            /**\n             * Track received message and make sure callbacks/functions are only invoked when the complete message has been received.\n             *\n             * @param message\n             * @param request\n             * @param response\n             */\n            function _trackMessageSize(message, request, response) {\n                message = _handleProtocol(request, message);\n                if (message.length === 0)\n                    return true;\n\n                response.responseBody = message;\n\n                if (request.trackMessageLength) {\n                    // prepend partialMessage if any\n                    message = response.partialMessage + message;\n\n                    var messages = [];\n                    var messageStart = message.indexOf(request.messageDelimiter);\n                    if (messageStart != -1) {\n                        while (messageStart !== -1) {\n                            var str = message.substring(0, messageStart);\n                            var messageLength = +str;\n                            if (isNaN(messageLength)) {\n                                // Discard partial message, otherwise it would never recover from this condition\n                                response.partialMessage = '';\n                                throw new Error('message length \"' + str + '\" is not a number');\n                            }\n                            messageStart += request.messageDelimiter.length;\n                            if (messageStart + messageLength > message.length) {\n                                // message not complete, so there is no trailing messageDelimiter\n                                messageStart = -1;\n                            } else {\n                                // message complete, so add it\n                                messages.push(message.substring(messageStart, messageStart + messageLength));\n                                // remove consumed characters\n                                message = message.substring(messageStart + messageLength, message.length);\n                                messageStart = message.indexOf(request.messageDelimiter);\n                            }\n                        }\n\n                        /* keep any remaining data */\n                        response.partialMessage = message;\n\n                        if (messages.length !== 0) {\n                            response.responseBody = messages.join(request.messageDelimiter);\n                            response.messages = messages;\n                            return false;\n                        } else {\n                            response.responseBody = \"\";\n                            response.messages = [];\n                            return true;\n                        }\n                    }\n                }\n                response.responseBody = message;\n                response.messages = [message];\n                return false;\n            }\n\n            function _reconnectWebSocket() {\n                _clearState();\n                if (_requestCount++ < _request.maxReconnectOnClose) {\n                    _open('re-connecting', _request.transport, _request);\n                    if (_request.reconnectInterval > 0) {\n                        // Prevent the online event to open a second connection while waiting for reconnect\n                        var handleOnlineOffline = _request.handleOnlineOffline;\n                        _request.handleOnlineOffline = false;\n                        _request.reconnectId = setTimeout(function () {\n                            _request.handleOnlineOffline = handleOnlineOffline;\n                            _response.responseBody = \"\";\n                            _response.messages = [];\n                            _executeWebSocket(true);\n                        }, _request.reconnectInterval);\n                    } else {\n                        _response.responseBody = \"\";\n                        _response.messages = [];\n                        _executeWebSocket(true);\n                    }\n                } else {\n                    atmosphere.util.log(_request.logLevel, [\"Websocket reconnect maximum try reached \" + _requestCount]);\n                    _onError(0, \"maxReconnectOnClose reached\");\n                }\n            }\n\n            /**\n             * Reconnect request with fallback transport. <br>\n             * Used in case websocket can't be opened.\n             *\n             * @private\n             */\n            function _reconnectWithFallbackTransport(errorMessage) {\n                atmosphere.util.log(_request.logLevel, [errorMessage]);\n\n                _clearState();\n\n                if (typeof (_request.onTransportFailure) !== 'undefined') {\n                    _request.onTransportFailure(errorMessage, _request);\n                } else if (typeof (atmosphere.util.onTransportFailure) !== 'undefined') {\n                    atmosphere.util.onTransportFailure(errorMessage, _request);\n                }\n\n                if (_request.reconnect && _request.transport !== 'none' || _request.transport == null) {\n                    _request.transport = _request.fallbackTransport;\n                    _request.method = _request.fallbackMethod;\n                    _response.transport = _request.fallbackTransport;\n                    _response.state = '';\n                    _request.fallbackTransport = 'none';\n                    if (_request.reconnectInterval > 0) {\n                        // Prevent the online event to open a second connection while waiting for reconnect\n                        var handleOnlineOffline = _request.handleOnlineOffline;\n                        _request.handleOnlineOffline = false;\n                        _request.reconnectId = setTimeout(function () {\n                            _request.handleOnlineOffline = handleOnlineOffline;\n                            _execute();\n                        }, _request.reconnectInterval);\n                    } else {\n                        _execute();\n                    }\n                } else {\n                    _onError(500, \"Unable to reconnect with fallback transport\");\n                }\n            }\n\n            /**\n             * Get url from request and attach headers to it.\n             *\n             * @param request {Object} request Request parameters, if undefined _request object will be used.\n             *\n             * @returns {Object} Request object, if undefined, _request object will be used.\n             * @private\n             */\n            function _attachHeaders(request, url) {\n                var rq = _request;\n                if ((request != null) && (typeof (request) !== 'undefined')) {\n                    rq = request;\n                }\n\n                if (url == null) {\n                    url = rq.url;\n                }\n\n                // If not enabled\n                if (!rq.attachHeadersAsQueryString)\n                    return url;\n\n                // If already added\n                if (url.indexOf(\"X-Atmosphere-Framework\") !== -1) {\n                    return url;\n                }\n\n                url += (url.indexOf('?') !== -1) ? '&' : '?';\n                url += \"X-Atmosphere-tracking-id=\" + rq.uuid;\n                url += \"&X-Atmosphere-Framework=\" + atmosphere.version;\n                url += \"&X-Atmosphere-Transport=\" + rq.transport;\n\n                if (rq.trackMessageLength) {\n                    url += \"&X-Atmosphere-TrackMessageSize=\" + \"true\";\n                }\n\n                if (rq.heartbeat !== null && rq.heartbeat.server !== null) {\n                    url += \"&X-Heartbeat-Server=\" + rq.heartbeat.server;\n                }\n\n                if (rq.contentType !== '') {\n                    //Eurk!\n                    url += \"&Content-Type=\" + (rq.transport === 'websocket' ? rq.contentType : encodeURIComponent(rq.contentType));\n                }\n\n                if (rq.enableProtocol) {\n                    url += \"&X-atmo-protocol=true\";\n                }\n\n                atmosphere.util.each(rq.headers, function (name, value) {\n                    var h = atmosphere.util.isFunction(value) ? value.call(this, rq, request, _response) : value;\n                    if (h != null) {\n                        url += \"&\" + encodeURIComponent(name) + \"=\" + encodeURIComponent(h);\n                    }\n                });\n\n                return url;\n            }\n\n            function _triggerOpen(rq) {\n                if (!rq.isOpen) {\n                    rq.isOpen = true;\n                    _open('opening', rq.transport, rq);\n                } else if (rq.isReopen) {\n                    rq.isReopen = false;\n                    _open('re-opening', rq.transport, rq);\n                } else if (_response.state === 'messageReceived' && (rq.transport === 'jsonp' || rq.transport === 'long-polling')) {\n                    _openAfterResume(_response);\n                } else {\n                    return;\n                }\n\n                _startHeartbeat(rq);\n            }\n\n            function _startHeartbeat(rq) {\n                if (rq.heartbeatTimer != null) {\n                    clearTimeout(rq.heartbeatTimer);\n                }\n\n                if (!isNaN(_heartbeatInterval) && _heartbeatInterval > 0) {\n                    var _pushHeartbeat = function () {\n                        if (_canLog('debug')) {\n                            atmosphere.util.debug(\"Sending heartbeat\");\n                        }\n                        _push(_heartbeatPadding);\n                        rq.heartbeatTimer = setTimeout(_pushHeartbeat, _heartbeatInterval);\n                    };\n                    rq.heartbeatTimer = setTimeout(_pushHeartbeat, _heartbeatInterval);\n                }\n            }\n\n            /**\n             * Execute ajax request. <br>\n             *\n             * @param request {Object} request Request parameters, if undefined _request object will be used.\n             * @private\n             */\n            function _executeRequest(request) {\n                var rq = _request;\n                if ((request != null) || (typeof (request) !== 'undefined')) {\n                    rq = request;\n                }\n\n                rq.lastIndex = 0;\n                rq.readyState = 0;\n\n                // CORS fake using JSONP\n                if ((rq.transport === 'jsonp') || ((rq.enableXDR) && (atmosphere.util.checkCORSSupport()))) {\n                    _jsonp(rq);\n                    return;\n                }\n\n                if (atmosphere.util.browser.msie && +atmosphere.util.browser.version.split(\".\")[0] < 10) {\n                    if ((rq.transport === 'streaming')) {\n                        if (rq.enableXDR && window.XDomainRequest) {\n                            _ieXDR(rq);\n                        } else {\n                            _ieStreaming(rq);\n                        }\n                        return;\n                    }\n\n                    if ((rq.enableXDR) && (window.XDomainRequest)) {\n                        _ieXDR(rq);\n                        return;\n                    }\n                }\n\n                var reconnectFExec = function (force) {\n                    rq.lastIndex = 0;\n                    _requestCount++; // Increase also when forcing reconnect as _open checks _requestCount\n                    if (force || (rq.reconnect && _requestCount <= rq.maxReconnectOnClose)) {\n                        var delay = force ? 0 : request.reconnectInterval; // Reconnect immediately if the server resumed the connection (timeout)\n                        _response.ffTryingReconnect = true;\n                        _open('re-connecting', request.transport, request);\n                        _reconnect(ajaxRequest, rq, delay);\n                    } else {\n                        _onError(0, \"maxReconnectOnClose reached\");\n                    }\n                };\n\n                var reconnectF = function (force) {\n                    if (atmosphere._beforeUnloadState) {\n                        // ATMOSPHERE-JAVASCRIPT-143: Delay reconnect to avoid reconnect attempts before an actual unload (we don't know if an unload will happen, yet)\n                        atmosphere.util.debug(new Date() + \" Atmosphere: reconnectF: execution delayed due to _beforeUnloadState flag\");\n                        setTimeout(function () {\n                            reconnectFExec(force);\n                        }, 5000);\n                    } else {\n                        reconnectFExec(force);\n                    }\n                };\n\n                var disconnected = function () {\n                    // Prevent onerror callback to be called\n                    _response.errorHandled = true;\n                    _clearState();\n                    reconnectF(false);\n                };\n\n                if (rq.force || (rq.reconnect && (rq.maxRequest === -1 || rq.requestCount++ < rq.maxRequest))) {\n                    rq.force = false;\n\n                    var ajaxRequest = atmosphere.util.xhr();\n                    ajaxRequest.hasData = false;\n\n                    _doRequest(ajaxRequest, rq, true);\n\n                    if (rq.suspend) {\n                        _activeRequest = ajaxRequest;\n                    }\n\n                    if (rq.transport !== 'polling') {\n                        _response.transport = rq.transport;\n\n                        ajaxRequest.onabort = function () {\n                            _debug(\"ajaxrequest.onabort\")\n                            _invokeClose(true);\n                        };\n\n                        ajaxRequest.onerror = function () {\n                            _debug(\"ajaxrequest.onerror\")\n                            _response.error = true;\n                            _response.ffTryingReconnect = true;\n                            try {\n                                _response.status = XMLHttpRequest.status;\n                            } catch (e) {\n                                _response.status = 500;\n                            }\n\n                            if (!_response.status) {\n                                _response.status = 500;\n                            }\n                            if (!_response.errorHandled) {\n                                _clearState();\n                                reconnectF(false);\n                            }\n                        };\n                    }\n\n                    ajaxRequest.onreadystatechange = function () {\n                        _debug(\"ajaxRequest.onreadystatechange, new state: \" + ajaxRequest.readyState);\n                        if (_abortingConnection) {\n                            _debug(\"onreadystatechange has been ignored due to _abortingConnection flag\");\n                            return;\n                        }\n\n                        _response.error = false;\n                        var skipCallbackInvocation = false;\n                        var update = false;\n\n                        if (rq.transport === 'streaming' && rq.readyState > 2 && ajaxRequest.readyState === 4) {\n                            _clearState();\n                            reconnectF(false);\n                            return;\n                        }\n\n                        rq.readyState = ajaxRequest.readyState;\n\n                        if (rq.transport === 'streaming' && ajaxRequest.readyState >= 3) {\n                            update = true;\n                        } else if (rq.transport === 'long-polling' && ajaxRequest.readyState === 4) {\n                            update = true;\n                        }\n                        _timeout(_request);\n\n                        if (rq.transport !== 'polling') {\n                            // MSIE 9 and lower status can be higher than 1000, Chrome can be 0\n                            var status = 200;\n                            if (ajaxRequest.readyState === 4) {\n                                status = ajaxRequest.status > 1000 ? 0 : ajaxRequest.status;\n                            }\n\n                            if (!rq.reconnectOnServerError && (status >= 300 && status < 600)) {\n                                _onError(status, ajaxRequest.statusText);\n                                return;\n                            }\n\n                            if (status >= 300 || status === 0) {\n                                if (!rq.isOpen && _canLog('warn')) {\n                                   atmosphere.util.warn(rq.transport + \" connection failed with status: \" + status + \" \" + (ajaxRequest.statusText || \"Unable to connect\"));\n                                }\n                                disconnected();\n                                return;\n                            }\n\n                            // Firefox incorrectly send statechange 0->2 when a reconnect attempt fails. The above checks ensure that onopen is not called for these\n                            if ((!rq.enableProtocol || !request.firstMessage) && (ajaxRequest.readyState === 2 || ajaxRequest.readyState > 2 && !rq.isOpen)) {\n                                // Firefox incorrectly send statechange 0->2 when a reconnect attempt fails. The above checks ensure that onopen is not called for these\n                                // In that case, ajaxRequest.onerror will be called just after onreadystatechange is called, so we delay the trigger until we are\n                                // guarantee the connection is well established.\n                                if (atmosphere.util.browser.mozilla && _response.ffTryingReconnect) {\n                                    _response.ffTryingReconnect = false;\n                                    setTimeout(function () {\n                                        if (!_response.ffTryingReconnect) {\n                                            _triggerOpen(rq);\n                                        }\n                                    }, 500);\n                                } else {\n                                    _triggerOpen(rq);\n                                }\n                            }\n\n                        } else if (ajaxRequest.readyState === 4) {\n                            update = true;\n                        }\n\n                        if (update) {\n                            var responseText = ajaxRequest.responseText;\n                            _response.errorHandled = false;\n\n                            // IE behave the same way when resuming long-polling or when the server goes down.\n                            if (rq.transport === 'long-polling' && atmosphere.util.trim(responseText).length === 0) {\n                                // For browser that aren't support onabort\n                                if (!ajaxRequest.hasData) {\n                                    reconnectF(true);\n                                } else {\n                                    ajaxRequest.hasData = false;\n                                }\n                                return;\n                            }\n                            ajaxRequest.hasData = true;\n\n                            _readHeaders(ajaxRequest, _request);\n\n                            if (rq.transport === 'streaming') {\n                                if (!atmosphere.util.browser.opera) {\n                                    var message = responseText.substring(rq.lastIndex, responseText.length);\n                                    skipCallbackInvocation = _trackMessageSize(message, rq, _response);\n\n                                    rq.lastIndex = responseText.length;\n                                    if (skipCallbackInvocation) {\n                                        return;\n                                    }\n                                } else {\n                                    atmosphere.util.iterate(function () {\n                                        if (_response.status !== 500 && ajaxRequest.responseText.length > rq.lastIndex) {\n                                            try {\n                                                _response.status = ajaxRequest.status;\n                                                _response.headers = atmosphere.util.parseHeaders(ajaxRequest.getAllResponseHeaders());\n\n                                                _readHeaders(ajaxRequest, _request);\n\n                                            } catch (e) {\n                                                _response.status = 404;\n                                            }\n                                            _timeout(_request);\n\n                                            _response.state = \"messageReceived\";\n                                            var message = ajaxRequest.responseText.substring(rq.lastIndex);\n                                            rq.lastIndex = ajaxRequest.responseText.length;\n\n                                            skipCallbackInvocation = _trackMessageSize(message, rq, _response);\n                                            if (!skipCallbackInvocation) {\n                                                _invokeCallback();\n                                            }\n\n                                            if (_verifyStreamingLength(ajaxRequest, rq)) {\n                                                _reconnectOnMaxStreamingLength(ajaxRequest, rq);\n                                                return;\n                                            }\n                                        } else if (_response.status > 400) {\n                                            // Prevent replaying the last message.\n                                            rq.lastIndex = ajaxRequest.responseText.length;\n                                            return false;\n                                        }\n                                    }, 0);\n                                }\n                            } else {\n                                skipCallbackInvocation = _trackMessageSize(responseText, rq, _response);\n                            }\n                            var closeStream = _verifyStreamingLength(ajaxRequest, rq);\n\n                            try {\n                                _response.status = ajaxRequest.status;\n                                _response.headers = atmosphere.util.parseHeaders(ajaxRequest.getAllResponseHeaders());\n\n                                _readHeaders(ajaxRequest, rq);\n                            } catch (e) {\n                                _response.status = 404;\n                            }\n\n                            if (rq.suspend) {\n                                _response.state = _response.status === 0 ? \"closed\" : \"messageReceived\";\n                            } else {\n                                _response.state = \"messagePublished\";\n                            }\n\n                            var isAllowedToReconnect = !closeStream && request.transport !== 'streaming' && request.transport !== 'polling';\n                            if (isAllowedToReconnect && !rq.executeCallbackBeforeReconnect) {\n                                _reconnect(ajaxRequest, rq, rq.pollingInterval);\n                            }\n\n                            if (_response.responseBody.length !== 0 && !skipCallbackInvocation)\n                                _invokeCallback();\n\n                            if (isAllowedToReconnect && rq.executeCallbackBeforeReconnect) {\n                                _reconnect(ajaxRequest, rq, rq.pollingInterval);\n                            }\n\n                            if (closeStream) {\n                                _reconnectOnMaxStreamingLength(ajaxRequest, rq);\n                            }\n                        }\n                    };\n\n                    try {\n                        ajaxRequest.send(rq.data);\n                        _subscribed = true;\n                    } catch (e) {\n                        atmosphere.util.log(rq.logLevel, [\"Unable to connect to \" + rq.url]);\n                        _onError(0, e);\n                    }\n\n                } else {\n                    if (rq.logLevel === 'debug') {\n                        atmosphere.util.log(rq.logLevel, [\"Max re-connection reached.\"]);\n                    }\n                    _onError(0, \"maxRequest reached\");\n                }\n            }\n\n            function _reconnectOnMaxStreamingLength(ajaxRequest, rq) {\n                _response.messages = [];\n                rq.isReopen = true;\n                _close();\n                _abortingConnection = false;\n                _reconnect(ajaxRequest, rq, 500);\n            }\n\n            /**\n             * Do ajax request.\n             *\n             * @param ajaxRequest Ajax request.\n             * @param request Request parameters.\n             * @param create If ajax request has to be open.\n             */\n            function _doRequest(ajaxRequest, request, create) {\n                // Prevent Android to cache request\n                var url = request.url;\n                if (request.dispatchUrl != null && request.method === 'POST') {\n                    url += request.dispatchUrl;\n                }\n                url = _attachHeaders(request, url);\n                url = atmosphere.util.prepareURL(url);\n\n                if (create) {\n                    ajaxRequest.open(request.method, url, true);\n                    if (request.connectTimeout > 0) {\n                        request.id = setTimeout(function () {\n                            if (request.requestCount === 0) {\n                                _clearState();\n                                _prepareCallback(\"Connect timeout\", \"closed\", 200, request.transport);\n                            }\n                        }, request.connectTimeout);\n                    }\n                }\n\n                if (_request.withCredentials && _request.transport !== 'websocket') {\n                    if (\"withCredentials\" in ajaxRequest) {\n                        ajaxRequest.withCredentials = true;\n                    }\n                }\n\n                if (!_request.dropHeaders) {\n                    ajaxRequest.setRequestHeader(\"X-Atmosphere-Framework\", atmosphere.version);\n                    ajaxRequest.setRequestHeader(\"X-Atmosphere-Transport\", request.transport);\n\n                    if (request.heartbeat !== null && request.heartbeat.server !== null) {\n                        ajaxRequest.setRequestHeader(\"X-Heartbeat-Server\", ajaxRequest.heartbeat.server);\n                    }\n\n                    if (request.trackMessageLength) {\n                        ajaxRequest.setRequestHeader(\"X-Atmosphere-TrackMessageSize\", \"true\");\n                    }\n                    ajaxRequest.setRequestHeader(\"X-Atmosphere-tracking-id\", request.uuid);\n\n                    atmosphere.util.each(request.headers, function (name, value) {\n                        var h = atmosphere.util.isFunction(value) ? value.call(this, ajaxRequest, request, create, _response) : value;\n                        if (h != null) {\n                            ajaxRequest.setRequestHeader(name, h);\n                        }\n                    });\n                }\n\n                if (request.contentType !== '') {\n                    ajaxRequest.setRequestHeader(\"Content-Type\", request.contentType);\n                }\n            }\n\n            function _reconnect(ajaxRequest, request, delay) {\n\n                if (_response.closedByClientTimeout) {\n                    return;\n                }\n\n                if (request.reconnect || (request.suspend && _subscribed)) {\n                    var status = 0;\n                    if (ajaxRequest && ajaxRequest.readyState > 1) {\n                        status = ajaxRequest.status > 1000 ? 0 : ajaxRequest.status;\n                    }\n                    _response.status = status === 0 ? 204 : status;\n                    _response.reason = status === 0 ? \"Server resumed the connection or down.\" : \"OK\";\n\n                    clearTimeout(request.id);\n                    if (request.reconnectId) {\n                        clearTimeout(request.reconnectId);\n                        delete request.reconnectId;\n                    }\n\n                    if (delay > 0) {\n                        // For whatever reason, never cancel a reconnect timeout as it is mandatory to reconnect.\n                        // Prevent the online event to open a second connection while waiting for reconnect\n                        var handleOnlineOffline = _request.handleOnlineOffline;\n                        _request.handleOnlineOffline = false;\n                        _request.reconnectId = setTimeout(function () {\n                            _request.handleOnlineOffline = handleOnlineOffline;\n                            _executeRequest(request);\n                        }, delay);\n                    } else {\n                        _executeRequest(request);\n                    }\n                }\n            }\n\n            function _tryingToReconnect(response) {\n                response.state = 're-connecting';\n                _invokeFunction(response);\n            }\n\n            function _openAfterResume(response) {\n                response.state = 'openAfterResume';\n                _invokeFunction(response);\n                response.state = 'messageReceived';\n            }\n\n            function _ieXDR(request) {\n                if (request.transport !== \"polling\") {\n                    _ieStream = _configureXDR(request);\n                    _ieStream.open();\n                } else {\n                    _configureXDR(request).open();\n                }\n            }\n\n            function _configureXDR(request) {\n                var rq = _request;\n                if ((request != null) && (typeof (request) !== 'undefined')) {\n                    rq = request;\n                }\n\n                var transport = rq.transport;\n                var lastIndex = 0;\n                var xdr = new window.XDomainRequest();\n                var reconnect = function () {\n                    if (rq.transport === \"long-polling\" && (rq.reconnect && (rq.maxRequest === -1 || rq.requestCount++ < rq.maxRequest))) {\n                        xdr.status = 200;\n                        _ieXDR(rq);\n                    }\n                };\n\n                var rewriteURL = rq.rewriteURL || function (url) {\n                    // Maintaining session by rewriting URL\n                    // http://stackoverflow.com/questions/6453779/maintaining-session-by-rewriting-url\n                    var match = /(?:^|;\\s*)(JSESSIONID|PHPSESSID)=([^;]*)/.exec(document.cookie);\n\n                    switch (match && match[1]) {\n                        case \"JSESSIONID\":\n                            return url.replace(/;jsessionid=[^\\?]*|(\\?)|$/, \";jsessionid=\" + match[2] + \"$1\");\n                        case \"PHPSESSID\":\n                            return url.replace(/\\?PHPSESSID=[^&]*&?|\\?|$/, \"?PHPSESSID=\" + match[2] + \"&\").replace(/&$/, \"\");\n                    }\n                    return url;\n                };\n\n                // Handles open and message event\n                xdr.onprogress = function () {\n                    handle(xdr);\n                };\n                // Handles error event\n                xdr.onerror = function () {\n                    // If the server doesn't send anything back to XDR will fail with polling\n                    if (rq.transport !== 'polling') {\n                        _clearState();\n                        if (_requestCount++ < rq.maxReconnectOnClose) {\n                            if (rq.reconnectInterval > 0) {\n                                rq.reconnectId = setTimeout(function () {\n                                    _open('re-connecting', request.transport, request);\n                                    _ieXDR(rq);\n                                }, rq.reconnectInterval);\n                            } else {\n                                _open('re-connecting', request.transport, request);\n                                _ieXDR(rq);\n                            }\n                        } else {\n                            _onError(0, \"maxReconnectOnClose reached\");\n                        }\n                    }\n                };\n\n                // Handles close event\n                xdr.onload = function () {\n                };\n\n                var handle = function (xdr) {\n                    clearTimeout(rq.id);\n                    var message = xdr.responseText;\n\n                    message = message.substring(lastIndex);\n                    lastIndex += message.length;\n\n                    if (transport !== 'polling') {\n                        _timeout(rq);\n\n                        var skipCallbackInvocation = _trackMessageSize(message, rq, _response);\n\n                        if (transport === 'long-polling' && atmosphere.util.trim(message).length === 0)\n                            return;\n\n                        if (rq.executeCallbackBeforeReconnect) {\n                            reconnect();\n                        }\n\n                        if (!skipCallbackInvocation) {\n                            _prepareCallback(_response.responseBody, \"messageReceived\", 200, transport);\n                        }\n\n                        if (!rq.executeCallbackBeforeReconnect) {\n                            reconnect();\n                        }\n                    }\n                };\n\n                return {\n                    open: function () {\n                        var url = rq.url;\n                        if (rq.dispatchUrl != null) {\n                            url += rq.dispatchUrl;\n                        }\n                        url = _attachHeaders(rq, url);\n                        xdr.open(rq.method, rewriteURL(url));\n                        if (rq.method === 'GET') {\n                            xdr.send();\n                        } else {\n                            xdr.send(rq.data);\n                        }\n\n                        if (rq.connectTimeout > 0) {\n                            rq.id = setTimeout(function () {\n                                if (rq.requestCount === 0) {\n                                    _clearState();\n                                    _prepareCallback(\"Connect timeout\", \"closed\", 200, rq.transport);\n                                }\n                            }, rq.connectTimeout);\n                        }\n                    },\n                    close: function () {\n                        xdr.abort();\n                    }\n                };\n            }\n\n            function _ieStreaming(request) {\n                _ieStream = _configureIE(request);\n                _ieStream.open();\n            }\n\n            function _configureIE(request) {\n                var rq = _request;\n                if ((request != null) && (typeof (request) !== 'undefined')) {\n                    rq = request;\n                }\n\n                var stop;\n                var doc = new window.ActiveXObject(\"htmlfile\");\n\n                doc.open();\n                doc.close();\n\n                var url = rq.url;\n                if (rq.dispatchUrl != null) {\n                    url += rq.dispatchUrl;\n                }\n\n                if (rq.transport !== 'polling') {\n                    _response.transport = rq.transport;\n                }\n\n                return {\n                    open: function () {\n                        var iframe = doc.createElement(\"iframe\");\n\n                        url = _attachHeaders(rq);\n                        if (rq.data !== '') {\n                            url += \"&X-Atmosphere-Post-Body=\" + encodeURIComponent(rq.data);\n                        }\n\n                        // Finally attach a timestamp to prevent Android and IE caching.\n                        url = atmosphere.util.prepareURL(url);\n\n                        iframe.src = url;\n                        doc.body.appendChild(iframe);\n\n                        // For the server to respond in a consistent format regardless of user agent, we polls response text\n                        var cdoc = iframe.contentDocument || iframe.contentWindow.document;\n\n                        stop = atmosphere.util.iterate(function () {\n                            try {\n                                if (!cdoc.firstChild) {\n                                    return;\n                                }\n\n                                var res = cdoc.body ? cdoc.body.lastChild : cdoc;\n                                if (res.omgThisIsBroken) {\n                                    // Cause an exception when res is null, to trigger a reconnect...\n                                }\n                                var readResponse = function () {\n                                    // Clones the element not to disturb the original one\n                                    var clone = res.cloneNode(true);\n\n                                    // If the last character is a carriage return or a line feed, IE ignores it in the innerText property\n                                    // therefore, we add another non-newline character to preserve it\n                                    clone.appendChild(cdoc.createTextNode(\".\"));\n\n                                    var text = clone.innerText;\n\n                                    text = text.substring(0, text.length - 1);\n                                    return text;\n\n                                };\n\n                                // To support text/html content type\n                                if (!cdoc.body || !cdoc.body.firstChild || cdoc.body.firstChild.nodeName.toLowerCase() !== \"pre\") {\n                                    // Injects a plaintext element which renders text without interpreting the HTML and cannot be stopped\n                                    // it is deprecated in HTML5, but still works\n                                    var head = cdoc.head || cdoc.getElementsByTagName(\"head\")[0] || cdoc.documentElement || cdoc;\n                                    var script = cdoc.createElement(\"script\");\n\n                                    script.text = \"document.write('<plaintext>')\";\n\n                                    head.insertBefore(script, head.firstChild);\n                                    head.removeChild(script);\n\n                                    // The plaintext element will be the response container\n                                    res = cdoc.body.lastChild;\n                                }\n\n                                if (rq.closed) {\n                                    rq.isReopen = true;\n                                }\n\n                                // Handles message and close event\n                                stop = atmosphere.util.iterate(function () {\n                                    var text = readResponse();\n                                    if (text.length > rq.lastIndex) {\n                                        _timeout(_request);\n\n                                        _response.status = 200;\n                                        _response.error = false;\n\n                                        // Empties response every time that it is handled\n                                        res.innerText = \"\";\n                                        var skipCallbackInvocation = _trackMessageSize(text, rq, _response);\n                                        if (skipCallbackInvocation) {\n                                            return \"\";\n                                        }\n\n                                        _prepareCallback(_response.responseBody, \"messageReceived\", 200, rq.transport);\n                                    }\n\n                                    rq.lastIndex = 0;\n\n                                    if (cdoc.readyState === \"complete\") {\n                                        _invokeClose(true);\n                                        _open('re-connecting', rq.transport, rq);\n                                        if (rq.reconnectInterval > 0) {\n                                            rq.reconnectId = setTimeout(function () {\n                                                _ieStreaming(rq);\n                                            }, rq.reconnectInterval);\n                                        } else {\n                                            _ieStreaming(rq);\n                                        }\n                                        return false;\n                                    }\n                                }, null);\n\n                                return false;\n                            } catch (err) {\n                                _response.error = true;\n                                _open('re-connecting', rq.transport, rq);\n                                if (_requestCount++ < rq.maxReconnectOnClose) {\n                                    if (rq.reconnectInterval > 0) {\n                                        rq.reconnectId = setTimeout(function () {\n                                            _ieStreaming(rq);\n                                        }, rq.reconnectInterval);\n                                    } else {\n                                        _ieStreaming(rq);\n                                    }\n                                } else {\n                                    _onError(0, \"maxReconnectOnClose reached\");\n                                }\n                                doc.execCommand(\"Stop\");\n                                doc.close();\n                                return false;\n                            }\n                        });\n                    },\n\n                    close: function () {\n                        if (stop) {\n                            stop();\n                        }\n\n                        doc.execCommand(\"Stop\");\n                        _invokeClose(true);\n                    }\n                };\n            }\n\n            /**\n             * Send message. <br>\n             * Will be automatically dispatch to other connected.\n             *\n             * @param {Object, string} Message to send.\n             * @private\n             */\n            function _push(message) {\n\n                if (_localStorageService != null) {\n                    _pushLocal(message);\n                } else if (_activeRequest != null || _sse != null) {\n                    _pushAjaxMessage(message);\n                } else if (_ieStream != null) {\n                    _pushIE(message);\n                } else if (_jqxhr != null) {\n                    _pushJsonp(message);\n                } else if (_websocket != null) {\n                    _pushWebSocket(message);\n                } else {\n                    _onError(0, \"No suspended connection available\");\n                    atmosphere.util.error(\"No suspended connection available. Make sure atmosphere.subscribe has been called and request.onOpen invoked before trying to push data\");\n                }\n            }\n\n            function _pushOnClose(message, rq) {\n                if (!rq) {\n                    rq = _getPushRequest(message);\n                }\n                rq.transport = \"polling\";\n                rq.method = \"GET\";\n                rq.withCredentials = false;\n                rq.reconnect = false;\n                rq.force = true;\n                rq.suspend = false;\n                rq.timeout = 1000;\n                if (_request.unloadBackwardCompat) {\n                    _executeRequest(rq);\n                } else {\n                    navigator.sendBeacon(rq.url, rq.data);\n                }\n            }\n\n            function _pushLocal(message) {\n                _localStorageService.send(message);\n            }\n\n            function _intraPush(message) {\n                // IE 9 will crash if not.\n                if (message.length === 0)\n                    return;\n\n                try {\n                    if (_localStorageService) {\n                        _localStorageService.localSend(message);\n                    } else if (_storageService) {\n                        _storageService.signal(\"localMessage\", JSON.stringify({\n                            id: guid,\n                            event: message\n                        }));\n                    }\n                } catch (err) {\n                    atmosphere.util.error(err);\n                }\n            }\n\n            /**\n             * Send a message using currently opened ajax request (using http-streaming or long-polling). <br>\n             *\n             * @param {string, Object} Message to send. This is an object, string message is saved in data member.\n             * @private\n             */\n            function _pushAjaxMessage(message) {\n                var rq = _getPushRequest(message);\n                _executeRequest(rq);\n            }\n\n            /**\n             * Send a message using currently opened ie streaming (using http-streaming or long-polling). <br>\n             *\n             * @param {string, Object} Message to send. This is an object, string message is saved in data member.\n             * @private\n             */\n            function _pushIE(message) {\n                if (_request.enableXDR && atmosphere.util.checkCORSSupport()) {\n                    var rq = _getPushRequest(message);\n                    // Do not reconnect since we are pushing.\n                    rq.reconnect = false;\n                    _jsonp(rq);\n                } else {\n                    _pushAjaxMessage(message);\n                }\n            }\n\n            /**\n             * Send a message using jsonp transport. <br>\n             *\n             * @param {string, Object} Message to send. This is an object, string message is saved in data member.\n             * @private\n             */\n            function _pushJsonp(message) {\n                _pushAjaxMessage(message);\n            }\n\n            function _getStringMessage(message) {\n                var msg = message;\n                if (typeof (msg) === 'object') {\n                    msg = message.data;\n                }\n                return msg;\n            }\n\n            /**\n             * Build request use to push message using method 'POST' <br>. Transport is defined as 'polling' and 'suspend' is set to false.\n             *\n             * @return {Object} Request object use to push message.\n             * @private\n             */\n            function _getPushRequest(message) {\n                var msg = _getStringMessage(message);\n\n                var rq = {\n                    connected: false,\n                    timeout: 60000,\n                    method: 'POST',\n                    url: _request.url,\n                    contentType: _request.contentType,\n                    headers: _request.headers,\n                    reconnect: true,\n                    callback: null,\n                    data: msg,\n                    suspend: false,\n                    maxRequest: -1,\n                    logLevel: 'info',\n                    requestCount: 0,\n                    withCredentials: _request.withCredentials,\n                    transport: 'polling',\n                    isOpen: true,\n                    attachHeadersAsQueryString: true,\n                    enableXDR: _request.enableXDR,\n                    uuid: _request.uuid,\n                    dispatchUrl: _request.dispatchUrl,\n                    enableProtocol: false,\n                    messageDelimiter: '|',\n                    trackMessageLength: _request.trackMessageLength,\n                    maxReconnectOnClose: _request.maxReconnectOnClose,\n                    heartbeatTimer: _request.heartbeatTimer,\n                    heartbeat: _request.heartbeat\n                };\n\n                if (typeof (message) === 'object') {\n                    rq = atmosphere.util.extend(rq, message);\n                }\n\n                return rq;\n            }\n\n            /**\n             * Send a message using currently opened websocket. <br>\n             *\n             */\n            function _pushWebSocket(message) {\n                var msg = atmosphere.util.isBinary(message) ? message : _getStringMessage(message);\n                var data;\n                try {\n                    if (_request.dispatchUrl != null) {\n                        data = _request.webSocketPathDelimiter + _request.dispatchUrl + _request.webSocketPathDelimiter + msg;\n                    } else {\n                        data = msg;\n                    }\n\n                    if (!_websocket.canSendMessage) {\n                        atmosphere.util.error(\"WebSocket not connected.\");\n                        return;\n                    }\n\n                    _websocket.send(data);\n\n                } catch (e) {\n                    _websocket.onclose = function () {\n                    };\n                    _clearState();\n\n                    _reconnectWithFallbackTransport(\"Websocket failed. Downgrading to \" + _request.fallbackTransport + \" and resending \" + message);\n                    _pushAjaxMessage(message);\n                }\n            }\n\n            function _localMessage(message) {\n                var m = JSON.parse(message);\n                if (m.id !== guid) {\n                    if (typeof (_request.onLocalMessage) !== 'undefined') {\n                        _request.onLocalMessage(m.event);\n                    } else if (typeof (atmosphere.util.onLocalMessage) !== 'undefined') {\n                        atmosphere.util.onLocalMessage(m.event);\n                    }\n                }\n            }\n\n            function _prepareCallback(messageBody, state, errorCode, transport) {\n\n                _response.responseBody = messageBody;\n                _response.transport = transport;\n                _response.status = errorCode;\n                _response.state = state;\n\n                _invokeCallback();\n            }\n\n            function _readHeaders(xdr, request) {\n                if (!request.readResponsesHeaders) {\n                    if (!request.enableProtocol) {\n                        request.uuid = guid;\n                    }\n                } else {\n                    try {\n\n                        var tempUUID = xdr.getResponseHeader('X-Atmosphere-tracking-id');\n                        if (tempUUID && tempUUID != null) {\n                            request.uuid = tempUUID.split(\" \").pop();\n                        }\n                    } catch (e) {\n                    }\n                }\n            }\n\n            function _invokeFunction(response) {\n                _f(response, _request);\n                // Global\n                _f(response, atmosphere.util);\n            }\n\n            function _f(response, f) {\n                switch (response.state) {\n                    case \"messageReceived\":\n                        _debug(\"Firing onMessage\");\n                        _requestCount = 0;\n                        if (typeof (f.onMessage) !== 'undefined')\n                            f.onMessage(response);\n\n                        if (typeof (f.onmessage) !== 'undefined')\n                            f.onmessage(response);\n                        break;\n                    case \"error\":\n                        var dbgReasonPhrase = (typeof (response.reasonPhrase) != 'undefined') ? response.reasonPhrase : 'n/a';\n                        _debug(\"Firing onError, reasonPhrase: \" + dbgReasonPhrase);\n                        if (typeof (f.onError) !== 'undefined')\n                            f.onError(response);\n\n                        if (typeof (f.onerror) !== 'undefined')\n                            f.onerror(response);\n                        break;\n                    case \"opening\":\n                        delete _request.closed;\n                        _debug(\"Firing onOpen\");\n                        if (typeof (f.onOpen) !== 'undefined')\n                            f.onOpen(response);\n\n                        if (typeof (f.onopen) !== 'undefined')\n                            f.onopen(response);\n                        break;\n                    case \"messagePublished\":\n                        _debug(\"Firing messagePublished\");\n                        if (typeof (f.onMessagePublished) !== 'undefined')\n                            f.onMessagePublished(response);\n                        break;\n                    case \"re-connecting\":\n                        _debug(\"Firing onReconnect\");\n                        if (typeof (f.onReconnect) !== 'undefined')\n                            f.onReconnect(_request, response);\n                        break;\n                    case \"closedByClient\":\n                        _debug(\"Firing closedByClient\");\n                        if (typeof (f.onClientTimeout) !== 'undefined')\n                            f.onClientTimeout(_request);\n                        break;\n                    case \"re-opening\":\n                        delete _request.closed;\n                        _debug(\"Firing onReopen\");\n                        if (typeof (f.onReopen) !== 'undefined')\n                            f.onReopen(_request, response);\n                        break;\n                    case \"fail-to-reconnect\":\n                        _debug(\"Firing onFailureToReconnect\");\n                        if (typeof (f.onFailureToReconnect) !== 'undefined')\n                            f.onFailureToReconnect(_request, response);\n                        break;\n                    case \"unsubscribe\":\n                    case \"closed\":\n                        var closed = typeof (_request.closed) !== 'undefined' ? _request.closed : false;\n\n                        if (!closed) {\n                            _debug(\"Firing onClose (\" + response.state + \" case)\");\n                            if (typeof (f.onClose) !== 'undefined') {\n                                f.onClose(response);\n                            }\n\n                            if (typeof (f.onclose) !== 'undefined') {\n                                f.onclose(response);\n                            }\n                        } else {\n                            _debug(\"Request already closed, not firing onClose (\" + response.state + \" case)\");\n                        }\n                        _request.closed = true;\n                        break;\n                    case \"openAfterResume\":\n                        if (typeof (f.onOpenAfterResume) !== 'undefined')\n                            f.onOpenAfterResume(_request);\n                        break;\n                }\n            }\n\n            function _invokeClose(wasOpen) {\n                if (_response.state !== 'closed') {\n                    _response.state = 'closed';\n                    _response.responseBody = \"\";\n                    _response.messages = [];\n                    _response.status = !wasOpen ? 501 : 200;\n                    _invokeCallback();\n                }\n            }\n\n            /**\n             * Invoke request callbacks.\n             *\n             * @private\n             */\n            function _invokeCallback() {\n                var call = function (index, func) {\n                    func(_response);\n                };\n\n                if (_localStorageService == null && _localSocketF != null) {\n                    _localSocketF(_response.responseBody);\n                }\n\n                _request.reconnect = _request.mrequest;\n\n                var isString = typeof (_response.responseBody) === 'string';\n                var messages = (isString && _request.trackMessageLength) ? (_response.messages.length > 0 ? _response.messages : ['']) : new Array(\n                    _response.responseBody);\n                for (var i = 0; i < messages.length; i++) {\n\n                    if (messages.length > 1 && messages[i].length === 0) {\n                        continue;\n                    }\n                    _response.responseBody = (isString) ? atmosphere.util.trim(messages[i]) : messages[i];\n\n                    if (_localStorageService == null && _localSocketF != null) {\n                        _localSocketF(_response.responseBody);\n                    }\n\n                    if (_response.state === \"messageReceived\") {\n                        if (_response.responseBody.length === 0) {\n                            continue;\n                        } else if (isString && _heartbeatPadding === _response.responseBody) {\n                            // reset the internal reconnect counter, when we received also heartbeat message from server\n                            _requestCount = 0;\n                            continue;\n                        }\n                    }\n\n                    _invokeFunction(_response);\n\n                    // Invoke global callbacks\n                    if (callbacks.length > 0) {\n                        if (_canLog('debug')) {\n                            atmosphere.util.debug(\"Invoking \" + callbacks.length + \" global callbacks: \" + _response.state);\n                        }\n                        try {\n                            atmosphere.util.each(callbacks, call);\n                        } catch (e) {\n                            atmosphere.util.log(_request.logLevel, [\"Callback exception\" + e]);\n                        }\n                    }\n\n                    // Invoke request callback\n                    if (typeof (_request.callback) === 'function') {\n                        if (_canLog('debug')) {\n                            atmosphere.util.debug(\"Invoking request callbacks\");\n                        }\n                        try {\n                            _request.callback(_response);\n                        } catch (e) {\n                            atmosphere.util.log(_request.logLevel, [\"Callback exception\" + e]);\n                        }\n                    }\n                }\n            }\n\n            this.subscribe = function (options) {\n                _subscribe(options);\n                _execute();\n            };\n\n            this.execute = function () {\n                _execute();\n            };\n\n            this.close = function () {\n                _close();\n            };\n\n            this.disconnect = function () {\n                _disconnect();\n            };\n\n            this.getUrl = function () {\n                return _request.url;\n            };\n\n            this.push = function (message, dispatchUrl) {\n                if (dispatchUrl != null) {\n                    var originalDispatchUrl = _request.dispatchUrl;\n                    _request.dispatchUrl = dispatchUrl;\n                    _push(message);\n                    _request.dispatchUrl = originalDispatchUrl;\n                } else {\n                    _push(message);\n                }\n            };\n\n            this.getUUID = function () {\n                return _request.uuid;\n            };\n\n            this.pushLocal = function (message) {\n                _intraPush(message);\n            };\n\n            this.enableProtocol = function () {\n                return _request.enableProtocol;\n            };\n\n            this.init = function () {\n                _init();\n            };\n\n            this.request = _request;\n            this.response = _response;\n        }\n    };\n\n    atmosphere.subscribe = function (url, callback, request) {\n        if (typeof (callback) === 'function') {\n            atmosphere.addCallback(callback);\n        }\n\n        if (typeof (url) !== \"string\") {\n            request = url;\n        } else {\n            request.url = url;\n        }\n\n        // https://github.com/Atmosphere/atmosphere-javascript/issues/58\n        uuid = ((typeof (request) !== 'undefined') && typeof (request.uuid) !== 'undefined') ? request.uuid : 0;\n\n        var rq = new atmosphere.AtmosphereRequest(request);\n        rq.execute();\n\n        requests[requests.length] = rq;\n        return rq;\n    };\n\n    atmosphere.unsubscribe = function () {\n        if (requests.length > 0) {\n            var requestsClone = [].concat(requests);\n            for (var i = 0; i < requestsClone.length; i++) {\n                var rq = requestsClone[i];\n                rq.close();\n                clearTimeout(rq.response.request.id);\n\n                if (rq.heartbeatTimer) {\n                    clearTimeout(rq.heartbeatTimer);\n                }\n            }\n        }\n        requests = [];\n        callbacks = [];\n    };\n\n    atmosphere.unsubscribeUrl = function (url) {\n        var idx = -1;\n        if (requests.length > 0) {\n            for (var i = 0; i < requests.length; i++) {\n                var rq = requests[i];\n\n                // Suppose you can subscribe once to an url\n                if (rq.getUrl() === url) {\n                    rq.close();\n                    clearTimeout(rq.response.request.id);\n\n                    if (rq.heartbeatTimer) {\n                        clearTimeout(rq.heartbeatTimer);\n                    }\n\n                    idx = i;\n                    break;\n                }\n            }\n        }\n        if (idx >= 0) {\n            requests.splice(idx, 1);\n        }\n    };\n\n    atmosphere.addCallback = function (func) {\n        if (atmosphere.util.inArray(func, callbacks) === -1) {\n            callbacks.push(func);\n        }\n    };\n\n    atmosphere.removeCallback = function (func) {\n        var index = atmosphere.util.inArray(func, callbacks);\n        if (index !== -1) {\n            callbacks.splice(index, 1);\n        }\n    };\n\n    atmosphere.util = {\n        browser: {},\n\n        parseHeaders: function (headerString) {\n            var match, rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg, headers = {};\n            while (match = rheaders.exec(headerString)) {\n                headers[match[1]] = match[2];\n            }\n            return headers;\n        },\n\n        now: function () {\n            return new Date().getTime();\n        },\n\n        isArray: function (array) {\n            return Object.prototype.toString.call(array) === \"[object Array]\";\n        },\n\n        inArray: function (elem, array) {\n            if (!Array.prototype.indexOf) {\n                var len = array.length;\n                for (var i = 0; i < len; ++i) {\n                    if (array[i] === elem) {\n                        return i;\n                    }\n                }\n                return -1;\n            }\n            return array.indexOf(elem);\n        },\n\n        isBinary: function (data) {\n            // True if data is an instance of Blob, ArrayBuffer or ArrayBufferView\n            return /^\\[object\\s(?:Blob|ArrayBuffer|.+Array)\\]$/.test(Object.prototype.toString.call(data));\n        },\n\n        isFunction: function (fn) {\n            return Object.prototype.toString.call(fn) === \"[object Function]\";\n        },\n\n        getAbsoluteURL: function (url) {\n            if (typeof (document.createElement) === 'undefined') {\n                // assuming the url to be already absolute when DOM is not supported\n                return url;\n            }\n            var div = document.createElement(\"div\");\n\n            // Uses an innerHTML property to obtain an absolute URL\n            div.innerHTML = '<a href=\"' + url + '\"></a>';\n\n            // encodeURI and decodeURI are needed to normalize URL between IE and non-IE,\n            // since IE doesn't encode the href property value and return it - http://jsfiddle.net/Yq9M8/1/\n\n            var ua = window.navigator.userAgent;\n            if (ua.indexOf('MSIE ') > 0 || ua.indexOf('Trident/') > 0 || ua.indexOf('Edge/') > 0) {\n                return atmosphere.util.fixedEncodeURI(decodeURI(div.firstChild.href));\n            }\n            return div.firstChild.href;\n        },\n\n        fixedEncodeURI: function (str) {\n            return encodeURI(str).replace(/%5B/g, '[').replace(/%5D/g, ']');\n        },\n\n        prepareURL: function (url) {\n            // Attaches a time stamp to prevent caching\n            var ts = atmosphere.util.now();\n            var ret = url.replace(/([?&])_=[^&]*/, \"$1_=\" + ts);\n\n            return ret + (ret === url ? (/\\?/.test(url) ? \"&\" : \"?\") + \"_=\" + ts : \"\");\n        },\n\n        trim: function (str) {\n            if (!String.prototype.trim) {\n                return str.toString().replace(/(?:(?:^|\\n)\\s+|\\s+(?:$|\\n))/g, \"\").replace(/\\s+/g, \" \");\n            } else {\n                return str.toString().trim();\n            }\n        },\n\n        param: function (params) {\n            var prefix, s = [];\n\n            function add(key, value) {\n                value = atmosphere.util.isFunction(value) ? value() : (value == null ? \"\" : value);\n                s.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(value));\n            }\n\n            function buildParams(prefix, obj) {\n                var name;\n\n                if (atmosphere.util.isArray(obj)) {\n                    atmosphere.util.each(obj, function (i, v) {\n                        if (/\\[\\]$/.test(prefix)) {\n                            add(prefix, v);\n                        } else {\n                            buildParams(prefix + \"[\" + (typeof v === \"object\" ? i : \"\") + \"]\", v);\n                        }\n                    });\n                } else if (Object.prototype.toString.call(obj) === \"[object Object]\") {\n                    for (name in obj) {\n                        buildParams(prefix + \"[\" + name + \"]\", obj[name]);\n                    }\n                } else {\n                    add(prefix, obj);\n                }\n            }\n\n            for (prefix in params) {\n                buildParams(prefix, params[prefix]);\n            }\n\n            return s.join(\"&\").replace(/%20/g, \"+\");\n        },\n\n        storage: function () {\n            try {\n                return !!(window.localStorage && window.StorageEvent);\n            } catch (e) {\n                //Firefox throws an exception here, see\n                //https://bugzilla.mozilla.org/show_bug.cgi?id=748620\n                return false;\n            }\n        },\n\n        iterate: function (fn, interval) {\n            var timeoutId;\n\n            // Though the interval is 0 for real-time application, there is a delay between setTimeout calls\n            // For detail, see https://developer.mozilla.org/en/window.setTimeout#Minimum_delay_and_timeout_nesting\n            interval = interval || 0;\n\n            (function loop() {\n                timeoutId = setTimeout(function () {\n                    if (fn() === false) {\n                        return;\n                    }\n\n                    loop();\n                }, interval);\n            })();\n\n            return function () {\n                clearTimeout(timeoutId);\n            };\n        },\n\n        each: function (obj, callback, args) {\n            if (!obj) return;\n            var value, i = 0, length = obj.length, isArray = atmosphere.util.isArray(obj);\n\n            if (args) {\n                if (isArray) {\n                    for (; i < length; i++) {\n                        value = callback.apply(obj[i], args);\n\n                        if (value === false) {\n                            break;\n                        }\n                    }\n                } else {\n                    for (i in obj) {\n                        value = callback.apply(obj[i], args);\n\n                        if (value === false) {\n                            break;\n                        }\n                    }\n                }\n\n                // A special, fast, case for the most common use of each\n            } else {\n                if (isArray) {\n                    for (; i < length; i++) {\n                        value = callback.call(obj[i], i, obj[i]);\n\n                        if (value === false) {\n                            break;\n                        }\n                    }\n                } else {\n                    for (i in obj) {\n                        value = callback.call(obj[i], i, obj[i]);\n\n                        if (value === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n\n            return obj;\n        },\n\n        extend: function (target) {\n            var i, options, name;\n\n            for (i = 1; i < arguments.length; i++) {\n                if ((options = arguments[i]) != null) {\n                    for (name in options) {\n                        target[name] = options[name];\n                    }\n                }\n            }\n\n            return target;\n        },\n        on: function (elem, type, fn) {\n            if (elem.addEventListener) {\n                elem.addEventListener(type, fn, false);\n            } else if (elem.attachEvent) {\n                elem.attachEvent(\"on\" + type, fn);\n            }\n        },\n        off: function (elem, type, fn) {\n            if (elem.removeEventListener) {\n                elem.removeEventListener(type, fn, false);\n            } else if (elem.detachEvent) {\n                elem.detachEvent(\"on\" + type, fn);\n            }\n        },\n\n        log: function (level, args) {\n            if (window.console) {\n                var logger = window.console[level];\n                if (typeof logger === 'function') {\n                    logger.apply(window.console, args);\n                }\n            }\n        },\n\n        warn: function () {\n            atmosphere.util.log('warn', arguments);\n        },\n\n        info: function () {\n            atmosphere.util.log('info', arguments);\n        },\n\n        debug: function () {\n            atmosphere.util.log('debug', arguments);\n        },\n\n        error: function () {\n            atmosphere.util.log('error', arguments);\n        },\n\n        xhr: function () {\n            try {\n                return new window.XMLHttpRequest();\n            } catch (e1) {\n                try {\n                    return new window.ActiveXObject(\"Microsoft.XMLHTTP\");\n                } catch (e2) {\n                }\n            }\n        },\n\n        checkCORSSupport: function () {\n            if (atmosphere.util.browser.msie && !window.XDomainRequest && +atmosphere.util.browser.version.split(\".\")[0] < 11) {\n                return true;\n            } else if (atmosphere.util.browser.opera && +atmosphere.util.browser.version.split(\".\") < 12.0) {\n                return true;\n            }\n\n            // KreaTV 4.1 -> 4.4\n            else if (atmosphere.util.trim(navigator.userAgent).slice(0, 16) === \"KreaTVWebKit/531\") {\n                return true;\n            }\n            // KreaTV 3.8\n            else if (atmosphere.util.trim(navigator.userAgent).slice(-7).toLowerCase() === \"kreatel\") {\n                return true;\n            }\n\n            // Force older Android versions to use CORS as some version like 2.2.3 fail otherwise\n            var ua = navigator.userAgent.toLowerCase();\n            var androidVersionMatches = ua.match(/.+android ([0-9]{1,2})/i),\n                majorVersion = parseInt((androidVersionMatches && androidVersionMatches[0]) || -1, 10);\n            if (!isNaN(majorVersion) && majorVersion > -1 && majorVersion < 3) {\n                return true;\n            }\n            return false;\n        }\n    };\n\n    guid = atmosphere.util.now();\n\n    // Browser sniffing\n    (function () {\n        var ua = navigator.userAgent.toLowerCase(),\n            match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\n                /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\n                /(msie) ([\\w.]+)/.exec(ua) ||\n                /(trident)(?:.*? rv:([\\w.]+)|)/.exec(ua) ||\n                ua.indexOf(\"android\") < 0 && /version\\/(.+) (safari)/.exec(ua) ||\n                ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) ||\n                [];\n\n        // Swaps variables\n        if (match[2] === \"safari\") {\n            match[2] = match[1];\n            match[1] = \"safari\";\n        }\n        atmosphere.util.browser[match[1] || \"\"] = true;\n        atmosphere.util.browser.version = match[2] || \"0\";\n        atmosphere.util.browser.vmajor = atmosphere.util.browser.version.split(\".\")[0];\n\n        // Trident is the layout engine of the Internet Explorer\n        // IE 11 has no \"MSIE: 11.0\" token\n        if (atmosphere.util.browser.trident) {\n            atmosphere.util.browser.msie = true;\n        }\n\n        // The storage event of Internet Explorer and Firefox 3 works strangely\n        if (atmosphere.util.browser.msie || (atmosphere.util.browser.mozilla && +atmosphere.util.browser.version.split(\".\")[0] === 1)) {\n            atmosphere.util.storage = false;\n        }\n    })();\n\n    atmosphere.callbacks = {\n        unload: function () {\n            atmosphere.util.debug(new Date() + \" Atmosphere: \" + \"unload event\");\n            atmosphere.unsubscribe();\n        },\n        beforeUnload: function () {\n            atmosphere.util.debug(new Date() + \" Atmosphere: \" + \"beforeunload event\");\n\n            // ATMOSPHERE-JAVASCRIPT-143: Delay reconnect to avoid reconnect attempts before an actual unload (we don't know if an unload will happen, yet)\n            atmosphere._beforeUnloadState = true;\n            setTimeout(function () {\n                atmosphere.util.debug(new Date() + \" Atmosphere: \" + \"beforeunload event timeout reached. Reset _beforeUnloadState flag\");\n                atmosphere._beforeUnloadState = false;\n            }, 5000);\n        },\n        offline: function () {\n            atmosphere.util.debug(new Date() + \" Atmosphere: offline event\");\n            offline = true;\n            if (requests.length > 0) {\n                var requestsClone = [].concat(requests);\n                for (var i = 0; i < requestsClone.length; i++) {\n                    var rq = requestsClone[i];\n                    if (rq.request.handleOnlineOffline) {\n                        rq.close();\n                        clearTimeout(rq.response.request.id);\n\n                        if (rq.heartbeatTimer) {\n                            clearTimeout(rq.heartbeatTimer);\n                        }\n                    }\n                }\n            }\n        },\n        online: function () {\n            atmosphere.util.debug(new Date() + \" Atmosphere: online event\");\n            if (requests.length > 0) {\n                for (var i = 0; i < requests.length; i++) {\n                    if (requests[i].request.handleOnlineOffline) {\n                        requests[i].init();\n                        requests[i].execute();\n                    }\n                }\n            }\n            offline = false;\n        }\n    };\n\n    atmosphere.bindEvents = function () {\n        atmosphere.util.on(window, \"unload\", atmosphere.callbacks.unload);\n        atmosphere.util.on(window, \"beforeunload\", atmosphere.callbacks.beforeUnload);\n        atmosphere.util.on(window, \"offline\", atmosphere.callbacks.offline);\n        atmosphere.util.on(window, \"online\", atmosphere.callbacks.online);\n    };\n\n    atmosphere.unbindEvents = function () {\n        atmosphere.util.off(window, \"unload\", atmosphere.callbacks.unload);\n        atmosphere.util.off(window, \"beforeunload\", atmosphere.callbacks.beforeUnload);\n        atmosphere.util.off(window, \"offline\", atmosphere.callbacks.offline);\n        atmosphere.util.off(window, \"online\", atmosphere.callbacks.online);\n    };\n\n    atmosphere.bindEvents();\n\n    return atmosphere;\n}));\n/* jshint eqnull:true, noarg:true, noempty:true, eqeqeq:true, evil:true, laxbreak:true, undef:true, browser:true, indent:false, maxerr:50 */\n", "module.exports = require('./atmosphere');\n", "/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n", "import Cookies from 'js-cookie';\n\nexport function calculatePath({ pathname }: URL): string {\n  return pathname.length > 1 && pathname.endsWith('/') ? pathname.slice(0, -1) : pathname;\n}\n\nconst CookieManager: Cookies.CookiesStatic = Cookies.withAttributes({\n  path: calculatePath(new URL(document.baseURI)),\n});\n\nexport default CookieManager;\n", "import CookieManager from './CookieManager.js';\n\n/** @internal */\nexport const VAADIN_CSRF_HEADER = 'X-CSRF-Token';\n/** @internal */\nexport const VAADIN_CSRF_COOKIE_NAME = 'csrfToken';\n/** @internal */\nexport const SPRING_CSRF_COOKIE_NAME = 'XSRF-TOKEN';\n\nfunction extractContentFromMetaTag(element: HTMLMetaElement | null): string | undefined {\n  if (element) {\n    const value = element.content;\n    if (value && value.toLowerCase() !== 'undefined') {\n      return value;\n    }\n  }\n  return undefined;\n}\n\n/** @internal */\nfunction getSpringCsrfHeaderFromMetaTag(doc: Document): string | undefined {\n  const csrfHeader = doc.head.querySelector<HTMLMetaElement>('meta[name=\"_csrf_header\"]');\n  return extractContentFromMetaTag(csrfHeader);\n}\n\n/** @internal */\nfunction getSpringCsrfTokenFromMetaTag(doc: Document): string | undefined {\n  const csrfToken = doc.head.querySelector<HTMLMetaElement>('meta[name=\"_csrf\"]');\n  return extractContentFromMetaTag(csrfToken);\n}\n\n/** @internal */\nexport function getSpringCsrfInfo(doc: Document): Record<string, string> {\n  const csrfHeader = getSpringCsrfHeaderFromMetaTag(doc);\n  let csrf = CookieManager.get(SPRING_CSRF_COOKIE_NAME);\n  if (!csrf || csrf.length === 0) {\n    csrf = getSpringCsrfTokenFromMetaTag(doc);\n  }\n  const headers: Record<string, string> = {};\n  if (csrf && csrfHeader) {\n    headers._csrf = csrf;\n    // eslint-disable-next-line camelcase\n    headers._csrf_header = csrfHeader;\n  }\n  return headers;\n}\n\n/** @internal */\nexport function getSpringCsrfTokenHeadersForAuthRequest(doc: Document): Record<string, string> {\n  const csrfInfo = getSpringCsrfInfo(doc);\n  const headers: Record<string, string> = {};\n  if (csrfInfo._csrf && csrfInfo._csrf_header) {\n    headers[csrfInfo._csrf_header] = csrfInfo._csrf;\n  }\n  return headers;\n}\n\n/** @internal */\nexport function getCsrfTokenHeadersForEndpointRequest(doc: Document): Record<string, string> {\n  const headers: Record<string, string> = {};\n\n  const csrfInfo = getSpringCsrfInfo(doc);\n  if (csrfInfo._csrf && csrfInfo._csrf_header) {\n    headers[csrfInfo._csrf_header] = csrfInfo._csrf;\n  } else {\n    headers[VAADIN_CSRF_HEADER] = CookieManager.get(VAADIN_CSRF_COOKIE_NAME) ?? '';\n  }\n\n  return headers;\n}\n", "import type { MiddlewareClass, MiddlewareContext, MiddlewareNext } from './Connect.js';\nimport CookieManager from './CookieManager.js';\nimport { getSpringCsrfInfo, getSpringCsrfTokenHeadersForAuthRequest, VAADIN_CSRF_HEADER } from './CsrfUtils.js';\n\nconst JWT_COOKIE_NAME = 'jwt.headerAndPayload';\n\nfunction getSpringCsrfTokenFromResponseBody(body: string): Record<string, string> {\n  const doc = new DOMParser().parseFromString(body, 'text/html');\n  return getSpringCsrfInfo(doc);\n}\n\nfunction clearSpringCsrfMetaTags() {\n  Array.from(document.head.querySelectorAll('meta[name=\"_csrf\"], meta[name=\"_csrf_header\"]')).forEach((el) =>\n    el.remove(),\n  );\n}\n\nfunction updateSpringCsrfMetaTags(springCsrfInfo: Record<string, string>) {\n  clearSpringCsrfMetaTags();\n  const headerNameMeta: HTMLMetaElement = document.createElement('meta');\n  headerNameMeta.name = '_csrf_header';\n  headerNameMeta.content = springCsrfInfo._csrf_header;\n  document.head.appendChild(headerNameMeta);\n  const tokenMeta: HTMLMetaElement = document.createElement('meta');\n  tokenMeta.name = '_csrf';\n  tokenMeta.content = springCsrfInfo._csrf;\n  document.head.appendChild(tokenMeta);\n}\n\nconst getVaadinCsrfTokenFromResponseBody = (body: string): string | undefined => {\n  const match = /window\\.Vaadin = \\{TypeScript: \\{\"csrfToken\":\"([0-9a-zA-Z\\\\-]{36})\"\\}\\};/iu.exec(body);\n  return match ? match[1] : undefined;\n};\n\nasync function updateCsrfTokensBasedOnResponse(response: Response): Promise<string | undefined> {\n  const responseText = await response.text();\n  const token = getVaadinCsrfTokenFromResponseBody(responseText);\n  const springCsrfTokenInfo = getSpringCsrfTokenFromResponseBody(responseText);\n  updateSpringCsrfMetaTags(springCsrfTokenInfo);\n\n  return token;\n}\n\nasync function doLogout(logoutUrl: string, headers: Record<string, string>) {\n  const response = await fetch(logoutUrl, { headers, method: 'POST' });\n  if (!response.ok) {\n    throw new Error(`failed to logout with response ${response.status}`);\n  }\n\n  await updateCsrfTokensBasedOnResponse(response);\n}\n\nexport interface LoginResult {\n  error: boolean;\n  token?: string;\n  errorTitle?: string;\n  errorMessage?: string;\n  redirectUrl?: string;\n  defaultUrl?: string;\n}\n\nexport interface LoginOptions {\n  loginProcessingUrl?: string;\n}\n\nexport interface LogoutOptions {\n  logoutUrl?: string;\n}\n\n/**\n * A helper method for Spring Security based form login.\n * @param username - username\n * @param password - password\n * @param options - defines additional options, e.g, the loginProcessingUrl etc.\n */\nexport async function login(username: string, password: string, options?: LoginOptions): Promise<LoginResult> {\n  try {\n    const data = new FormData();\n    data.append('username', username);\n    data.append('password', password);\n\n    const loginProcessingUrl = options?.loginProcessingUrl ?? 'login';\n    const headers = getSpringCsrfTokenHeadersForAuthRequest(document);\n    headers.source = 'typescript';\n    const response = await fetch(loginProcessingUrl, {\n      body: data,\n      headers,\n      method: 'POST',\n    });\n\n    // This code assumes that a VaadinSavedRequestAwareAuthenticationSuccessHandler is used on the server side,\n    // setting these header values based on the \"source=typescript\" header set above\n\n    const result = response.headers.get('Result');\n    const savedUrl = response.headers.get('Saved-url') ?? undefined;\n    const defaultUrl = response.headers.get('Default-url') ?? undefined;\n    const loginSuccessful = response.ok && result === 'success';\n\n    if (loginSuccessful) {\n      const vaadinCsrfToken = response.headers.get('Vaadin-CSRF') ?? undefined;\n\n      const springCsrfHeader = response.headers.get('Spring-CSRF-header') ?? undefined;\n      const springCsrfToken = response.headers.get('Spring-CSRF-token') ?? undefined;\n      if (springCsrfHeader && springCsrfToken) {\n        const springCsrfTokenInfo: Record<string, string> = {};\n        springCsrfTokenInfo._csrf = springCsrfToken;\n        // eslint-disable-next-line camelcase\n        springCsrfTokenInfo._csrf_header = springCsrfHeader;\n        updateSpringCsrfMetaTags(springCsrfTokenInfo);\n      }\n\n      return {\n        defaultUrl,\n        error: false,\n        redirectUrl: savedUrl,\n        token: vaadinCsrfToken,\n      };\n    }\n    return {\n      error: true,\n      errorMessage: 'Check that you have entered the correct username and password and try again.',\n      errorTitle: 'Incorrect username or password.',\n    };\n  } catch (e: unknown) {\n    if (e instanceof Error) {\n      return {\n        error: true,\n        errorMessage: e.message,\n        errorTitle: e.name,\n      };\n    }\n\n    throw e;\n  }\n}\n\n/**\n * A helper method for Spring Security based form logout\n * @param options - defines additional options, e.g, the logoutUrl.\n */\nexport async function logout(options?: LogoutOptions): Promise<void> {\n  // this assumes the default Spring Security logout configuration (handler URL)\n  const logoutUrl = options?.logoutUrl ?? 'logout';\n  try {\n    const headers = getSpringCsrfTokenHeadersForAuthRequest(document);\n    await doLogout(logoutUrl, headers);\n  } catch {\n    try {\n      const response = await fetch('?nocache');\n      const responseText = await response.text();\n      const doc = new DOMParser().parseFromString(responseText, 'text/html');\n      const headers = getSpringCsrfTokenHeadersForAuthRequest(doc);\n      await doLogout(logoutUrl, headers);\n    } catch (error) {\n      // clear the token if the call fails\n      clearSpringCsrfMetaTags();\n      throw error;\n    }\n  } finally {\n    CookieManager.remove(JWT_COOKIE_NAME);\n  }\n}\n\n/**\n * It defines what to do when it detects a session is invalid. E.g.,\n * show a login view.\n * It takes an <code>EndpointCallContinue</code> parameter, which can be\n * used to continue the endpoint call.\n */\nexport type OnInvalidSessionCallback = () => Promise<LoginResult>;\n\n/**\n * A helper class for handling invalid sessions during an endpoint call.\n * E.g., you can use this to show user a login page when the session has\n * expired.\n */\nexport class InvalidSessionMiddleware implements MiddlewareClass {\n  private readonly onInvalidSessionCallback: OnInvalidSessionCallback;\n\n  constructor(onInvalidSessionCallback: OnInvalidSessionCallback) {\n    this.onInvalidSessionCallback = onInvalidSessionCallback;\n  }\n\n  async invoke(context: MiddlewareContext, next: MiddlewareNext): Promise<Response> {\n    const clonedContext = { ...context };\n    clonedContext.request = context.request.clone();\n    const response = await next(context);\n    if (response.status === 401) {\n      const loginResult = await this.onInvalidSessionCallback();\n      if (loginResult.token) {\n        clonedContext.request.headers.set(VAADIN_CSRF_HEADER, loginResult.token);\n        return next(clonedContext) as Promise<Response>;\n      }\n    }\n    return response;\n  }\n}\n", "export enum ConnectionState {\n  /**\n   * Application is connected to server: last transaction over the wire (XHR /\n   * heartbeat / endpoint call) was successful.\n   */\n  CONNECTED = 'connected',\n\n  /**\n   * Application is connected and Flow is loading application state from the\n   * server, or Fusion is waiting for an endpoint call to return.\n   */\n  LOADING = 'loading',\n\n  /**\n   * Application has been temporarily disconnected from the server because the\n   * last transaction over the wire (XHR / heartbeat / endpoint call) resulted\n   * in a network error, or the browser has received the 'online' event and needs\n   * to verify reconnection with the server. Flow is attempting to reconnect\n   * a configurable number of times before giving up.\n   */\n  RECONNECTING = 'reconnecting',\n\n  /**\n   * Application has been permanently disconnected due to browser receiving the\n   * 'offline' event, or the server not being reached after a number of reconnect\n   * attempts.\n   */\n  CONNECTION_LOST = 'connection-lost',\n}\n\nexport type ConnectionStateChangeListener = (previous: ConnectionState, current: ConnectionState) => void;\n\nexport class ConnectionStateStore {\n  private connectionState: ConnectionState;\n\n  private stateChangeListeners: Set<ConnectionStateChangeListener> = new Set();\n\n  private loadingCount = 0;\n\n  constructor(initialState: ConnectionState) {\n    this.connectionState = initialState;\n\n    this.serviceWorkerMessageListener = this.serviceWorkerMessageListener.bind(this);\n\n    if (navigator.serviceWorker) {\n      // Query service worker if the most recent fetch was served from cache\n      // Add message listener for handling response\n      navigator.serviceWorker.addEventListener('message', this.serviceWorkerMessageListener);\n      // Send JSON-RPC request to Vaadin service worker\n      navigator.serviceWorker.ready.then((registration) => {\n        registration?.active?.postMessage({\n          method: 'Vaadin.ServiceWorker.isConnectionLost',\n          id: 'Vaadin.ServiceWorker.isConnectionLost',\n        });\n      });\n    }\n  }\n\n  addStateChangeListener(listener: ConnectionStateChangeListener): void {\n    this.stateChangeListeners.add(listener);\n  }\n\n  removeStateChangeListener(listener: ConnectionStateChangeListener): void {\n    this.stateChangeListeners.delete(listener);\n  }\n\n  loadingStarted(): void {\n    this.state = ConnectionState.LOADING;\n    this.loadingCount += 1;\n  }\n\n  loadingFinished(): void {\n    this.decreaseLoadingCount(ConnectionState.CONNECTED);\n  }\n\n  loadingFailed(): void {\n    this.decreaseLoadingCount(ConnectionState.CONNECTION_LOST);\n  }\n\n  private decreaseLoadingCount(finalState: ConnectionState) {\n    if (this.loadingCount > 0) {\n      this.loadingCount -= 1;\n      if (this.loadingCount === 0) {\n        this.state = finalState;\n      }\n    }\n  }\n\n  get state(): ConnectionState {\n    return this.connectionState;\n  }\n\n  set state(newState: ConnectionState) {\n    if (newState !== this.connectionState) {\n      const prevState = this.connectionState;\n      this.connectionState = newState;\n      this.loadingCount = 0;\n      for (const listener of this.stateChangeListeners) {\n        listener(prevState, this.connectionState);\n      }\n    }\n  }\n\n  get online(): boolean {\n    return this.connectionState === ConnectionState.CONNECTED || this.connectionState === ConnectionState.LOADING;\n  }\n\n  get offline(): boolean {\n    return !this.online;\n  }\n\n  private serviceWorkerMessageListener(event: MessageEvent) {\n    // Handle JSON-RPC response from service worker\n    if (typeof event.data === 'object' && event.data.id === 'Vaadin.ServiceWorker.isConnectionLost') {\n      if (event.data.result === true) {\n        this.state = ConnectionState.CONNECTION_LOST;\n      }\n\n      // Cleanup: remove event listener upon receiving response\n      navigator.serviceWorker.removeEventListener('message', this.serviceWorkerMessageListener);\n    }\n  }\n}\n\nexport const isLocalhost = (hostname: string) => {\n  if (hostname === 'localhost') {\n    return true;\n  }\n  if (hostname === '[::1]') {\n    return true;\n  }\n  if (hostname.match(/^127\\.\\d+\\.\\d+\\.\\d+$/)) {\n    return true;\n  }\n\n  return false;\n};\n\nconst $wnd = window as any;\nif (!$wnd.Vaadin?.connectionState) {\n  let online;\n  if (isLocalhost(window.location.hostname)) {\n    // We do not know if we are online or not as we cannot trust navigator.onLine which checks availability of a network connection. Better to assume online so localhost apps can work\n    online = true;\n  } else {\n    online = navigator.onLine;\n  }\n\n  $wnd.Vaadin = $wnd.Vaadin || {};\n  $wnd.Vaadin.connectionState = new ConnectionStateStore(\n    online ? ConnectionState.CONNECTED : ConnectionState.CONNECTION_LOST\n  );\n}\n", "/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n", "/*\n * Copyright 2000-2020 Vaadin Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport { html, LitElement } from 'lit';\nimport { property } from 'lit/decorators.js';\nimport { classMap } from 'lit/directives/class-map.js';\nimport { ConnectionState, ConnectionStateStore } from './ConnectionState.js';\n\nconst DEFAULT_STYLE_ID = 'css-loading-indicator';\n\n/**\n * The loading indicator states\n */\nexport const enum LoadingBarState {\n  IDLE = '',\n  FIRST = 'first',\n  SECOND = 'second',\n  THIRD = 'third',\n}\n\n/**\n * Component showing loading and connection indicator. When added to DOM,\n * listens for changes on `window.Vaadin.connectionState` ConnectionStateStore.\n */\nexport class ConnectionIndicator extends LitElement {\n  /**\n   * Initialize global connection indicator instance at\n   * window.Vaadin.connectionIndicator and add instance to the document body.\n   */\n  static create(): ConnectionIndicator {\n    const $wnd = window as any;\n    if (!$wnd.Vaadin?.connectionIndicator) {\n      $wnd.Vaadin = $wnd.Vaadin || {};\n      $wnd.Vaadin.connectionIndicator = document.createElement('vaadin-connection-indicator');\n      document.body.appendChild($wnd.Vaadin.connectionIndicator);\n    }\n    return $wnd.Vaadin?.connectionIndicator as ConnectionIndicator;\n  }\n\n  /**\n   * The delay before showing the loading indicator, in ms.\n   */\n  @property({ type: Number })\n  firstDelay = 450;\n\n  /**\n   * The delay before the loading indicator goes into \"second\" state, in ms.\n   */\n  @property({ type: Number })\n  secondDelay = 1500;\n\n  /**\n   * The delay before the loading indicator goes into \"third\" state, in ms.\n   */\n  @property({ type: Number })\n  thirdDelay = 5000;\n\n  /**\n   * The duration for which the connection state change message is visible,\n   * in ms.\n   */\n  @property({ type: Number })\n  expandedDuration = 2000;\n\n  /**\n   * The message shown when the connection goes to connected state.\n   */\n  @property({ type: String })\n  onlineText = 'Online';\n\n  /**\n   * The message shown when the connection goes to lost state.\n   */\n  @property({ type: String })\n  offlineText = 'Connection lost';\n\n  /**\n   * The message shown when the connection goes to reconnecting state.\n   */\n  @property({ type: String })\n  reconnectingText = 'Connection lost, trying to reconnect...';\n\n  @property({ type: Boolean, reflect: true })\n  private offline = false;\n\n  @property({ type: Boolean, reflect: true })\n  private reconnecting = false;\n\n  @property({ type: Boolean, reflect: true })\n  private expanded = false;\n\n  @property({ type: Boolean, reflect: true })\n  private loading = false;\n\n  @property({ type: String })\n  private loadingBarState: LoadingBarState = LoadingBarState.IDLE;\n\n  private applyDefaultThemeState = true;\n\n  private firstTimeout = 0;\n\n  private secondTimeout = 0;\n\n  private thirdTimeout = 0;\n\n  private expandedTimeout = 0;\n\n  private connectionStateStore?: ConnectionStateStore;\n\n  private readonly connectionStateListener: () => void;\n\n  private lastMessageState: ConnectionState = ConnectionState.CONNECTED;\n\n  constructor() {\n    super();\n\n    this.connectionStateListener = () => {\n      this.expanded = this.updateConnectionState();\n      this.expandedTimeout = this.timeoutFor(\n        this.expandedTimeout,\n        this.expanded,\n        () => {\n          this.expanded = false;\n        },\n        this.expandedDuration\n      );\n    };\n  }\n\n  render() {\n    return html`\n      <div class=\"v-loading-indicator ${this.loadingBarState}\" style=${this.getLoadingBarStyle()}></div>\n\n      <div\n        class=\"v-status-message ${classMap({\n          active: this.reconnecting,\n        })}\"\n      >\n        <span class=\"text\"> ${this.renderMessage()} </span>\n      </div>\n    `;\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    const $wnd = window as any;\n    if ($wnd.Vaadin?.connectionState) {\n      this.connectionStateStore = $wnd.Vaadin.connectionState as ConnectionStateStore;\n      this.connectionStateStore.addStateChangeListener(this.connectionStateListener);\n      this.updateConnectionState();\n    }\n\n    this.updateTheme();\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    if (this.connectionStateStore) {\n      this.connectionStateStore.removeStateChangeListener(this.connectionStateListener);\n    }\n\n    this.updateTheme();\n  }\n\n  @property({ type: Boolean })\n  get applyDefaultTheme() {\n    return this.applyDefaultThemeState;\n  }\n\n  set applyDefaultTheme(applyDefaultTheme: boolean) {\n    if (applyDefaultTheme !== this.applyDefaultThemeState) {\n      this.applyDefaultThemeState = applyDefaultTheme;\n      this.updateTheme();\n    }\n  }\n\n  protected createRenderRoot() {\n    return this;\n  }\n\n  /**\n   * Update state flags.\n   *\n   * @return true if the connection message changes, and therefore a new\n   * message should be shown\n   */\n  private updateConnectionState(): boolean {\n    const state = this.connectionStateStore?.state;\n    this.offline = state === ConnectionState.CONNECTION_LOST;\n    this.reconnecting = state === ConnectionState.RECONNECTING;\n    this.updateLoading(state === ConnectionState.LOADING);\n    if (this.loading) {\n      // Entering loading state, do not show message\n      return false;\n    }\n\n    if (state !== this.lastMessageState) {\n      this.lastMessageState = state!;\n      // Message changes, show new message\n      return true;\n    }\n\n    // Message did not change\n    return false;\n  }\n\n  private updateLoading(loading: boolean) {\n    this.loading = loading;\n    this.loadingBarState = LoadingBarState.IDLE;\n\n    this.firstTimeout = this.timeoutFor(\n      this.firstTimeout,\n      loading,\n      () => {\n        this.loadingBarState = LoadingBarState.FIRST;\n      },\n      this.firstDelay\n    );\n\n    this.secondTimeout = this.timeoutFor(\n      this.secondTimeout,\n      loading,\n      () => {\n        this.loadingBarState = LoadingBarState.SECOND;\n      },\n      this.secondDelay\n    );\n\n    this.thirdTimeout = this.timeoutFor(\n      this.thirdTimeout,\n      loading,\n      () => {\n        this.loadingBarState = LoadingBarState.THIRD;\n      },\n      this.thirdDelay\n    );\n  }\n\n  private renderMessage() {\n    if (this.reconnecting) {\n      return this.reconnectingText;\n    }\n\n    if (this.offline) {\n      return this.offlineText;\n    }\n\n    return this.onlineText;\n  }\n\n  private updateTheme() {\n    if (this.applyDefaultThemeState && this.isConnected) {\n      if (!document.getElementById(DEFAULT_STYLE_ID)) {\n        const style = document.createElement('style');\n        style.id = DEFAULT_STYLE_ID;\n        style.textContent = this.getDefaultStyle();\n        document.head.appendChild(style);\n      }\n    } else {\n      const style = document.getElementById(DEFAULT_STYLE_ID);\n      if (style) {\n        document.head.removeChild(style);\n      }\n    }\n  }\n\n  private getDefaultStyle(): string {\n    return `\n      @keyframes v-progress-start {\n        0% {\n          width: 0%;\n        }\n        100% {\n          width: 50%;\n        }\n      }\n      @keyframes v-progress-delay {\n        0% {\n          width: 50%;\n        }\n        100% {\n          width: 90%;\n        }\n      }\n      @keyframes v-progress-wait {\n        0% {\n          width: 90%;\n          height: 4px;\n        }\n        3% {\n          width: 91%;\n          height: 7px;\n        }\n        100% {\n          width: 96%;\n          height: 7px;\n        }\n      }\n      @keyframes v-progress-wait-pulse {\n        0% {\n          opacity: 1;\n        }\n        50% {\n          opacity: 0.1;\n        }\n        100% {\n          opacity: 1;\n        }\n      }\n      .v-loading-indicator,\n      .v-status-message {\n        position: fixed;\n        z-index: 251;\n        left: 0;\n        right: auto;\n        top: 0;\n        background-color: var(--lumo-primary-color, var(--material-primary-color, blue));\n        transition: none;\n      }\n      .v-loading-indicator {\n        width: 50%;\n        height: 4px;\n        opacity: 1;\n        pointer-events: none;\n        animation: v-progress-start 1000ms 200ms both;\n      }\n      .v-loading-indicator[style*='none'] {\n        display: block !important;\n        width: 100%;\n        opacity: 0;\n        animation: none;\n        transition: opacity 500ms 300ms, width 300ms;\n      }\n      .v-loading-indicator.second {\n        width: 90%;\n        animation: v-progress-delay 3.8s forwards;\n      }\n      .v-loading-indicator.third {\n        width: 96%;\n        animation: v-progress-wait 5s forwards, v-progress-wait-pulse 1s 4s infinite backwards;\n      }\n\n      vaadin-connection-indicator[offline] .v-loading-indicator,\n      vaadin-connection-indicator[reconnecting] .v-loading-indicator {\n        display: none;\n      }\n\n      .v-status-message {\n        opacity: 0;\n        width: 100%;\n        max-height: var(--status-height-collapsed, 8px);\n        overflow: hidden;\n        background-color: var(--status-bg-color-online, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        color: var(\n          --status-text-color-online,\n          var(--lumo-primary-contrast-color, var(--material-primary-contrast-color, #fff))\n        );\n        font-size: 0.75rem;\n        font-weight: 600;\n        line-height: 1;\n        transition: all 0.5s;\n        padding: 0 0.5em;\n      }\n\n      vaadin-connection-indicator[offline] .v-status-message,\n      vaadin-connection-indicator[reconnecting] .v-status-message {\n        opacity: 1;\n        background-color: var(--status-bg-color-offline, var(--lumo-shade, #333));\n        color: var(\n          --status-text-color-offline,\n          var(--lumo-primary-contrast-color, var(--material-primary-contrast-color, #fff))\n        );\n        background-image: repeating-linear-gradient(\n          45deg,\n          rgba(255, 255, 255, 0),\n          rgba(255, 255, 255, 0) 10px,\n          rgba(255, 255, 255, 0.1) 10px,\n          rgba(255, 255, 255, 0.1) 20px\n        );\n      }\n\n      vaadin-connection-indicator[reconnecting] .v-status-message {\n        animation: show-reconnecting-status 2s;\n      }\n\n      vaadin-connection-indicator[offline] .v-status-message:hover,\n      vaadin-connection-indicator[reconnecting] .v-status-message:hover,\n      vaadin-connection-indicator[expanded] .v-status-message {\n        max-height: var(--status-height, 1.75rem);\n      }\n\n      vaadin-connection-indicator[expanded] .v-status-message {\n        opacity: 1;\n      }\n\n      .v-status-message span {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: var(--status-height, 1.75rem);\n      }\n\n      vaadin-connection-indicator[reconnecting] .v-status-message span::before {\n        content: '';\n        width: 1em;\n        height: 1em;\n        border-top: 2px solid\n          var(--status-spinner-color, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        border-left: 2px solid\n          var(--status-spinner-color, var(--lumo-primary-color, var(--material-primary-color, blue)));\n        border-right: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n        border-radius: 50%;\n        box-sizing: border-box;\n        animation: v-spin 0.4s linear infinite;\n        margin: 0 0.5em;\n      }\n\n      @keyframes v-spin {\n        100% {\n          transform: rotate(360deg);\n        }\n      }\n    `;\n  }\n\n  private getLoadingBarStyle(): string {\n    switch (this.loadingBarState) {\n      case LoadingBarState.IDLE:\n        return 'display: none';\n      case LoadingBarState.FIRST:\n      case LoadingBarState.SECOND:\n      case LoadingBarState.THIRD:\n        return 'display: block';\n      default:\n        return '';\n    }\n  }\n\n  private timeoutFor(timeoutId: number, enabled: boolean, handler: () => void, delay: number): number {\n    if (timeoutId !== 0) {\n      window.clearTimeout(timeoutId);\n    }\n\n    return enabled ? window.setTimeout(handler, delay) : 0;\n  }\n\n  static get instance(): ConnectionIndicator {\n    return ConnectionIndicator.create();\n  }\n}\n\nif (customElements.get('vaadin-connection-indicator') === undefined) {\n  customElements.define('vaadin-connection-indicator', ConnectionIndicator);\n}\n\n/**\n * The global connection indicator object. Its appearance and behavior can be\n * configured via properties:\n *\n * connectionIndicator.firstDelay = 0;\n * connectionIndicator.onlineText = 'The application is online';\n *\n * To avoid altering the appearance while the indicator is active, apply the\n * configuration in your application 'frontend/index.ts' file.\n */\nexport const connectionIndicator = ConnectionIndicator.instance;\n", "export * from './ConnectionState.js';\nexport * from './ConnectionIndicator.js';\n\nconst $wnd = window as any;\n$wnd.Vaadin = $wnd.Vaadin || {};\n$wnd.Vaadin.registrations = $wnd.Vaadin.registrations || [];\n$wnd.Vaadin.registrations.push({\n  is: '@vaadin/common-frontend',\n  version: /* updated-by-script */ '0.0.18',\n});\n", "/**\n * An exception that gets thrown when the Vaadin backend responds\n * with not ok status.\n */\nexport class EndpointError extends Error {\n  /**\n   * The optional detail object, containing additional information sent\n   * from the backend\n   */\n  detail?: unknown;\n  /**\n   * The optional name of the exception that was thrown on a backend\n   */\n  type?: string;\n\n  /**\n   * @param message - the `message` property value\n   * @param type - the `type` property value\n   * @param detail - the `detail` property value\n   */\n  constructor(message: string, type?: string, detail?: unknown) {\n    super(message);\n    this.type = type;\n    this.detail = detail;\n  }\n}\n\n/**\n * An exception that gets thrown if Vaadin endpoint responds\n * with non-ok status and provides additional info\n * on the validation errors occurred.\n */\nexport class EndpointValidationError extends EndpointError {\n  /**\n   * An array of the validation errors.\n   */\n  validationErrorData: ValidationErrorData[];\n  /**\n   * An original validation error message.\n   */\n  validationErrorMessage: string;\n\n  /**\n   * @param message - the `message` property value\n   * @param validationErrorData - the `validationErrorData` property value\n   * @param type - the `type` property value\n   */\n  constructor(message: string, validationErrorData: ValidationErrorData[], type?: string) {\n    super(message, type, validationErrorData);\n    this.validationErrorMessage = message;\n    this.detail = null;\n    this.validationErrorData = validationErrorData;\n  }\n}\n\n/**\n * An exception that gets thrown for unexpected HTTP response.\n */\nexport class EndpointResponseError extends EndpointError {\n  /**\n   * The optional response object, containing the HTTP response error\n   */\n  response: Response;\n\n  /**\n   * @param message - the `message` property value\n   * @param response - the `response` property value\n   */\n  constructor(message: string, response: Response) {\n    super(message, 'EndpointResponseError', response);\n    this.response = response;\n  }\n\n  /**\n   * Convenience property to get the HTTP code status directly\n   */\n  get status(): number {\n    return this.response.status;\n  }\n}\n\nexport class UnauthorizedResponseError extends EndpointResponseError {\n  constructor(message: string, response: Response) {\n    super(message, response);\n    this.type = 'UnauthorizedResponseError';\n  }\n}\n\nexport class ForbiddenResponseError extends EndpointResponseError {\n  constructor(message: string, response: Response) {\n    super(message, response);\n    this.type = 'ForbiddenResponseError';\n  }\n}\n\n/**\n * An object, containing all data for the particular validation error.\n */\nexport class ValidationErrorData {\n  /**\n   * The validation error message.\n   */\n  message: string;\n\n  /**\n   * The parameter name that caused the validation error.\n   */\n  parameterName?: string;\n\n  /**\n   * @param message - The `message` property value\n   * @param parameterName - The `parameterName` property value\n   */\n  constructor(message: string, parameterName?: string) {\n    this.message = message;\n    this.parameterName = parameterName;\n  }\n}\n", "import type { ReactiveControllerHost } from '@lit/reactive-element';\nimport atmosphere from 'atmosphere.js';\nimport type { Subscription } from './Connect.js';\nimport { getCsrfTokenHeadersForEndpointRequest } from './CsrfUtils.js';\nimport {\n  isClientMessage,\n  type ServerCloseMessage,\n  type ServerConnectMessage,\n  type ServerMessage,\n} from './FluxMessages.js';\n\nexport enum State {\n  ACTIVE = 'active',\n  INACTIVE = 'inactive',\n}\n\ntype ActiveEvent = CustomEvent<{ active: boolean }>;\ninterface EventMap {\n  'state-changed': ActiveEvent;\n}\n\ntype ListenerType<T extends keyof EventMap> =\n  | ((this: FluxConnection, ev: EventMap[T]) => any)\n  | {\n      handleEvent(ev: EventMap[T]): void;\n    }\n  | null;\n\n/**\n * A representation of the underlying persistent network connection used for subscribing to Flux type endpoint methods.\n */\nexport class FluxConnection extends EventTarget {\n  state: State = State.INACTIVE;\n  readonly #endpointInfos = new Map<string, string>();\n  #nextId = 0;\n  readonly #onCompleteCallbacks = new Map<string, () => void>();\n  readonly #onErrorCallbacks = new Map<string, () => void>();\n  readonly #onNextCallbacks = new Map<string, (value: any) => void>();\n  #pendingMessages: ServerMessage[] = [];\n  #socket?: Atmosphere.Request;\n\n  constructor(connectPrefix: string) {\n    super();\n    this.#connectWebsocket(connectPrefix.replace('/connect', '').replace(/^connect/u, ''));\n  }\n\n  /**\n   * Subscribes to the flux returned by the given endpoint name + method name using the given parameters.\n   *\n   * @param endpointName - the endpoint to connect to\n   * @param methodName - the method in the endpoint to connect to\n   * @param parameters - the parameters to use\n   * @returns a subscription\n   */\n  subscribe(endpointName: string, methodName: string, parameters?: unknown[]): Subscription<any> {\n    const id: string = this.#nextId.toString();\n    this.#nextId += 1;\n    const params = parameters ?? [];\n\n    const msg: ServerConnectMessage = { '@type': 'subscribe', endpointName, id, methodName, params };\n    const endpointInfo = `${endpointName}.${methodName}(${JSON.stringify(params)})`;\n    this.#send(msg);\n    this.#endpointInfos.set(id, endpointInfo);\n    const hillaSubscription: Subscription<any> = {\n      cancel: () => {\n        if (!this.#endpointInfos.has(id)) {\n          // Subscription already closed or canceled\n          return;\n        }\n\n        const closeMessage: ServerCloseMessage = { '@type': 'unsubscribe', id };\n        this.#send(closeMessage);\n        this.#removeSubscription(id);\n      },\n      context(context: ReactiveControllerHost): Subscription<any> {\n        context.addController({\n          hostDisconnected() {\n            hillaSubscription.cancel();\n          },\n        });\n        return hillaSubscription;\n      },\n      onComplete: (callback: () => void): Subscription<any> => {\n        this.#onCompleteCallbacks.set(id, callback);\n        return hillaSubscription;\n      },\n      onError: (callback: () => void): Subscription<any> => {\n        this.#onErrorCallbacks.set(id, callback);\n        return hillaSubscription;\n      },\n      onNext: (callback: (value: any) => void): Subscription<any> => {\n        this.#onNextCallbacks.set(id, callback);\n        return hillaSubscription;\n      },\n    };\n    return hillaSubscription;\n  }\n\n  #connectWebsocket(prefix: string) {\n    const extraHeaders = getCsrfTokenHeadersForEndpointRequest(document);\n    this.#socket = atmosphere.subscribe?.({\n      contentType: 'application/json; charset=UTF-8',\n      enableProtocol: true,\n      fallbackTransport: 'long-polling',\n      headers: extraHeaders,\n      maxReconnectOnClose: 10000000,\n      onClose: (_) => {\n        // https://socket.io/docs/v4/client-api/#event-disconnect\n        if (this.state === State.ACTIVE) {\n          this.state = State.INACTIVE;\n          this.dispatchEvent(new CustomEvent('state-changed', { detail: { active: false } }));\n        }\n      },\n      onError: (response) => {\n        // eslint-disable-next-line no-console\n        console.error('error in push communication', response);\n      },\n      onMessage: (response) => {\n        if (response.responseBody) {\n          this.#handleMessage(JSON.parse(response.responseBody));\n        }\n      },\n      onOpen: (_response: any) => {\n        if (this.state === State.INACTIVE) {\n          this.state = State.ACTIVE;\n          this.dispatchEvent(new CustomEvent('state-changed', { detail: { active: true } }));\n          this.#sendPendingMessages();\n        }\n      },\n      onReopen: (_response: any) => {\n        if (this.state === State.INACTIVE) {\n          this.state = State.ACTIVE;\n          this.dispatchEvent(new CustomEvent('state-changed', { detail: { active: true } }));\n          this.#sendPendingMessages();\n        }\n      },\n      reconnectInterval: 5000,\n      timeout: -1,\n      trackMessageLength: true,\n      transport: 'websocket',\n      url: prefix ? `${prefix}/HILLA/push` : 'HILLA/push',\n    } satisfies Atmosphere.Request);\n  }\n\n  #handleMessage(message: unknown) {\n    if (isClientMessage(message)) {\n      const { id } = message;\n      const endpointInfo = this.#endpointInfos.get(id) ?? 'unknown';\n\n      if (message['@type'] === 'update') {\n        const callback = this.#onNextCallbacks.get(id);\n        if (callback) {\n          callback(message.item);\n        }\n      } else if (message['@type'] === 'complete') {\n        this.#onCompleteCallbacks.get(id)?.();\n        this.#removeSubscription(id);\n      } else {\n        const callback = this.#onErrorCallbacks.get(id);\n        if (callback) {\n          callback();\n        }\n        this.#removeSubscription(id);\n        if (!callback) {\n          throw new Error(`Error in ${endpointInfo}: ${message.message}`);\n        }\n      }\n    } else {\n      throw new Error(`Unknown message from server: ${String(message)}`);\n    }\n  }\n\n  #removeSubscription(id: string) {\n    this.#onNextCallbacks.delete(id);\n    this.#onCompleteCallbacks.delete(id);\n    this.#onErrorCallbacks.delete(id);\n    this.#endpointInfos.delete(id);\n  }\n\n  #send(message: ServerMessage) {\n    if (this.state === State.INACTIVE) {\n      this.#pendingMessages.push(message);\n    } else {\n      this.#socket?.push?.(JSON.stringify(message));\n    }\n  }\n\n  #sendPendingMessages() {\n    this.#pendingMessages.forEach((msg) => this.#send(msg));\n    this.#pendingMessages = [];\n  }\n}\n\nexport interface FluxConnection {\n  addEventListener<T extends keyof EventMap>(type: T, listener: ListenerType<T>): void;\n  removeEventListener<T extends keyof EventMap>(type: T, listener: ListenerType<T>): void;\n}\n", "export interface AbstractMessage {\n  '@type': string;\n  id: string;\n}\n\nexport interface ClientErrorMessage extends AbstractMessage {\n  '@type': 'error';\n  message: string;\n}\nexport interface ClientCompleteMessage extends AbstractMessage {\n  '@type': 'complete';\n}\nexport interface ClientUpdateMessage extends AbstractMessage {\n  '@type': 'update';\n  item: any;\n}\n\nexport type ClientMessage = ClientCompleteMessage | ClientErrorMessage | ClientUpdateMessage;\n\nexport function isClientMessage(value: unknown): value is ClientMessage {\n  return value != null && typeof value === 'object' && '@type' in value;\n}\n\nexport interface ServerConnectMessage extends AbstractMessage {\n  id: string;\n  '@type': 'subscribe';\n  endpointName: string;\n  methodName: string;\n  params?: any;\n}\nexport interface ServerCloseMessage extends AbstractMessage {\n  id: string;\n  '@type': 'unsubscribe';\n}\n\nexport type ServerMessage = ServerCloseMessage | ServerConnectMessage;\n", "import type { ReactiveControllerHost } from '@lit/reactive-element';\nimport { ConnectionIndicator, ConnectionState } from '@vaadin/common-frontend';\nimport { getCsrfTokenHeadersForEndpointRequest } from './CsrfUtils.js';\nimport {\n  EndpointError,\n  EndpointResponseError,\n  EndpointValidationError,\n  ForbiddenResponseError,\n  UnauthorizedResponseError,\n  type ValidationErrorData,\n} from './EndpointErrors.js';\nimport { FluxConnection } from './FluxConnection.js';\nimport type { VaadinWindow } from './types.js';\n\nconst $wnd = window as VaadinWindow;\n\n$wnd.Vaadin ??= {};\n$wnd.Vaadin.registrations ??= [];\n$wnd.Vaadin.registrations.push({\n  is: 'endpoint',\n});\n\nexport type MaybePromise<T> = Promise<T> | T;\n\n/**\n * Represents the connection to and endpoint returning a subscription rather than a value.\n */\nexport interface Subscription<T> {\n  /** Cancels the subscription.  No values are made available after calling this. */\n  cancel(): void;\n\n  /*\n   * Binds to the given context (element) so that when the context is deactivated (element detached), the subscription is closed.\n   */\n  context(context: ReactiveControllerHost): Subscription<T>;\n\n  /** Called when the subscription has completed. No values are made available after calling this. */\n  onComplete(callback: () => void): Subscription<T>;\n\n  /** Called when an exception occured in the subscription. */\n  onError(callback: () => void): Subscription<T>;\n\n  /** Called when a new value is available. */\n  onNext(callback: (value: T) => void): Subscription<T>;\n}\n\ninterface ConnectExceptionData {\n  detail?: any;\n  message: string;\n  type: string;\n  validationErrorData?: ValidationErrorData[];\n}\n\n/**\n * Throws a TypeError if the response is not 200 OK.\n * @param response - The response to assert.\n */\nconst assertResponseIsOk = async (response: Response): Promise<void> => {\n  if (!response.ok) {\n    const errorText = await response.text();\n    let errorJson: ConnectExceptionData | null;\n    try {\n      errorJson = JSON.parse(errorText);\n    } catch (ignored) {\n      // not a json\n      errorJson = null;\n    }\n\n    const message =\n      errorJson?.message ?? errorText.length > 0\n        ? errorText\n        : `expected \"200 OK\" response, but got ${response.status} ${response.statusText}`;\n    const type = errorJson?.type;\n\n    if (errorJson?.validationErrorData) {\n      throw new EndpointValidationError(message, errorJson.validationErrorData, type);\n    }\n\n    if (type) {\n      throw new EndpointError(message, type, errorJson?.detail);\n    }\n\n    switch (response.status) {\n      case 401:\n        throw new UnauthorizedResponseError(message, response);\n      case 403:\n        throw new ForbiddenResponseError(message, response);\n      default:\n        throw new EndpointResponseError(message, response);\n    }\n  }\n};\n\n/**\n * The `ConnectClient` constructor options.\n */\nexport interface ConnectClientOptions {\n  /**\n   * The `middlewares` property value.\n   */\n  middlewares?: Middleware[];\n  /**\n   * The `prefix` property value.\n   */\n  prefix?: string;\n}\n\nexport interface EndpointCallMetaInfo {\n  /**\n   * The endpoint name.\n   */\n  endpoint: string;\n\n  /**\n   * The method name to call on in the endpoint class.\n   */\n  method: string;\n\n  /**\n   * Optional object with method call arguments.\n   */\n  params?: Record<string, unknown>;\n}\n\n/**\n * An object with the call arguments and the related Request instance.\n * See also {@link ConnectClient.call | the call() method in ConnectClient}.\n */\nexport interface MiddlewareContext extends EndpointCallMetaInfo {\n  /**\n   * The Fetch API Request object reflecting the other properties.\n   */\n  request: Request;\n}\n\n/**\n * An async middleware callback that invokes the next middleware in the chain\n * or makes the actual request.\n * @param context - The information about the call and request\n */\nexport type MiddlewareNext = (context: MiddlewareContext) => MaybePromise<Response>;\n\n/**\n * An interface that allows defining a middleware as a class.\n */\nexport interface MiddlewareClass {\n  /**\n   * @param context - The information about the call and request\n   * @param next - Invokes the next in the call chain\n   */\n  invoke(context: MiddlewareContext, next: MiddlewareNext): MaybePromise<Response>;\n}\n\n/**\n * An async callback function that can intercept the request and response\n * of a call.\n */\nexport type MiddlewareFunction = (context: MiddlewareContext, next: MiddlewareNext) => MaybePromise<Response>;\n\n/**\n * An async callback that can intercept the request and response\n * of a call, could be either a function or a class.\n */\nexport type Middleware = MiddlewareClass | MiddlewareFunction;\n\nfunction isFlowLoaded(): boolean {\n  return $wnd.Vaadin?.Flow?.clients?.TypeScript !== undefined;\n}\n\n/**\n * A list of parameters supported by {@link ConnectClient.call | the call() method in ConnectClient}.\n */\nexport interface EndpointRequestInit {\n  /**\n   * An AbortSignal to set request's signal.\n   */\n  signal?: AbortSignal | null;\n}\n\n/**\n * A low-level network calling utility. It stores\n * a prefix and facilitates remote calls to endpoint class methods\n * on the Hilla backend.\n *\n * Example usage:\n *\n * ```js\n * const client = new ConnectClient();\n * const responseData = await client.call('MyEndpoint', 'myMethod');\n * ```\n *\n * ### Prefix\n *\n * The client supports an `prefix` constructor option:\n * ```js\n * const client = new ConnectClient({prefix: '/my-connect-prefix'});\n * ```\n *\n * The default prefix is '/connect'.\n *\n */\nexport class ConnectClient {\n  /**\n   * The array of middlewares that are invoked during a call.\n   */\n  middlewares: Middleware[] = [];\n  /**\n   * The Hilla endpoint prefix\n   */\n  prefix = '/connect';\n\n  #fluxConnection?: FluxConnection;\n\n  /**\n   * @param options - Constructor options.\n   */\n  constructor(options: ConnectClientOptions = {}) {\n    if (options.prefix) {\n      this.prefix = options.prefix;\n    }\n\n    if (options.middlewares) {\n      this.middlewares = options.middlewares;\n    }\n\n    // add connection indicator to DOM\n    ConnectionIndicator.create();\n\n    // Listen to browser online/offline events and update the loading indicator accordingly.\n    // Note: if Flow.ts is loaded, it instead handles the state transitions.\n    addEventListener('online', () => {\n      if (!isFlowLoaded() && $wnd.Vaadin?.connectionState) {\n        $wnd.Vaadin.connectionState.state = ConnectionState.CONNECTED;\n      }\n    });\n    addEventListener('offline', () => {\n      if (!isFlowLoaded() && $wnd.Vaadin?.connectionState) {\n        $wnd.Vaadin.connectionState.state = ConnectionState.CONNECTION_LOST;\n      }\n    });\n  }\n\n  /**\n   * Gets a representation of the underlying persistent network connection used for subscribing to Flux type endpoint\n   * methods.\n   */\n  get fluxConnection(): FluxConnection {\n    if (!this.#fluxConnection) {\n      this.#fluxConnection = new FluxConnection(this.prefix);\n    }\n    return this.#fluxConnection;\n  }\n\n  /**\n   * Calls the given endpoint method defined using the endpoint and method\n   * parameters with the parameters given as params.\n   * Asynchronously returns the parsed JSON response data.\n   *\n   * @param endpoint - Endpoint name.\n   * @param method - Method name to call in the endpoint class.\n   * @param params - Optional parameters to pass to the method.\n   * @param init - Optional parameters for the request\n   * @returns Decoded JSON response data.\n   */\n  async call(\n    endpoint: string,\n    method: string,\n    params?: Record<string, unknown>,\n    init?: EndpointRequestInit,\n  ): Promise<any> {\n    if (arguments.length < 2) {\n      throw new TypeError(`2 arguments required, but got only ${arguments.length}`);\n    }\n\n    const csrfHeaders = getCsrfTokenHeadersForEndpointRequest(document);\n    const headers: Record<string, string> = {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      ...csrfHeaders,\n    };\n\n    const request = new Request(`${this.prefix}/${endpoint}/${method}`, {\n      body:\n        params !== undefined ? JSON.stringify(params, (_, value) => (value === undefined ? null : value)) : undefined,\n      headers,\n      method: 'POST',\n    });\n\n    // The middleware `context`, includes the call arguments and the request\n    // constructed from them\n    const initialContext: MiddlewareContext = {\n      endpoint,\n      method,\n      params,\n      request,\n    };\n\n    // The internal middleware to assert and parse the response. The internal\n    // response handling should come last after the other middlewares are done\n    // with processing the response. That is why this middleware is first\n    // in the final middlewares array.\n    async function responseHandlerMiddleware(context: MiddlewareContext, next: MiddlewareNext): Promise<Response> {\n      const response = await next(context);\n      await assertResponseIsOk(response);\n      const text = await response.text();\n      return JSON.parse(text, (_, value: any) => (value === null ? undefined : value));\n    }\n\n    // The actual fetch call itself is expressed as a middleware\n    // chain item for our convenience. Always having an ending of the chain\n    // this way makes the folding down below more concise.\n    async function fetchNext(context: MiddlewareContext) {\n      $wnd.Vaadin?.connectionState?.loadingStarted();\n      try {\n        const response = await fetch(context.request, { signal: init?.signal });\n        $wnd.Vaadin?.connectionState?.loadingFinished();\n        return response;\n      } catch (error: unknown) {\n        // don't bother about connections aborted by purpose\n        if (error instanceof Error && error.name === 'AbortError') {\n          $wnd.Vaadin?.connectionState?.loadingFinished();\n        } else {\n          $wnd.Vaadin?.connectionState?.loadingFailed();\n        }\n        return Promise.reject(error);\n      }\n    }\n\n    // Assemble the final middlewares array from internal\n    // and external middlewares\n    const middlewares = [responseHandlerMiddleware as Middleware, ...this.middlewares];\n\n    // Fold the final middlewares array into a single function\n    const chain = middlewares.reduceRight(\n      (next: MiddlewareNext, middleware) =>\n        // Compose and return the new chain step, that takes the context and\n        // invokes the current middleware with the context and the further chain\n        // as the next argument\n        async (context) => {\n          if (typeof middleware === 'function') {\n            return middleware(context, next);\n          }\n          return middleware.invoke(context, next);\n        },\n      // Initialize reduceRight the accumulator with `fetchNext`\n      fetchNext,\n    );\n\n    // Invoke all the folded async middlewares and return\n    return chain(initialContext);\n  }\n\n  /**\n   * Subscribes to the given method defined using the endpoint and method\n   * parameters with the parameters given as params. The method must return a\n   * compatible type such as a Flux.\n   * Returns a subscription that is used to fetch values as they become available.\n   *\n   * @param endpoint - Endpoint name.\n   * @param method - Method name to call in the endpoint class.\n   * @param params - Optional parameters to pass to the method.\n   * @returns A subscription used to handles values as they become available.\n   */\n  subscribe(endpoint: string, method: string, params?: any): Subscription<any> {\n    return this.fluxConnection.subscribe(endpoint, method, params ? Object.values(params) : []);\n  }\n}\n", "import type { VaadinWindow } from './types.js';\n\nexport * from './Authentication.js';\nexport * from './Connect.js';\nexport * from './EndpointErrors.js';\nexport { FluxConnection, State } from './FluxConnection.js';\n\ndeclare const __VERSION__: string;\n\nconst $wnd = window as VaadinWindow;\n\n$wnd.Vaadin ??= {};\n$wnd.Vaadin.registrations ??= [];\n$wnd.Vaadin.registrations.push({\n  is: '@hilla/frontend',\n  version: __VERSION__,\n});\n"],
  "mappings": "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",
  "names": ["e", "guid", "options", "i", "_request", "message", "xdr", "m", "f", "s", "prefix", "i", "e", "converter", "calculatePath", "pathname", "CookieManager", "Cookies", "CookieManager_default", "VAADIN_CSRF_HEADER", "VAADIN_CSRF_COOKIE_NAME", "SPRING_CSRF_COOKIE_NAME", "extractContentFromMetaTag", "element", "value", "getSpringCsrfHeaderFromMetaTag", "doc", "csrfHeader", "getSpringCsrfTokenFromMetaTag", "csrfToken", "getSpringCsrfInfo", "csrf", "CookieManager", "headers", "getSpringCsrfTokenHeadersForAuthRequest", "csrfInfo", "getCsrfTokenHeadersForEndpointRequest", "JWT_COOKIE_NAME", "getSpringCsrfTokenFromResponseBody", "body", "doc", "getSpringCsrfInfo", "clearSpringCsrfMetaTags", "el", "updateSpringCsrfMetaTags", "springCsrfInfo", "headerNameMeta", "tokenMeta", "getVaadinCsrfTokenFromResponseBody", "match", "updateCsrfTokensBasedOnResponse", "response", "responseText", "token", "springCsrfTokenInfo", "doLogout", "logoutUrl", "headers", "login", "username", "password", "options", "data", "loginProcessingUrl", "getSpringCsrfTokenHeadersForAuthRequest", "result", "savedUrl", "defaultUrl", "vaadinCsrfToken", "springCsrfHeader", "springCsrfToken", "e", "logout", "error", "CookieManager", "InvalidSessionMiddleware", "onInvalidSessionCallback", "context", "next", "clonedContext", "loginResult", "VAADIN_CSRF_HEADER", "ConnectionState", "_a", "c", "d", "i", "LoadingBarState", "$wnd", "_a", "$wnd", "EndpointError", "message", "type", "detail", "EndpointValidationError", "validationErrorData", "EndpointResponseError", "response", "UnauthorizedResponseError", "ForbiddenResponseError", "ValidationErrorData", "parameterName", "isClientMessage", "value", "State", "_a", "FluxConnection", "connectPrefix", "#connectWebsocket", "#handleMessage", "#removeSubscription", "#send", "#sendPendingMessages", "#endpointInfos", "#nextId", "#onCompleteCallbacks", "#onErrorCallbacks", "#onNextCallbacks", "#pendingMessages", "#socket", "endpointName", "methodName", "parameters", "id", "params", "msg", "endpointInfo", "hillaSubscription", "closeMessage", "context", "callback", "prefix", "extraHeaders", "getCsrfTokenHeadersForEndpointRequest", "atmosphere", "_", "response", "_response", "message", "isClientMessage", "$wnd", "_a", "assertResponseIsOk", "response", "errorText", "errorJson", "message", "type", "EndpointValidationError", "EndpointError", "UnauthorizedResponseError", "ForbiddenResponseError", "EndpointResponseError", "isFlowLoaded", "_c", "_e", "ConnectClient", "options", "#fluxConnection", "ConnectionIndicator", "ConnectionState", "FluxConnection", "endpoint", "method", "params", "init", "headers", "getCsrfTokenHeadersForEndpointRequest", "request", "_", "value", "initialContext", "responseHandlerMiddleware", "context", "next", "text", "fetchNext", "_h", "error", "middleware", "$wnd", "_a"]
}
