{
  "version": 3,
  "sources": ["../../@vaadin/input-container/theme/lumo/vaadin-input-container-styles.js", "../../@vaadin/input-container/src/vaadin-input-container.js", "../../@vaadin/vaadin-lumo-styles/mixins/field-button.js", "../../@vaadin/vaadin-lumo-styles/mixins/helper.js", "../../@vaadin/vaadin-lumo-styles/mixins/required-field.js", "../../@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js", "../../@vaadin/text-area/theme/lumo/vaadin-text-area-styles.js", "../../@vaadin/field-base/src/styles/clear-button-styles.js", "../../@vaadin/field-base/src/styles/field-shared-styles.js", "../../@vaadin/field-base/src/styles/input-field-container-styles.js", "../../@vaadin/field-base/src/styles/input-field-shared-styles.js", "../../@vaadin/component-base/src/resize-mixin.js", "../../@vaadin/a11y-base/src/delegate-focus-mixin.js", "../../@vaadin/component-base/src/slot-styles-mixin.js", "../../@vaadin/field-base/src/input-mixin.js", "../../@vaadin/field-base/src/clear-button-mixin.js", "../../@vaadin/a11y-base/src/aria-id-reference.js", "../../@vaadin/a11y-base/src/field-aria-controller.js", "../../@vaadin/component-base/src/slot-child-observe-controller.js", "../../@vaadin/field-base/src/error-controller.js", "../../@vaadin/field-base/src/helper-controller.js", "../../@vaadin/field-base/src/label-controller.js", "../../@vaadin/field-base/src/label-mixin.js", "../../@vaadin/field-base/src/validate-mixin.js", "../../@vaadin/field-base/src/field-mixin.js", "../../@vaadin/component-base/src/delegate-state-mixin.js", "../../@vaadin/field-base/src/input-constraints-mixin.js", "../../@vaadin/field-base/src/input-control-mixin.js", "../../@vaadin/field-base/src/input-field-mixin.js", "../../@vaadin/field-base/src/labelled-input-controller.js", "../../@vaadin/field-base/src/text-area-controller.js", "../../@vaadin/text-area/src/vaadin-text-area-mixin.js", "../../@vaadin/text-area/src/vaadin-text-area-styles.js", "../../@vaadin/text-area/src/vaadin-text-area.js", "../../@vaadin/message-input/theme/lumo/vaadin-message-input-styles.js", "../../@vaadin/message-input/src/vaadin-message-input.js", "../../@hilla/react-components/src/MessageInput.ts", "../../@hilla/react-components/src/generated/MessageInput.ts"],
  "sourcesContent": ["import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-input-container',\n  css`\n    :host {\n      background-color: var(--lumo-contrast-10pct);\n      padding: 0 calc(0.375em + var(--_input-container-radius) / 4 - 1px);\n      font-weight: 500;\n      line-height: 1;\n      position: relative;\n      cursor: text;\n      box-sizing: border-box;\n      border-radius:\n        /* See https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius#syntax */\n        var(--vaadin-input-field-top-start-radius, var(--_input-container-radius))\n        var(--vaadin-input-field-top-end-radius, var(--_input-container-radius))\n        var(--vaadin-input-field-bottom-end-radius, var(--_input-container-radius))\n        var(--vaadin-input-field-bottom-start-radius, var(--_input-container-radius));\n      /* Fallback */\n      --_input-container-radius: var(--vaadin-input-field-border-radius, var(--lumo-border-radius-m));\n      /* Default field border color */\n      --_input-border-color: var(--vaadin-input-field-border-color, var(--lumo-contrast-50pct));\n    }\n\n    :host([dir='rtl']) {\n      border-radius:\n        /* Don't use logical props, see https://github.com/vaadin/vaadin-time-picker/issues/145 */\n        var(--vaadin-input-field-top-end-radius, var(--_input-container-radius))\n        var(--vaadin-input-field-top-start-radius, var(--_input-container-radius))\n        var(--vaadin-input-field-bottom-start-radius, var(--_input-container-radius))\n        var(--vaadin-input-field-bottom-end-radius, var(--_input-container-radius));\n    }\n\n    /* Used for hover and activation effects */\n    :host::after {\n      content: '';\n      position: absolute;\n      inset: 0;\n      border-radius: inherit;\n      pointer-events: none;\n      background-color: var(--lumo-contrast-50pct);\n      opacity: 0;\n      transition: transform 0.15s, opacity 0.2s;\n      transform-origin: 100% 0;\n    }\n\n    ::slotted(:not([slot$='fix'])) {\n      cursor: inherit;\n      min-height: var(--lumo-text-field-size, var(--lumo-size-m));\n      padding: 0 0.25em;\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent, #000 1.25em);\n      -webkit-mask-image: var(--_lumo-text-field-overflow-mask-image);\n      mask-image: var(--_lumo-text-field-overflow-mask-image);\n    }\n\n    /* Read-only */\n    :host([readonly]) {\n      color: var(--lumo-secondary-text-color);\n      background-color: transparent;\n      cursor: default;\n    }\n\n    :host([readonly])::after {\n      background-color: transparent;\n      opacity: 1;\n      border: 1px dashed var(--lumo-contrast-30pct);\n    }\n\n    /* Disabled */\n    :host([disabled]) {\n      background-color: var(--lumo-contrast-5pct);\n    }\n\n    :host([disabled]) ::slotted(*) {\n      color: var(--lumo-disabled-text-color);\n      -webkit-text-fill-color: var(--lumo-disabled-text-color);\n    }\n\n    /* Invalid */\n    :host([invalid]) {\n      background-color: var(--lumo-error-color-10pct);\n    }\n\n    :host([invalid])::after {\n      background-color: var(--lumo-error-color-50pct);\n    }\n\n    /* Slotted icons */\n    ::slotted(vaadin-icon) {\n      color: var(--lumo-contrast-60pct);\n      width: var(--lumo-icon-size-m);\n      height: var(--lumo-icon-size-m);\n    }\n\n    /* Vaadin icons are based on a 16x16 grid (unlike Lumo and Material icons with 24x24), so they look too big by default */\n    ::slotted(vaadin-icon[icon^='vaadin:']) {\n      padding: 0.25em;\n      box-sizing: border-box !important;\n    }\n\n    /* Text align */\n    :host([dir='rtl']) ::slotted(:not([slot$='fix'])) {\n      --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent, #000 1.25em);\n    }\n\n    @-moz-document url-prefix() {\n      :host([dir='rtl']) ::slotted(:not([slot$='fix'])) {\n        mask-image: var(--_lumo-text-field-overflow-mask-image);\n      }\n    }\n\n    :host([theme~='align-left']) ::slotted(:not([slot$='fix'])) {\n      text-align: start;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-center']) ::slotted(:not([slot$='fix'])) {\n      text-align: center;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-right']) ::slotted(:not([slot$='fix'])) {\n      text-align: end;\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-right']) ::slotted(:not([slot$='fix'])) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\n      }\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-left']) ::slotted(:not([slot$='fix'])) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\n      }\n    }\n\n    /* RTL specific styles */\n    :host([dir='rtl'])::after {\n      transform-origin: 0% 0;\n    }\n\n    :host([theme~='align-left'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-center'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    :host([theme~='align-right'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\n      --_lumo-text-field-overflow-mask-image: none;\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-right'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to right, transparent 0.25em, #000 1.5em);\n      }\n    }\n\n    @-moz-document url-prefix() {\n      /* Firefox is smart enough to align overflowing text to right */\n      :host([theme~='align-left'][dir='rtl']) ::slotted(:not([slot$='fix'])) {\n        --_lumo-text-field-overflow-mask-image: linear-gradient(to left, transparent 0.25em, #000 1.5em);\n      }\n    }\n  `,\n  { moduleId: 'lumo-input-container' },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html, PolymerElement } from '@polymer/polymer';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { DirMixin } from '@vaadin/component-base/src/dir-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes DirMixin\n */\nexport class InputContainer extends ThemableMixin(DirMixin(PolymerElement)) {\n  static get is() {\n    return 'vaadin-input-container';\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          align-items: center;\n          flex: 0 1 auto;\n          border-radius:\n            /* See https://developer.mozilla.org/en-US/docs/Web/CSS/border-radius */\n            var(--vaadin-input-field-top-start-radius, var(--__border-radius))\n            var(--vaadin-input-field-top-end-radius, var(--__border-radius))\n            var(--vaadin-input-field-bottom-end-radius, var(--__border-radius))\n            var(--vaadin-input-field-bottom-start-radius, var(--__border-radius));\n          --_border-radius: var(--vaadin-input-field-border-radius, 0px);\n          --_input-border-width: var(--vaadin-input-field-border-width, 0);\n          --_input-border-color: var(--vaadin-input-field-border-color, transparent);\n          box-shadow: inset 0 0 0 var(--_input-border-width, 0) var(--_input-border-color);\n        }\n\n        :host([dir='rtl']) {\n          border-radius:\n            /* Don't use logical props, see https://github.com/vaadin/vaadin-time-picker/issues/145 */\n            var(--vaadin-input-field-top-end-radius, var(--_border-radius))\n            var(--vaadin-input-field-top-start-radius, var(--_border-radius))\n            var(--vaadin-input-field-bottom-start-radius, var(--_border-radius))\n            var(--vaadin-input-field-bottom-end-radius, var(--_border-radius));\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        /* Reset the native input styles */\n        ::slotted(input) {\n          -webkit-appearance: none;\n          -moz-appearance: none;\n          flex: auto;\n          white-space: nowrap;\n          overflow: hidden;\n          width: 100%;\n          height: 100%;\n          outline: none;\n          margin: 0;\n          padding: 0;\n          border: 0;\n          border-radius: 0;\n          min-width: 0;\n          font: inherit;\n          line-height: normal;\n          color: inherit;\n          background-color: transparent;\n          /* Disable default invalid style in Firefox */\n          box-shadow: none;\n        }\n\n        ::slotted(*) {\n          flex: none;\n        }\n\n        ::slotted(:is(input, textarea))::placeholder {\n          /* Use ::slotted(input:placeholder-shown) in themes to style the placeholder. */\n          /* because ::slotted(...)::placeholder does not work in Safari. */\n          font: inherit;\n          color: inherit;\n          /* Override default opacity in Firefox */\n          opacity: 1;\n        }\n      </style>\n      <slot name=\"prefix\"></slot>\n      <slot></slot>\n      <slot name=\"suffix\"></slot>\n    `;\n  }\n\n  static get properties() {\n    return {\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Set to true to make this element read-only.\n       */\n      readonly: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n\n      /**\n       * Set to true when the element is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n      },\n    };\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this.addEventListener('pointerdown', (event) => {\n      if (event.target === this) {\n        // Prevent direct clicks to the input container from blurring the input\n        event.preventDefault();\n      }\n    });\n\n    this.addEventListener('click', (event) => {\n      if (event.target === this) {\n        // The vaadin-input-container element was directly clicked,\n        // focus any focusable child element from the default slot\n        this.shadowRoot\n          .querySelector('slot:not([name])')\n          .assignedNodes({ flatten: true })\n          .forEach((node) => node.focus && node.focus());\n      }\n    });\n  }\n}\n\ndefineCustomElement(InputContainer);\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../font-icons.js';\nimport '../sizing.js';\nimport '../style.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst fieldButton = css`\n  [part$='button'] {\n    flex: none;\n    width: 1em;\n    height: 1em;\n    line-height: 1;\n    font-size: var(--lumo-icon-size-m);\n    text-align: center;\n    color: var(--lumo-contrast-60pct);\n    transition: 0.2s color;\n    cursor: var(--lumo-clickable-cursor);\n  }\n\n  [part$='button']:hover {\n    color: var(--lumo-contrast-90pct);\n  }\n\n  :host([disabled]) [part$='button'],\n  :host([readonly]) [part$='button'] {\n    color: var(--lumo-contrast-20pct);\n    cursor: default;\n  }\n\n  [part$='button']::before {\n    font-family: 'lumo-icons';\n    display: block;\n  }\n`;\nregisterStyles('', fieldButton, { moduleId: 'lumo-field-button' });\n\nexport { fieldButton };\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../sizing.js';\nimport '../style.js';\nimport '../typography.js';\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport const helper = css`\n  :host([has-helper]) [part='helper-text']::before {\n    content: '';\n    display: block;\n    height: 0.4em;\n  }\n\n  [part='helper-text'] {\n    display: block;\n    color: var(--lumo-secondary-text-color);\n    font-size: var(--lumo-font-size-xs);\n    line-height: var(--lumo-line-height-xs);\n    margin-left: calc(var(--lumo-border-radius-m) / 4);\n    transition: color 0.2s;\n  }\n\n  :host(:hover:not([readonly])) [part='helper-text'] {\n    color: var(--lumo-body-text-color);\n  }\n\n  :host([disabled]) [part='helper-text'] {\n    color: var(--lumo-disabled-text-color);\n    -webkit-text-fill-color: var(--lumo-disabled-text-color);\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='helper-text']::before {\n    display: none;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='helper-text']::after {\n    content: '';\n    display: block;\n    height: 0.4em;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='label'] {\n    order: 0;\n    padding-bottom: 0.4em;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='helper-text'] {\n    order: 1;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='label'] + * {\n    order: 2;\n  }\n\n  :host([has-helper][theme~='helper-above-field']) [part='error-message'] {\n    order: 3;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../spacing.js';\nimport '../style.js';\nimport '../typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst requiredField = css`\n  [part='label'] {\n    align-self: flex-start;\n    color: var(--lumo-secondary-text-color);\n    font-weight: 500;\n    font-size: var(--lumo-font-size-s);\n    margin-left: calc(var(--lumo-border-radius-m) / 4);\n    transition: color 0.2s;\n    line-height: 1;\n    padding-right: 1em;\n    padding-bottom: 0.5em;\n    /* As a workaround for diacritics being cut off, add a top padding and a \n    negative margin to compensate */\n    padding-top: 0.25em;\n    margin-top: -0.25em;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    position: relative;\n    max-width: 100%;\n    box-sizing: border-box;\n  }\n\n  :host([has-label])::before {\n    margin-top: calc(var(--lumo-font-size-s) * 1.5);\n  }\n\n  :host([has-label][theme~='small'])::before {\n    margin-top: calc(var(--lumo-font-size-xs) * 1.5);\n  }\n\n  :host([has-label]) {\n    padding-top: var(--lumo-space-m);\n  }\n\n  :host([has-label]) ::slotted([slot='tooltip']) {\n    --vaadin-tooltip-offset-bottom: calc((var(--lumo-space-m) - var(--lumo-space-xs)) * -1);\n  }\n\n  :host([required]) [part='required-indicator']::after {\n    content: var(--lumo-required-field-indicator, '\\\\2022');\n    transition: opacity 0.2s;\n    color: var(--lumo-required-field-indicator-color, var(--lumo-primary-text-color));\n    position: absolute;\n    right: 0;\n    width: 1em;\n    text-align: center;\n  }\n\n  :host([invalid]) [part='required-indicator']::after {\n    color: var(--lumo-required-field-indicator-color, var(--lumo-error-text-color));\n  }\n\n  [part='error-message'] {\n    margin-left: calc(var(--lumo-border-radius-m) / 4);\n    font-size: var(--lumo-font-size-xs);\n    line-height: var(--lumo-line-height-xs);\n    color: var(--lumo-error-text-color);\n    will-change: max-height;\n    transition: 0.4s max-height;\n    max-height: 5em;\n  }\n\n  :host([has-error-message]) [part='error-message']::before,\n  :host([has-error-message]) [part='error-message']::after {\n    content: '';\n    display: block;\n    height: 0.4em;\n  }\n\n  :host(:not([invalid])) [part='error-message'] {\n    max-height: 0;\n    overflow: hidden;\n  }\n\n  /* RTL specific styles */\n\n  :host([dir='rtl']) [part='label'] {\n    margin-left: 0;\n    margin-right: calc(var(--lumo-border-radius-m) / 4);\n  }\n\n  :host([dir='rtl']) [part='label'] {\n    padding-left: 1em;\n    padding-right: 0;\n  }\n\n  :host([dir='rtl']) [part='required-indicator']::after {\n    right: auto;\n    left: 0;\n  }\n\n  :host([dir='rtl']) [part='error-message'] {\n    margin-left: 0;\n    margin-right: calc(var(--lumo-border-radius-m) / 4);\n  }\n`;\n\nregisterStyles('', requiredField, { moduleId: 'lumo-required-field' });\n\nexport { requiredField };\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '../color.js';\nimport '../font-icons.js';\nimport '../sizing.js';\nimport '../spacing.js';\nimport '../style.js';\nimport '../typography.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { fieldButton } from './field-button.js';\nimport { helper } from './helper.js';\nimport { requiredField } from './required-field.js';\n\nconst inputField = css`\n  :host {\n    --lumo-text-field-size: var(--lumo-size-m);\n    color: var(--lumo-body-text-color);\n    font-size: var(--lumo-font-size-m);\n    font-family: var(--lumo-font-family);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: transparent;\n    padding: var(--lumo-space-xs) 0;\n  }\n\n  :host::before {\n    height: var(--lumo-text-field-size);\n    box-sizing: border-box;\n    display: inline-flex;\n    align-items: center;\n  }\n\n  :host([focused]:not([readonly])) [part='label'] {\n    color: var(--lumo-primary-text-color);\n  }\n\n  :host([focused]) [part='input-field'] ::slotted(:is(input, textarea)) {\n    -webkit-mask-image: none;\n    mask-image: none;\n  }\n\n  ::slotted(:is(input, textarea):placeholder-shown) {\n    color: var(--lumo-secondary-text-color);\n  }\n\n  /* Hover */\n  :host(:hover:not([readonly]):not([focused])) [part='label'] {\n    color: var(--lumo-body-text-color);\n  }\n\n  :host(:hover:not([readonly]):not([focused])) [part='input-field']::after {\n    opacity: 0.1;\n  }\n\n  /* Touch device adjustment */\n  @media (pointer: coarse) {\n    :host(:hover:not([readonly]):not([focused])) [part='label'] {\n      color: var(--lumo-secondary-text-color);\n    }\n\n    :host(:hover:not([readonly]):not([focused])) [part='input-field']::after {\n      opacity: 0;\n    }\n\n    :host(:active:not([readonly]):not([focused])) [part='input-field']::after {\n      opacity: 0.2;\n    }\n  }\n\n  /* Trigger when not focusing using the keyboard */\n  :host([focused]:not([focus-ring]):not([readonly])) [part='input-field']::after {\n    transform: scaleX(0);\n    transition-duration: 0.15s, 1s;\n  }\n\n  /* Focus-ring */\n  :host([focus-ring]) [part='input-field'] {\n    box-shadow: 0 0 0 2px var(--lumo-primary-color-50pct);\n  }\n\n  /* Read-only and disabled */\n  :host(:is([readonly], [disabled])) ::slotted(:is(input, textarea):placeholder-shown) {\n    opacity: 0;\n  }\n\n  /* Read-only style */\n  :host([readonly]) {\n    --vaadin-input-field-border-color: transparent;\n  }\n\n  /* Disabled style */\n  :host([disabled]) {\n    pointer-events: none;\n    --vaadin-input-field-border-color: var(--lumo-contrast-20pct);\n  }\n\n  :host([disabled]) [part='label'],\n  :host([disabled]) [part='input-field'] ::slotted(*) {\n    color: var(--lumo-disabled-text-color);\n    -webkit-text-fill-color: var(--lumo-disabled-text-color);\n  }\n\n  /* Invalid style */\n  :host([invalid]) {\n    --vaadin-input-field-border-color: var(--lumo-error-color);\n  }\n\n  :host([invalid][focus-ring]) [part='input-field'] {\n    box-shadow: 0 0 0 2px var(--lumo-error-color-50pct);\n  }\n\n  :host([input-prevented]) [part='input-field'] {\n    animation: shake 0.15s infinite;\n  }\n\n  @keyframes shake {\n    25% {\n      transform: translateX(4px);\n    }\n    75% {\n      transform: translateX(-4px);\n    }\n  }\n\n  /* Small theme */\n  :host([theme~='small']) {\n    font-size: var(--lumo-font-size-s);\n    --lumo-text-field-size: var(--lumo-size-s);\n  }\n\n  :host([theme~='small']) [part='label'] {\n    font-size: var(--lumo-font-size-xs);\n  }\n\n  :host([theme~='small']) [part='error-message'] {\n    font-size: var(--lumo-font-size-xxs);\n  }\n\n  /* Slotted content */\n  [part='input-field'] ::slotted(:not(vaadin-icon):not(input):not(textarea)) {\n    color: var(--lumo-secondary-text-color);\n    font-weight: 400;\n  }\n\n  [part='clear-button']::before {\n    content: var(--lumo-icons-cross);\n  }\n`;\n\nconst inputFieldShared = [requiredField, fieldButton, helper, inputField];\n\nregisterStyles('', inputFieldShared, {\n  moduleId: 'lumo-input-field-shared-styles',\n});\n\nexport { inputField, inputFieldShared };\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport { inputFieldShared } from '@vaadin/vaadin-lumo-styles/mixins/input-field-shared.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst textArea = css`\n  [part='input-field'],\n  [part='input-field'] ::slotted(textarea) {\n    height: auto;\n    box-sizing: border-box;\n  }\n\n  [part='input-field'] {\n    /* Equal to the implicit padding in vaadin-text-field */\n    padding-top: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n    padding-bottom: calc((var(--lumo-text-field-size) - 1em * var(--lumo-line-height-s)) / 2);\n    transition: background-color 0.1s;\n    line-height: var(--lumo-line-height-s);\n  }\n\n  :host(:not([readonly])) [part='input-field']::after {\n    display: none;\n  }\n\n  :host([readonly]) [part='input-field'] {\n    border: 1px dashed var(--lumo-contrast-30pct);\n  }\n\n  :host([readonly]) [part='input-field']::after {\n    border: none;\n  }\n\n  :host(:hover:not([readonly]):not([focused]):not([invalid])) [part='input-field'] {\n    background-color: var(--lumo-contrast-20pct);\n  }\n\n  @media (pointer: coarse) {\n    :host(:hover:not([readonly]):not([focused]):not([invalid])) [part='input-field'] {\n      background-color: var(--lumo-contrast-10pct);\n    }\n\n    :host(:active:not([readonly]):not([focused])) [part='input-field'] {\n      background-color: var(--lumo-contrast-20pct);\n    }\n  }\n\n  [part='input-field'] ::slotted(textarea) {\n    line-height: inherit;\n    --_lumo-text-field-overflow-mask-image: none;\n  }\n\n  /* Vertically align icon prefix/suffix with the first line of text */\n  [part='input-field'] ::slotted(vaadin-icon) {\n    margin-top: calc((var(--lumo-icon-size-m) - 1em * var(--lumo-line-height-s)) / -2);\n  }\n`;\n\nregisterStyles('vaadin-text-area', [inputFieldShared, textArea], {\n  moduleId: 'lumo-text-area',\n});\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const clearButton = css`\n  [part='clear-button'] {\n    display: none;\n    cursor: default;\n  }\n\n  [part='clear-button']::before {\n    content: '\\\\2715';\n  }\n\n  :host([clear-button-visible][has-value]:not([disabled]):not([readonly])) [part='clear-button'] {\n    display: block;\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const fieldShared = css`\n  :host {\n    display: inline-flex;\n    outline: none;\n  }\n\n  :host::before {\n    content: '\\\\2003';\n    width: 0;\n    display: inline-block;\n    /* Size and position this element on the same vertical position as the input-field element\n          to make vertical align for the host element work as expected */\n  }\n\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  :host(:not([has-label])) [part='label'] {\n    display: none;\n  }\n\n  @media (forced-colors: active) {\n    :host(:not([readonly])) [part='input-field'] {\n      outline: 1px solid;\n      outline-offset: -1px;\n    }\n    :host([focused]) [part='input-field'] {\n      outline-width: 2px;\n    }\n    :host([disabled]) [part='input-field'] {\n      outline-color: GrayText;\n    }\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const inputFieldContainer = css`\n  [class$='container'] {\n    display: flex;\n    flex-direction: column;\n    min-width: 100%;\n    max-width: 100%;\n    width: var(--vaadin-field-default-width, 12em);\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd..\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { clearButton } from './clear-button-styles.js';\nimport { fieldShared } from './field-shared-styles.js';\nimport { inputFieldContainer } from './input-field-container-styles.js';\n\nexport const inputFieldShared = [fieldShared, inputFieldContainer, clearButton];\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\nconst observer = new ResizeObserver((entries) => {\n  setTimeout(() => {\n    entries.forEach((entry) => {\n      // Notify child resizables, if any\n      if (entry.target.resizables) {\n        entry.target.resizables.forEach((resizable) => {\n          resizable._onResize(entry.contentRect);\n        });\n      } else {\n        entry.target._onResize(entry.contentRect);\n      }\n    });\n  });\n});\n\n/**\n * A mixin that uses a ResizeObserver to listen to host size changes.\n *\n * @polymerMixin\n */\nexport const ResizeMixin = dedupingMixin(\n  (superclass) =>\n    class ResizeMixinClass extends superclass {\n      /**\n       * When true, the parent element resize will be also observed.\n       * Override this getter and return `true` to enable this.\n       *\n       * @protected\n       */\n      get _observeParent() {\n        return false;\n      }\n\n      /** @protected */\n      connectedCallback() {\n        super.connectedCallback();\n        observer.observe(this);\n\n        if (this._observeParent) {\n          const parent = this.parentNode instanceof ShadowRoot ? this.parentNode.host : this.parentNode;\n\n          if (!parent.resizables) {\n            parent.resizables = new Set();\n            observer.observe(parent);\n          }\n\n          parent.resizables.add(this);\n          this.__parent = parent;\n        }\n      }\n\n      /** @protected */\n      disconnectedCallback() {\n        super.disconnectedCallback();\n        observer.unobserve(this);\n\n        const parent = this.__parent;\n        if (this._observeParent && parent) {\n          const resizables = parent.resizables;\n\n          if (resizables) {\n            resizables.delete(this);\n\n            if (resizables.size === 0) {\n              observer.unobserve(parent);\n            }\n          }\n\n          this.__parent = null;\n        }\n      }\n\n      /**\n       * A handler invoked on host resize. By default, it does nothing.\n       * Override the method to implement your own behavior.\n       *\n       * @protected\n       */\n      _onResize(_contentRect) {\n        // To be implemented.\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { FocusMixin } from './focus-mixin.js';\nimport { TabindexMixin } from './tabindex-mixin.js';\n\n/**\n * A mixin to forward focus to an element in the light DOM.\n *\n * @polymerMixin\n * @mixes FocusMixin\n * @mixes TabindexMixin\n */\nexport const DelegateFocusMixin = dedupingMixin(\n  (superclass) =>\n    class DelegateFocusMixinClass extends FocusMixin(TabindexMixin(superclass)) {\n      static get properties() {\n        return {\n          /**\n           * Specify that this control should have input focus when the page loads.\n           */\n          autofocus: {\n            type: Boolean,\n          },\n\n          /**\n           * A reference to the focusable element controlled by the mixin.\n           * It can be an input, textarea, button or any element with tabindex > -1.\n           *\n           * Any component implementing this mixin is expected to provide it\n           * by using `this._setFocusElement(input)` Polymer API.\n           *\n           * Toggling `tabindex` attribute on the host element propagates its value to `focusElement`.\n           *\n           * @protected\n           * @type {!HTMLElement}\n           */\n          focusElement: {\n            type: Object,\n            readOnly: true,\n            observer: '_focusElementChanged',\n          },\n\n          /**\n           * Override the property from `TabIndexMixin`\n           * to ensure the `tabindex` attribute of the focus element\n           * will be restored to `0` after re-enabling the element.\n           *\n           * @protected\n           * @override\n           */\n          _lastTabIndex: {\n            value: 0,\n          },\n        };\n      }\n\n      constructor() {\n        super();\n\n        this._boundOnBlur = this._onBlur.bind(this);\n        this._boundOnFocus = this._onFocus.bind(this);\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        if (this.autofocus && !this.disabled) {\n          requestAnimationFrame(() => {\n            this.focus();\n            this.setAttribute('focus-ring', '');\n          });\n        }\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      focus() {\n        if (this.focusElement && !this.disabled) {\n          this.focusElement.focus();\n        }\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      blur() {\n        if (this.focusElement) {\n          this.focusElement.blur();\n        }\n      }\n\n      /**\n       * @protected\n       * @override\n       */\n      click() {\n        if (this.focusElement && !this.disabled) {\n          this.focusElement.click();\n        }\n      }\n\n      /** @protected */\n      _focusElementChanged(element, oldElement) {\n        if (element) {\n          element.disabled = this.disabled;\n          this._addFocusListeners(element);\n          this.__forwardTabIndex(this.tabindex);\n        } else if (oldElement) {\n          this._removeFocusListeners(oldElement);\n        }\n      }\n\n      /**\n       * @param {HTMLElement} element\n       * @protected\n       */\n      _addFocusListeners(element) {\n        element.addEventListener('blur', this._boundOnBlur);\n        element.addEventListener('focus', this._boundOnFocus);\n      }\n\n      /**\n       * @param {HTMLElement} element\n       * @protected\n       */\n      _removeFocusListeners(element) {\n        element.removeEventListener('blur', this._boundOnBlur);\n        element.removeEventListener('focus', this._boundOnFocus);\n      }\n\n      /**\n       * Focus event does not bubble, so we dispatch it manually\n       * on the host element to support adding focus listeners\n       * when the focusable element is placed in light DOM.\n       * @param {FocusEvent} event\n       * @protected\n       */\n      _onFocus(event) {\n        event.stopPropagation();\n        this.dispatchEvent(new Event('focus'));\n      }\n\n      /**\n       * Blur event does not bubble, so we dispatch it manually\n       * on the host element to support adding blur listeners\n       * when the focusable element is placed in light DOM.\n       * @param {FocusEvent} event\n       * @protected\n       */\n      _onBlur(event) {\n        event.stopPropagation();\n        this.dispatchEvent(new Event('blur'));\n      }\n\n      /**\n       * @param {FocusEvent} event\n       * @return {boolean}\n       * @protected\n       * @override\n       */\n      _shouldSetFocus(event) {\n        return event.target === this.focusElement;\n      }\n\n      /**\n       * @param {FocusEvent} event\n       * @return {boolean}\n       * @protected\n       * @override\n       */\n      _shouldRemoveFocus(event) {\n        return event.target === this.focusElement;\n      }\n\n      /**\n       * @param {boolean} disabled\n       * @param {boolean} oldDisabled\n       * @protected\n       * @override\n       */\n      _disabledChanged(disabled, oldDisabled) {\n        super._disabledChanged(disabled, oldDisabled);\n\n        if (this.focusElement) {\n          this.focusElement.disabled = disabled;\n        }\n\n        if (disabled) {\n          this.blur();\n        }\n      }\n\n      /**\n       * Override an observer from `TabindexMixin`.\n       * Do not call super to remove tabindex attribute\n       * from the host after it has been forwarded.\n       * @param {string} tabindex\n       * @protected\n       * @override\n       */\n      _tabindexChanged(tabindex) {\n        this.__forwardTabIndex(tabindex);\n      }\n\n      /** @private */\n      __forwardTabIndex(tabindex) {\n        if (tabindex !== undefined && this.focusElement) {\n          this.focusElement.tabIndex = tabindex;\n\n          // Preserve tabindex=\"-1\" on the host element\n          if (tabindex !== -1) {\n            this.tabindex = undefined;\n          }\n        }\n\n        if (this.disabled && tabindex) {\n          // If tabindex attribute was changed while component was disabled\n          if (tabindex !== -1) {\n            this._lastTabIndex = tabindex;\n          }\n          this.tabindex = undefined;\n        }\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\nconst stylesMap = new WeakMap();\n\n/**\n * Get all the styles inserted into root.\n * @param {DocumentOrShadowRoot} root\n * @return {Set<string>}\n */\nfunction getRootStyles(root) {\n  if (!stylesMap.has(root)) {\n    stylesMap.set(root, new Set());\n  }\n\n  return stylesMap.get(root);\n}\n\n/**\n * Insert styles into the root.\n * @param {string} styles\n * @param {DocumentOrShadowRoot} root\n */\nfunction insertStyles(styles, root) {\n  const style = document.createElement('style');\n  style.textContent = styles;\n\n  if (root === document) {\n    document.head.appendChild(style);\n  } else {\n    root.insertBefore(style, root.firstChild);\n  }\n}\n\n/**\n * Mixin to insert styles into the outer scope to handle slotted components.\n * This is useful e.g. to hide native `<input type=\"number\">` controls.\n *\n * @polymerMixin\n */\nexport const SlotStylesMixin = dedupingMixin(\n  (superclass) =>\n    class SlotStylesMixinClass extends superclass {\n      /**\n       * List of styles to insert into root.\n       * @protected\n       */\n      get slotStyles() {\n        return {};\n      }\n\n      /** @protected */\n      connectedCallback() {\n        super.connectedCallback();\n\n        this.__applySlotStyles();\n      }\n\n      /** @private */\n      __applySlotStyles() {\n        const root = this.getRootNode();\n        const rootStyles = getRootStyles(root);\n\n        this.slotStyles.forEach((styles) => {\n          if (!rootStyles.has(styles)) {\n            insertStyles(styles, root);\n            rootStyles.add(styles);\n          }\n        });\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to store the reference to an input element\n * and add input and change event listeners to it.\n *\n * @polymerMixin\n */\nexport const InputMixin = dedupingMixin(\n  (superclass) =>\n    class InputMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * A reference to the input element controlled by the mixin.\n           * Any component implementing this mixin is expected to provide it\n           * by using `this._setInputElement(input)` Polymer API.\n           *\n           * A typical case is using `InputController` that does this automatically.\n           * However, the input element does not have to always be native <input>:\n           * as an example, <vaadin-combo-box-light> accepts other components.\n           *\n           * @protected\n           * @type {!HTMLElement}\n           */\n          inputElement: {\n            type: Object,\n            readOnly: true,\n            observer: '_inputElementChanged',\n          },\n\n          /**\n           * String used to define input type.\n           * @protected\n           */\n          type: {\n            type: String,\n            readOnly: true,\n          },\n\n          /**\n           * The value of the field.\n           */\n          value: {\n            type: String,\n            value: '',\n            observer: '_valueChanged',\n            notify: true,\n            sync: true,\n          },\n\n          /**\n           * Whether the input element has a non-empty value.\n           *\n           * @protected\n           */\n          _hasInputValue: {\n            type: Boolean,\n            value: false,\n            observer: '_hasInputValueChanged',\n          },\n        };\n      }\n\n      constructor() {\n        super();\n\n        this._boundOnInput = this.__onInput.bind(this);\n        this._boundOnChange = this._onChange.bind(this);\n      }\n\n      /**\n       * Indicates whether the value is different from the default one.\n       * Override if the `value` property has a type other than `string`.\n       *\n       * @protected\n       */\n      get _hasValue() {\n        return this.value != null && this.value !== '';\n      }\n\n      /**\n       * A property for accessing the input element's value.\n       *\n       * Override this getter if the property is different from the default `value` one.\n       *\n       * @protected\n       * @return {string}\n       */\n      get _inputElementValueProperty() {\n        return 'value';\n      }\n\n      /**\n       * The input element's value.\n       *\n       * @protected\n       * @return {string}\n       */\n      get _inputElementValue() {\n        return this.inputElement ? this.inputElement[this._inputElementValueProperty] : undefined;\n      }\n\n      /**\n       * The input element's value.\n       *\n       * @protected\n       */\n      set _inputElementValue(value) {\n        if (this.inputElement) {\n          this.inputElement[this._inputElementValueProperty] = value;\n        }\n      }\n\n      /**\n       * Clear the value of the field.\n       */\n      clear() {\n        this._hasInputValue = false;\n\n        this.value = '';\n\n        // Clear the input immediately without waiting for the observer.\n        // Otherwise, when using Lit, the old value would be restored.\n        this._inputElementValue = '';\n      }\n\n      /**\n       * Add event listeners to the input element instance.\n       * Override this method to add custom listeners.\n       * @param {!HTMLElement} input\n       * @protected\n       */\n      _addInputListeners(input) {\n        input.addEventListener('input', this._boundOnInput);\n        input.addEventListener('change', this._boundOnChange);\n      }\n\n      /**\n       * Remove event listeners from the input element instance.\n       * @param {!HTMLElement} input\n       * @protected\n       */\n      _removeInputListeners(input) {\n        input.removeEventListener('input', this._boundOnInput);\n        input.removeEventListener('change', this._boundOnChange);\n      }\n\n      /**\n       * A method to forward the value property set on the field\n       * programmatically back to the input element value.\n       * Override this method to perform additional checks,\n       * for example to skip this in certain conditions.\n       * @param {string} value\n       * @protected\n       */\n      _forwardInputValue(value) {\n        // Value might be set before an input element is initialized.\n        // This case should be handled separately by a component that\n        // implements this mixin, for example in `connectedCallback`.\n        if (!this.inputElement) {\n          return;\n        }\n\n        this._inputElementValue = value != null ? value : '';\n      }\n\n      /**\n       * @param {HTMLElement | undefined} input\n       * @param {HTMLElement | undefined} oldInput\n       * @protected\n       */\n      _inputElementChanged(input, oldInput) {\n        if (input) {\n          this._addInputListeners(input);\n        } else if (oldInput) {\n          this._removeInputListeners(oldInput);\n        }\n      }\n\n      /**\n       * Observer to notify about the change of private property.\n       *\n       * @private\n       */\n      _hasInputValueChanged(hasValue, oldHasValue) {\n        if (hasValue || oldHasValue) {\n          this.dispatchEvent(new CustomEvent('has-input-value-changed'));\n        }\n      }\n\n      /**\n       * An input event listener used to update `_hasInputValue` property.\n       * Do not override this method.\n       *\n       * @param {Event} event\n       * @private\n       */\n      __onInput(event) {\n        this._setHasInputValue(event);\n        this._onInput(event);\n      }\n\n      /**\n       * An input event listener used to update the field value.\n       *\n       * @param {Event} event\n       * @protected\n       */\n      _onInput(event) {\n        // In the case a custom web component is passed as `inputElement`,\n        // the actual native input element, on which the event occurred,\n        // can be inside shadow trees.\n        const target = event.composedPath()[0];\n        // Ignore fake input events e.g. used by clear button.\n        this.__userInput = event.isTrusted;\n        this.value = target.value;\n        this.__userInput = false;\n      }\n\n      /**\n       * A change event listener.\n       * Override this method with an actual implementation.\n       * @param {Event} _event\n       * @protected\n       */\n      _onChange(_event) {}\n\n      /**\n       * Toggle the has-value attribute based on the value property.\n       *\n       * @param {boolean} hasValue\n       * @protected\n       */\n      _toggleHasValue(hasValue) {\n        this.toggleAttribute('has-value', hasValue);\n      }\n\n      /**\n       * Observer called when a value property changes.\n       * @param {string | undefined} newVal\n       * @param {string | undefined} oldVal\n       * @protected\n       */\n      _valueChanged(newVal, oldVal) {\n        this._toggleHasValue(this._hasValue);\n\n        // Setting initial value to empty string, do nothing.\n        if (newVal === '' && oldVal === undefined) {\n          return;\n        }\n\n        // Value is set by the user, no need to sync it back to input.\n        if (this.__userInput) {\n          return;\n        }\n\n        // Setting a value programmatically, sync it to input element.\n        this._forwardInputValue(newVal);\n      }\n\n      /**\n       * Sets the `_hasInputValue` property based on the `input` event.\n       *\n       * @param {InputEvent} event\n       * @protected\n       */\n      _setHasInputValue(event) {\n        // In the case a custom web component is passed as `inputElement`,\n        // the actual native input element, on which the event occurred,\n        // can be inside shadow trees.\n        const target = event.composedPath()[0];\n        this._hasInputValue = target.value.length > 0;\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { KeyboardMixin } from '@vaadin/a11y-base/src/keyboard-mixin.js';\nimport { isTouch } from '@vaadin/component-base/src/browser-utils.js';\nimport { InputMixin } from './input-mixin.js';\n\n/**\n * A mixin that manages the clear button.\n *\n * @polymerMixin\n * @mixes InputMixin\n * @mixes KeyboardMixin\n */\nexport const ClearButtonMixin = (superclass) =>\n  class ClearButtonMixinClass extends InputMixin(KeyboardMixin(superclass)) {\n    static get properties() {\n      return {\n        /**\n         * Set to true to display the clear icon which clears the input.\n         *\n         * It is up to the component to choose where to place the clear icon:\n         * in the Shadow DOM or in the light DOM. In any way, a reference to\n         * the clear icon element should be provided via the `clearElement` getter.\n         *\n         * @attr {boolean} clear-button-visible\n         */\n        clearButtonVisible: {\n          type: Boolean,\n          reflectToAttribute: true,\n          value: false,\n        },\n      };\n    }\n\n    /**\n     * Any element extending this mixin is required to implement this getter.\n     * It returns the reference to the clear button element.\n     *\n     * @protected\n     * @return {Element | null | undefined}\n     */\n    get clearElement() {\n      console.warn(`Please implement the 'clearElement' property in <${this.localName}>`);\n      return null;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      if (this.clearElement) {\n        this.clearElement.addEventListener('mousedown', (event) => this._onClearButtonMouseDown(event));\n        this.clearElement.addEventListener('click', (event) => this._onClearButtonClick(event));\n      }\n    }\n\n    /**\n     * @param {Event} event\n     * @protected\n     */\n    _onClearButtonClick(event) {\n      event.preventDefault();\n      this._onClearAction();\n    }\n\n    /**\n     * @param {MouseEvent} event\n     * @protected\n     */\n    _onClearButtonMouseDown(event) {\n      event.preventDefault();\n      if (!isTouch) {\n        this.inputElement.focus();\n      }\n    }\n\n    /**\n     * Override an event listener inherited from `KeydownMixin` to clear on Esc.\n     * Components that extend this mixin can prevent this behavior by overriding\n     * this method without calling `super._onEscape` to provide custom logic.\n     *\n     * @param {KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onEscape(event) {\n      super._onEscape(event);\n\n      if (this.clearButtonVisible && !!this.value) {\n        event.stopPropagation();\n        this._onClearAction();\n      }\n    }\n\n    /**\n     * Clears the value and dispatches `input` and `change` events\n     * on the input element. This method should be called\n     * when the clear action originates from the user.\n     *\n     * @protected\n     */\n    _onClearAction() {\n      this.clear();\n      // Note, according to the HTML spec, the native change event isn't composed\n      // while the input event is composed.\n      this.inputElement.dispatchEvent(new Event('input', { bubbles: true, composed: true }));\n      this.inputElement.dispatchEvent(new Event('change', { bubbles: true }));\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport {\n  addValueToAttribute,\n  deserializeAttributeValue,\n  removeValueFromAttribute,\n  serializeAttributeValue,\n} from '@vaadin/component-base/src/dom-utils.js';\n\nconst attributeToTargets = new Map();\n\n/**\n * Gets or creates a Set with the stored values for each element controlled by this helper\n *\n * @param {string} attr the attribute name used as key in the map\n *\n * @returns {WeakMap<HTMLElement, Set<string>} a weak map with the stored values for the elements being controlled by the helper\n */\nfunction getAttrMap(attr) {\n  if (!attributeToTargets.has(attr)) {\n    attributeToTargets.set(attr, new WeakMap());\n  }\n  return attributeToTargets.get(attr);\n}\n\n/**\n * Cleans the values set on the attribute to the given element.\n * It also stores the current values in the map, if `storeValue` is `true`.\n *\n * @param {HTMLElement} target\n * @param {string} attr the attribute to be cleared\n * @param {boolean} storeValue whether or not the current value of the attribute should be stored on the map\n * @returns\n */\nfunction cleanAriaIDReference(target, attr) {\n  if (!target) {\n    return;\n  }\n\n  target.removeAttribute(attr);\n}\n\n/**\n * Storing values of the accessible attributes in a Set inside of the WeakMap.\n *\n * @param {HTMLElement} target\n * @param {string} attr the attribute to be stored\n */\nfunction storeAriaIDReference(target, attr) {\n  if (!target || !attr) {\n    return;\n  }\n  const attributeMap = getAttrMap(attr);\n  if (attributeMap.has(target)) {\n    return;\n  }\n  const values = deserializeAttributeValue(target.getAttribute(attr));\n  attributeMap.set(target, new Set(values));\n}\n\n/**\n * Restores the generated values of the attribute to the given element.\n *\n * @param {HTMLElement} target\n * @param {string} attr\n */\nexport function restoreGeneratedAriaIDReference(target, attr) {\n  if (!target || !attr) {\n    return;\n  }\n  const attributeMap = getAttrMap(attr);\n  const values = attributeMap.get(target);\n  if (!values || values.size === 0) {\n    target.removeAttribute(attr);\n  } else {\n    addValueToAttribute(target, attr, serializeAttributeValue(values));\n  }\n  attributeMap.delete(target);\n}\n\n/**\n * Sets a new ID reference for a target element and an ARIA attribute.\n *\n * @typedef {Object} AriaIdReferenceConfig\n * @property {string | null | undefined} newId\n * @property {string | null | undefined} oldId\n * @property {boolean | null | undefined} fromUser\n * @param {HTMLElement} target\n * @param {string} attr\n * @param {AriaIdReferenceConfig | null | undefined} config\n * @param config.newId The new ARIA ID reference to set. If `null`, the attribute is removed,\n * and `config.fromUser` is true, any stored values are restored. If there are stored values\n * and `config.fromUser` is `false`, then `config.newId` is added to the stored values set.\n * @param config.oldId The ARIA ID reference to be removed from the attribute. If there are\n * stored values and `config.fromUser` is `false`, then `config.oldId` is removed from the\n * stored values set.\n * @param config.fromUser Indicates whether the function is called by the user or internally.\n * When `config.fromUser` is called with `true` for the first time, the function will clear\n * and store the attribute value for the given element.\n */\nexport function setAriaIDReference(target, attr, config = { newId: null, oldId: null, fromUser: false }) {\n  if (!target || !attr) {\n    return;\n  }\n\n  const { newId, oldId, fromUser } = config;\n\n  const attributeMap = getAttrMap(attr);\n  const storedValues = attributeMap.get(target);\n\n  if (!fromUser && !!storedValues) {\n    // If there's any stored values, it means the attribute is being handled by the user\n    // Replace the \"oldId\" with \"newId\" on the stored values set and leave\n    oldId && storedValues.delete(oldId);\n    newId && storedValues.add(newId);\n    return;\n  }\n\n  if (fromUser) {\n    if (!storedValues) {\n      // If it's called from user and there's no stored values for the attribute,\n      // then store the current value\n      storeAriaIDReference(target, attr);\n    } else if (!newId) {\n      // If called from user with newId == null, it means the attribute will no longer\n      // be in control of the user and the stored values should be restored\n      // Removing the entry on the map for this target\n      attributeMap.delete(target);\n    }\n\n    // If it's from user, then clear the attribute value before setting newId\n    cleanAriaIDReference(target, attr);\n  }\n\n  removeValueFromAttribute(target, attr, oldId);\n\n  const attributeValue = !newId ? serializeAttributeValue(storedValues) : newId;\n  if (attributeValue) {\n    addValueToAttribute(target, attr, attributeValue);\n  }\n}\n\n/**\n * Removes the {@link attr | attribute} value of the given {@link target} element.\n * It also stores the current value, if no stored values are present.\n *\n * @param {HTMLElement} target\n * @param {string} attr\n */\nexport function removeAriaIDReference(target, attr) {\n  storeAriaIDReference(target, attr);\n  cleanAriaIDReference(target, attr);\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport {\n  removeAriaIDReference,\n  restoreGeneratedAriaIDReference,\n  setAriaIDReference,\n} from '@vaadin/a11y-base/src/aria-id-reference.js';\n\n/**\n * A controller for managing ARIA attributes for a field element:\n * either the component itself or slotted `<input>` element.\n */\nexport class FieldAriaController {\n  constructor(host) {\n    this.host = host;\n    this.__required = false;\n  }\n\n  /**\n   * Sets a target element to which ARIA attributes are added.\n   *\n   * @param {HTMLElement} target\n   */\n  setTarget(target) {\n    this.__target = target;\n    this.__setAriaRequiredAttribute(this.__required);\n    // We need to make sure that value in __labelId is stored\n    this.__setLabelIdToAriaAttribute(this.__labelId, this.__labelId);\n    if (this.__labelIdFromUser != null) {\n      this.__setLabelIdToAriaAttribute(this.__labelIdFromUser, this.__labelIdFromUser, true);\n    }\n    this.__setErrorIdToAriaAttribute(this.__errorId);\n    this.__setHelperIdToAriaAttribute(this.__helperId);\n    this.setAriaLabel(this.__label);\n  }\n\n  /**\n   * Toggles the `aria-required` attribute on the target element\n   * if the target is the host component (e.g. a field group).\n   * Otherwise, it does nothing.\n   *\n   * @param {boolean} required\n   */\n  setRequired(required) {\n    this.__setAriaRequiredAttribute(required);\n    this.__required = required;\n  }\n\n  /**\n   * Defines the `aria-label` attribute of the target element.\n   *\n   * To remove the attribute, pass `null` as `label`.\n   *\n   * @param {string | null | undefined} label\n   */\n  setAriaLabel(label) {\n    this.__setAriaLabelToAttribute(label);\n    this.__label = label;\n  }\n\n  /**\n   * Links the target element with a slotted label element\n   * via the target's attribute `aria-labelledby`.\n   *\n   * To unlink the previous slotted label element, pass `null` as `labelId`.\n   *\n   * @param {string | null} labelId\n   */\n  setLabelId(labelId, fromUser = false) {\n    const oldLabelId = fromUser ? this.__labelIdFromUser : this.__labelId;\n    this.__setLabelIdToAriaAttribute(labelId, oldLabelId, fromUser);\n    if (fromUser) {\n      this.__labelIdFromUser = labelId;\n    } else {\n      this.__labelId = labelId;\n    }\n  }\n\n  /**\n   * Links the target element with a slotted error element via the target's attribute:\n   * - `aria-labelledby` if the target is the host component (e.g a field group).\n   * - `aria-describedby` otherwise.\n   *\n   * To unlink the previous slotted error element, pass `null` as `errorId`.\n   *\n   * @param {string | null} errorId\n   */\n  setErrorId(errorId) {\n    this.__setErrorIdToAriaAttribute(errorId, this.__errorId);\n    this.__errorId = errorId;\n  }\n\n  /**\n   * Links the target element with a slotted helper element via the target's attribute:\n   * - `aria-labelledby` if the target is the host component (e.g a field group).\n   * - `aria-describedby` otherwise.\n   *\n   * To unlink the previous slotted helper element, pass `null` as `helperId`.\n   *\n   * @param {string | null} helperId\n   */\n  setHelperId(helperId) {\n    this.__setHelperIdToAriaAttribute(helperId, this.__helperId);\n    this.__helperId = helperId;\n  }\n\n  /**\n   * @param {string | null | undefined} label\n   * @private\n   * */\n  __setAriaLabelToAttribute(label) {\n    if (!this.__target) {\n      return;\n    }\n    if (label) {\n      removeAriaIDReference(this.__target, 'aria-labelledby');\n      this.__target.setAttribute('aria-label', label);\n    } else if (this.__label) {\n      restoreGeneratedAriaIDReference(this.__target, 'aria-labelledby');\n      this.__target.removeAttribute('aria-label');\n    }\n  }\n\n  /**\n   * @param {string | null | undefined} labelId\n   * @param {string | null | undefined} oldLabelId\n   * @param {boolean | null | undefined} fromUser\n   * @private\n   */\n  __setLabelIdToAriaAttribute(labelId, oldLabelId, fromUser) {\n    setAriaIDReference(this.__target, 'aria-labelledby', { newId: labelId, oldId: oldLabelId, fromUser });\n  }\n\n  /**\n   * @param {string | null | undefined} errorId\n   * @param {string | null | undefined} oldErrorId\n   * @private\n   */\n  __setErrorIdToAriaAttribute(errorId, oldErrorId) {\n    setAriaIDReference(this.__target, 'aria-describedby', { newId: errorId, oldId: oldErrorId, fromUser: false });\n  }\n\n  /**\n   * @param {string | null | undefined} helperId\n   * @param {string | null | undefined} oldHelperId\n   * @private\n   */\n  __setHelperIdToAriaAttribute(helperId, oldHelperId) {\n    setAriaIDReference(this.__target, 'aria-describedby', { newId: helperId, oldId: oldHelperId, fromUser: false });\n  }\n\n  /**\n   * @param {boolean} required\n   * @private\n   */\n  __setAriaRequiredAttribute(required) {\n    if (!this.__target) {\n      return;\n    }\n\n    if (['input', 'textarea'].includes(this.__target.localName)) {\n      // Native <input> or <textarea>, required is enough\n      return;\n    }\n\n    if (required) {\n      this.__target.setAttribute('aria-required', 'true');\n    } else {\n      this.__target.removeAttribute('aria-required');\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2022 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from './slot-controller.js';\n\n/**\n * A controller that observes slotted element mutations, especially ID attribute\n * and the text content, and fires an event to notify host element about those.\n */\nexport class SlotChildObserveController extends SlotController {\n  constructor(host, slot, tagName, config = {}) {\n    super(host, slot, tagName, { ...config, useUniqueId: true });\n  }\n\n  /**\n   * Override to initialize the newly added custom node.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  initCustomNode(node) {\n    this.__updateNodeId(node);\n    this.__notifyChange(node);\n  }\n\n  /**\n   * Override to notify the controller host about removal of\n   * the custom node, and to apply the default one if needed.\n   *\n   * @param {Node} _node\n   * @protected\n   * @override\n   */\n  teardownNode(_node) {\n    const node = this.getSlotChild();\n\n    // Custom node is added to the slot\n    if (node && node !== this.defaultNode) {\n      this.__notifyChange(node);\n    } else {\n      this.restoreDefaultNode();\n      this.updateDefaultNode(this.node);\n    }\n  }\n\n  /**\n   * Override method inherited from `SlotMixin`\n   * to set ID attribute on the default node.\n   *\n   * @return {Node}\n   * @protected\n   * @override\n   */\n  attachDefaultNode() {\n    const node = super.attachDefaultNode();\n\n    if (node) {\n      this.__updateNodeId(node);\n    }\n\n    return node;\n  }\n\n  /**\n   * Override to restore default node when a custom one is removed.\n   *\n   * @protected\n   */\n  restoreDefaultNode() {\n    // To be implemented\n  }\n\n  /**\n   * Override to update default node text on property change.\n   *\n   * @param {Node} node\n   * @protected\n   */\n  updateDefaultNode(node) {\n    this.__notifyChange(node);\n  }\n\n  /**\n   * Setup the mutation observer on the node to update ID and notify host.\n   * Node doesn't get observed automatically until this method is called.\n   *\n   * @param {Node} node\n   * @protected\n   */\n  observeNode(node) {\n    // Stop observing the previous node, if any.\n    if (this.__nodeObserver) {\n      this.__nodeObserver.disconnect();\n    }\n\n    this.__nodeObserver = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        const target = mutation.target;\n\n        // Ensure the mutation target is the currently connected node\n        // to ignore async mutations dispatched for removed element.\n        const isCurrentNodeMutation = target === this.node;\n\n        if (mutation.type === 'attributes') {\n          // We use attributeFilter to only observe ID mutation,\n          // no need to check for attribute name separately.\n          if (isCurrentNodeMutation) {\n            this.__updateNodeId(target);\n          }\n        } else if (isCurrentNodeMutation || target.parentElement === this.node) {\n          // Node text content has changed.\n          this.__notifyChange(this.node);\n        }\n      });\n    });\n\n    // Observe changes to node ID attribute, text content and children.\n    this.__nodeObserver.observe(node, {\n      attributes: true,\n      attributeFilter: ['id'],\n      childList: true,\n      subtree: true,\n      characterData: true,\n    });\n  }\n\n  /**\n   * Returns true if a node is an HTML element with children,\n   * or is a defined custom element, or has non-empty text.\n   *\n   * @param {Node} node\n   * @return {boolean}\n   * @private\n   */\n  __hasContent(node) {\n    if (!node) {\n      return false;\n    }\n\n    return (\n      (node.nodeType === Node.ELEMENT_NODE && (customElements.get(node.localName) || node.children.length > 0)) ||\n      (node.textContent && node.textContent.trim() !== '')\n    );\n  }\n\n  /**\n   * Fire an event to notify the controller host about node changes.\n   *\n   * @param {Node} node\n   * @private\n   */\n  __notifyChange(node) {\n    this.dispatchEvent(\n      new CustomEvent('slot-content-changed', {\n        detail: { hasContent: this.__hasContent(node), node },\n      }),\n    );\n  }\n\n  /**\n   * Set default ID on the node in case it is an HTML element.\n   *\n   * @param {Node} node\n   * @private\n   */\n  __updateNodeId(node) {\n    // When in multiple mode, only set ID attribute on the element in default slot.\n    const isFirstNode = !this.nodes || node === this.nodes[0];\n    if (node.nodeType === Node.ELEMENT_NODE && (!this.multiple || isFirstNode) && !node.id) {\n      node.id = this.defaultId;\n    }\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotChildObserveController } from '@vaadin/component-base/src/slot-child-observe-controller.js';\n\n/**\n * A controller that manages the error message node content.\n */\nexport class ErrorController extends SlotChildObserveController {\n  constructor(host) {\n    super(host, 'error-message', 'div');\n  }\n\n  /**\n   * Set the error message element text content.\n   *\n   * @param {string} errorMessage\n   */\n  setErrorMessage(errorMessage) {\n    this.errorMessage = errorMessage;\n\n    this.updateDefaultNode(this.node);\n  }\n\n  /**\n   * Set invalid state for detecting whether to show error message.\n   *\n   * @param {boolean} invalid\n   */\n  setInvalid(invalid) {\n    this.invalid = invalid;\n\n    this.updateDefaultNode(this.node);\n  }\n\n  /**\n   * Override method inherited from `SlotController` to not run\n   * initializer on the custom slotted node unnecessarily.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  initAddedNode(node) {\n    if (node !== this.defaultNode) {\n      // There is no need to run `initNode`.\n      this.initCustomNode(node);\n    }\n  }\n\n  /**\n   * Override to initialize the newly added default error message.\n   *\n   * @param {Node} errorNode\n   * @protected\n   * @override\n   */\n  initNode(errorNode) {\n    this.updateDefaultNode(errorNode);\n  }\n\n  /**\n   * Override to initialize the newly added custom error message.\n   *\n   * @param {Node} errorNode\n   * @protected\n   * @override\n   */\n  initCustomNode(errorNode) {\n    // Save the custom error message content on the host.\n    if (errorNode.textContent && !this.errorMessage) {\n      this.errorMessage = errorNode.textContent.trim();\n    }\n\n    // Notify the host about custom node.\n    super.initCustomNode(errorNode);\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to restore the default error message element.\n   *\n   * @protected\n   * @override\n   */\n  restoreDefaultNode() {\n    this.attachDefaultNode();\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to update the error message text and hidden state.\n   *\n   * Note: unlike with other controllers, this method is\n   * called for both default and custom error message.\n   *\n   * @param {Node | undefined} node\n   * @protected\n   * @override\n   */\n  updateDefaultNode(errorNode) {\n    const { errorMessage, invalid } = this;\n    const hasError = Boolean(invalid && errorMessage && errorMessage.trim() !== '');\n\n    if (errorNode) {\n      errorNode.textContent = hasError ? errorMessage : '';\n      errorNode.hidden = !hasError;\n\n      // Role alert will make the error message announce immediately\n      // as the field becomes invalid\n      if (hasError) {\n        errorNode.setAttribute('role', 'alert');\n      } else {\n        errorNode.removeAttribute('role');\n      }\n    }\n\n    // Notify the host after update.\n    super.updateDefaultNode(errorNode);\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotChildObserveController } from '@vaadin/component-base/src/slot-child-observe-controller.js';\n\n/**\n * A controller that manages the helper node content.\n */\nexport class HelperController extends SlotChildObserveController {\n  constructor(host) {\n    // Do not provide tag name, as we create helper lazily.\n    super(host, 'helper', null);\n  }\n\n  /**\n   * Set helper text based on corresponding host property.\n   *\n   * @param {string} helperText\n   */\n  setHelperText(helperText) {\n    this.helperText = helperText;\n\n    // Restore the default helper, if needed.\n    const helperNode = this.getSlotChild();\n    if (!helperNode) {\n      this.restoreDefaultNode();\n    }\n\n    // When default helper is used, update it.\n    if (this.node === this.defaultNode) {\n      this.updateDefaultNode(this.node);\n    }\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to create the default helper element lazily as needed.\n   *\n   * @param {Node | undefined} node\n   * @protected\n   * @override\n   */\n  restoreDefaultNode() {\n    const { helperText } = this;\n\n    // No helper yet, create one.\n    if (helperText && helperText.trim() !== '') {\n      this.tagName = 'div';\n\n      const helperNode = this.attachDefaultNode();\n\n      // Observe the default node.\n      this.observeNode(helperNode);\n    }\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to update the default helper element text content.\n   *\n   * @param {Node | undefined} node\n   * @protected\n   * @override\n   */\n  updateDefaultNode(node) {\n    if (node) {\n      node.textContent = this.helperText;\n    }\n\n    // Notify the host after update.\n    super.updateDefaultNode(node);\n  }\n\n  /**\n   * Override to observe the newly added custom node.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  initCustomNode(node) {\n    // Notify the host about a custom slotted helper.\n    super.initCustomNode(node);\n\n    this.observeNode(node);\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotChildObserveController } from '@vaadin/component-base/src/slot-child-observe-controller.js';\n\n/**\n * A controller to manage the label element.\n */\nexport class LabelController extends SlotChildObserveController {\n  constructor(host) {\n    super(host, 'label', 'label');\n  }\n\n  /**\n   * Set label based on corresponding host property.\n   *\n   * @param {string} label\n   */\n  setLabel(label) {\n    this.label = label;\n\n    // Restore the default label, if needed.\n    const labelNode = this.getSlotChild();\n    if (!labelNode) {\n      this.restoreDefaultNode();\n    }\n\n    // When default label is used, update it.\n    if (this.node === this.defaultNode) {\n      this.updateDefaultNode(this.node);\n    }\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to restore and observe the default label element.\n   *\n   * @protected\n   * @override\n   */\n  restoreDefaultNode() {\n    const { label } = this;\n\n    // Restore the default label.\n    if (label && label.trim() !== '') {\n      const labelNode = this.attachDefaultNode();\n\n      // Observe the default label.\n      this.observeNode(labelNode);\n    }\n  }\n\n  /**\n   * Override method inherited from `SlotChildObserveController`\n   * to update the default label element text content.\n   *\n   * @param {Node | undefined} node\n   * @protected\n   * @override\n   */\n  updateDefaultNode(node) {\n    if (node) {\n      node.textContent = this.label;\n    }\n\n    // Notify the host after update.\n    super.updateDefaultNode(node);\n  }\n\n  /**\n   * Override to observe the newly added custom node.\n   *\n   * @param {Node} node\n   * @protected\n   * @override\n   */\n  initCustomNode(node) {\n    // Notify the host about adding a custom node.\n    super.initCustomNode(node);\n\n    this.observeNode(node);\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { LabelController } from './label-controller.js';\n\n/**\n * A mixin to provide label via corresponding property or named slot.\n *\n * @polymerMixin\n * @mixes ControllerMixin\n */\nexport const LabelMixin = dedupingMixin(\n  (superclass) =>\n    class LabelMixinClass extends ControllerMixin(superclass) {\n      static get properties() {\n        return {\n          /**\n           * The label text for the input node.\n           * When no light dom defined via [slot=label], this value will be used.\n           */\n          label: {\n            type: String,\n            observer: '_labelChanged',\n          },\n        };\n      }\n\n      constructor() {\n        super();\n\n        this._labelController = new LabelController(this);\n\n        this._labelController.addEventListener('slot-content-changed', (event) => {\n          this.toggleAttribute('has-label', event.detail.hasContent);\n        });\n      }\n\n      /** @protected */\n      get _labelId() {\n        const node = this._labelNode;\n        return node && node.id;\n      }\n\n      /** @protected */\n      get _labelNode() {\n        return this._labelController.node;\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        this.addController(this._labelController);\n      }\n\n      /** @protected */\n      _labelChanged(label) {\n        this._labelController.setLabel(label);\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nexport const ValidateMixin = dedupingMixin(\n  (superclass) =>\n    class ValidateMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * Set to true when the field is invalid.\n           */\n          invalid: {\n            type: Boolean,\n            reflectToAttribute: true,\n            notify: true,\n            value: false,\n          },\n\n          /**\n           * Specifies that the user must fill in a value.\n           */\n          required: {\n            type: Boolean,\n            reflectToAttribute: true,\n          },\n        };\n      }\n\n      /**\n       * Validates the field and sets the `invalid` property based on the result.\n       *\n       * The method fires a `validated` event with the result of the validation.\n       *\n       * @return {boolean} True if the value is valid.\n       */\n      validate() {\n        const isValid = this.checkValidity();\n        this._setInvalid(!isValid);\n        this.dispatchEvent(new CustomEvent('validated', { detail: { valid: isValid } }));\n        return isValid;\n      }\n\n      /**\n       * Returns true if the field value satisfies all constraints (if any).\n       *\n       * @return {boolean}\n       */\n      checkValidity() {\n        return !this.required || !!this.value;\n      }\n\n      /**\n       * @param {boolean} invalid\n       * @protected\n       */\n      _setInvalid(invalid) {\n        if (this._shouldSetInvalid(invalid)) {\n          this.invalid = invalid;\n        }\n      }\n\n      /**\n       * Override this method to define whether the given `invalid` state should be set.\n       *\n       * @param {boolean} _invalid\n       * @return {boolean}\n       * @protected\n       */\n      _shouldSetInvalid(_invalid) {\n        return true;\n      }\n\n      /**\n       * Fired whenever the field is validated.\n       *\n       * @event validated\n       * @param {Object} detail\n       * @param {boolean} detail.valid the result of the validation.\n       */\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FieldAriaController } from '@vaadin/a11y-base/src/field-aria-controller.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { ErrorController } from './error-controller.js';\nimport { HelperController } from './helper-controller.js';\nimport { LabelMixin } from './label-mixin.js';\nimport { ValidateMixin } from './validate-mixin.js';\n\n/**\n * A mixin to provide common field logic: label, error message and helper text.\n *\n * @polymerMixin\n * @mixes ControllerMixin\n * @mixes LabelMixin\n * @mixes ValidateMixin\n */\nexport const FieldMixin = (superclass) =>\n  class FieldMixinClass extends ValidateMixin(LabelMixin(ControllerMixin(superclass))) {\n    static get properties() {\n      return {\n        /**\n         * A target element to which ARIA attributes are set.\n         * @protected\n         */\n        ariaTarget: {\n          type: Object,\n          observer: '_ariaTargetChanged',\n        },\n\n        /**\n         * Error to show when the field is invalid.\n         *\n         * @attr {string} error-message\n         */\n        errorMessage: {\n          type: String,\n          observer: '_errorMessageChanged',\n        },\n\n        /**\n         * String used for the helper text.\n         * @attr {string} helper-text\n         */\n        helperText: {\n          type: String,\n          observer: '_helperTextChanged',\n        },\n\n        /**\n         * String used to label the component to screen reader users.\n         * @attr {string} accessible-name\n         */\n        accessibleName: {\n          type: String,\n          observer: '_accessibleNameChanged',\n        },\n\n        /**\n         * Id of the element used as label of the component to screen reader users.\n         * @attr {string} accessible-name-ref\n         */\n        accessibleNameRef: {\n          type: String,\n          observer: '_accessibleNameRefChanged',\n        },\n      };\n    }\n\n    static get observers() {\n      return ['_invalidChanged(invalid)', '_requiredChanged(required)'];\n    }\n\n    constructor() {\n      super();\n\n      this._fieldAriaController = new FieldAriaController(this);\n      this._helperController = new HelperController(this);\n      this._errorController = new ErrorController(this);\n\n      this._errorController.addEventListener('slot-content-changed', (event) => {\n        this.toggleAttribute('has-error-message', event.detail.hasContent);\n      });\n\n      this._labelController.addEventListener('slot-content-changed', (event) => {\n        const { hasContent, node } = event.detail;\n        this.__labelChanged(hasContent, node);\n      });\n\n      this._helperController.addEventListener('slot-content-changed', (event) => {\n        const { hasContent, node } = event.detail;\n        this.toggleAttribute('has-helper', hasContent);\n        this.__helperChanged(hasContent, node);\n      });\n    }\n\n    /**\n     * @protected\n     * @return {HTMLElement}\n     */\n    get _errorNode() {\n      return this._errorController.node;\n    }\n\n    /**\n     * @protected\n     * @return {HTMLElement}\n     */\n    get _helperNode() {\n      return this._helperController.node;\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addController(this._fieldAriaController);\n      this.addController(this._helperController);\n      this.addController(this._errorController);\n    }\n\n    /** @private */\n    __helperChanged(hasHelper, helperNode) {\n      if (hasHelper) {\n        this._fieldAriaController.setHelperId(helperNode.id);\n      } else {\n        this._fieldAriaController.setHelperId(null);\n      }\n    }\n\n    /** @protected */\n    _accessibleNameChanged(accessibleName) {\n      this._fieldAriaController.setAriaLabel(accessibleName);\n    }\n\n    /** @protected */\n    _accessibleNameRefChanged(accessibleNameRef) {\n      this._fieldAriaController.setLabelId(accessibleNameRef, true);\n    }\n\n    /** @private */\n    __labelChanged(hasLabel, labelNode) {\n      // Label ID should be only added when the label content is present.\n      // Otherwise, it may conflict with an `aria-label` attribute possibly added by the user.\n      if (hasLabel) {\n        this._fieldAriaController.setLabelId(labelNode.id);\n      } else {\n        this._fieldAriaController.setLabelId(null);\n      }\n    }\n\n    /**\n     * @param {string | null | undefined} errorMessage\n     * @protected\n     */\n    _errorMessageChanged(errorMessage) {\n      this._errorController.setErrorMessage(errorMessage);\n    }\n\n    /**\n     * @param {string} helperText\n     * @protected\n     */\n    _helperTextChanged(helperText) {\n      this._helperController.setHelperText(helperText);\n    }\n\n    /**\n     * @param {HTMLElement | null | undefined} target\n     * @protected\n     */\n    _ariaTargetChanged(target) {\n      if (target) {\n        this._fieldAriaController.setTarget(target);\n      }\n    }\n\n    /**\n     * @param {boolean} required\n     * @protected\n     */\n    _requiredChanged(required) {\n      this._fieldAriaController.setRequired(required);\n    }\n\n    /**\n     * @param {boolean} invalid\n     * @protected\n     */\n    _invalidChanged(invalid) {\n      this._errorController.setInvalid(invalid);\n\n      // This timeout is needed to prevent NVDA from announcing the error message twice:\n      // 1. Once adding the `[role=alert]` attribute when updating `has-error-message` (OK).\n      // 2. Once linking the error ID with the ARIA target here (unwanted).\n      // Related issue: https://github.com/vaadin/web-components/issues/3061.\n      setTimeout(() => {\n        // Error message ID needs to be dynamically added / removed based on the validity\n        // Otherwise assistive technologies would announce the error, even if we hide it.\n        if (invalid) {\n          const node = this._errorNode;\n          this._fieldAriaController.setErrorId(node && node.id);\n        } else {\n          this._fieldAriaController.setErrorId(null);\n        }\n      });\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\n\n/**\n * A mixin to delegate properties and attributes to a target element.\n *\n * @polymerMixin\n */\nexport const DelegateStateMixin = dedupingMixin(\n  (superclass) =>\n    class DelegateStateMixinClass extends superclass {\n      static get properties() {\n        return {\n          /**\n           * A target element to which attributes and properties are delegated.\n           * @protected\n           */\n          stateTarget: {\n            type: Object,\n            observer: '_stateTargetChanged',\n          },\n        };\n      }\n\n      /**\n       * An array of the host attributes to delegate to the target element.\n       */\n      static get delegateAttrs() {\n        return [];\n      }\n\n      /**\n       * An array of the host properties to delegate to the target element.\n       */\n      static get delegateProps() {\n        return [];\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        this._createDelegateAttrsObserver();\n        this._createDelegatePropsObserver();\n      }\n\n      /** @protected */\n      _stateTargetChanged(target) {\n        if (target) {\n          this._ensureAttrsDelegated();\n          this._ensurePropsDelegated();\n        }\n      }\n\n      /** @protected */\n      _createDelegateAttrsObserver() {\n        this._createMethodObserver(`_delegateAttrsChanged(${this.constructor.delegateAttrs.join(', ')})`);\n      }\n\n      /** @protected */\n      _createDelegatePropsObserver() {\n        this._createMethodObserver(`_delegatePropsChanged(${this.constructor.delegateProps.join(', ')})`);\n      }\n\n      /** @protected */\n      _ensureAttrsDelegated() {\n        this.constructor.delegateAttrs.forEach((name) => {\n          this._delegateAttribute(name, this[name]);\n        });\n      }\n\n      /** @protected */\n      _ensurePropsDelegated() {\n        this.constructor.delegateProps.forEach((name) => {\n          this._delegateProperty(name, this[name]);\n        });\n      }\n\n      /** @protected */\n      _delegateAttrsChanged(...values) {\n        this.constructor.delegateAttrs.forEach((name, index) => {\n          this._delegateAttribute(name, values[index]);\n        });\n      }\n\n      /** @protected */\n      _delegatePropsChanged(...values) {\n        this.constructor.delegateProps.forEach((name, index) => {\n          this._delegateProperty(name, values[index]);\n        });\n      }\n\n      /** @protected */\n      _delegateAttribute(name, value) {\n        if (!this.stateTarget) {\n          return;\n        }\n\n        if (name === 'invalid') {\n          this._delegateAttribute('aria-invalid', value ? 'true' : false);\n        }\n\n        if (typeof value === 'boolean') {\n          this.stateTarget.toggleAttribute(name, value);\n        } else if (value) {\n          this.stateTarget.setAttribute(name, value);\n        } else {\n          this.stateTarget.removeAttribute(name);\n        }\n      }\n\n      /** @protected */\n      _delegateProperty(name, value) {\n        if (!this.stateTarget) {\n          return;\n        }\n\n        this.stateTarget[name] = value;\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { dedupingMixin } from '@polymer/polymer/lib/utils/mixin.js';\nimport { DelegateStateMixin } from '@vaadin/component-base/src/delegate-state-mixin.js';\nimport { InputMixin } from './input-mixin.js';\nimport { ValidateMixin } from './validate-mixin.js';\n\n/**\n * A mixin to combine multiple input validation constraints.\n *\n * @polymerMixin\n * @mixes DelegateStateMixin\n * @mixes InputMixin\n * @mixes ValidateMixin\n */\nexport const InputConstraintsMixin = dedupingMixin(\n  (superclass) =>\n    class InputConstraintsMixinClass extends DelegateStateMixin(ValidateMixin(InputMixin(superclass))) {\n      /**\n       * An array of attributes which participate in the input validation.\n       * Changing these attributes will cause the input to re-validate.\n       *\n       * IMPORTANT: The attributes should be properly delegated to the input element\n       * from the host using `delegateAttrs` getter (see `DelegateStateMixin`).\n       * The `required` attribute is already delegated.\n       */\n      static get constraints() {\n        return ['required'];\n      }\n\n      static get delegateAttrs() {\n        return [...super.delegateAttrs, 'required'];\n      }\n\n      /** @protected */\n      ready() {\n        super.ready();\n\n        this._createConstraintsObserver();\n      }\n\n      /**\n       * Returns true if the current input value satisfies all constraints (if any).\n       * @return {boolean}\n       */\n      checkValidity() {\n        if (this.inputElement && this._hasValidConstraints(this.constructor.constraints.map((c) => this[c]))) {\n          return this.inputElement.checkValidity();\n        }\n        return !this.invalid;\n      }\n\n      /**\n       * Returns true if some of the provided set of constraints are valid.\n       * @param {Array} constraints\n       * @return {boolean}\n       * @protected\n       */\n      _hasValidConstraints(constraints) {\n        return constraints.some((c) => this.__isValidConstraint(c));\n      }\n\n      /**\n       * Override this method to customize setting up constraints observer.\n       * @protected\n       */\n      _createConstraintsObserver() {\n        // This complex observer needs to be added dynamically instead of using `static get observers()`\n        // to make it possible to tweak this behavior in classes that apply this mixin.\n        this._createMethodObserver(`_constraintsChanged(stateTarget, ${this.constructor.constraints.join(', ')})`);\n      }\n\n      /**\n       * Override this method to implement custom validation constraints.\n       * @param {HTMLElement | undefined} stateTarget\n       * @param {unknown[]} constraints\n       * @protected\n       */\n      _constraintsChanged(stateTarget, ...constraints) {\n        // The input element's validity cannot be determined until\n        // all the necessary constraint attributes aren't set on it.\n        if (!stateTarget) {\n          return;\n        }\n\n        const hasConstraints = this._hasValidConstraints(constraints);\n        const isLastConstraintRemoved = this.__previousHasConstraints && !hasConstraints;\n\n        if ((this._hasValue || this.invalid) && hasConstraints) {\n          this.validate();\n        } else if (isLastConstraintRemoved) {\n          this._setInvalid(false);\n        }\n\n        this.__previousHasConstraints = hasConstraints;\n      }\n\n      /**\n       * Override an event listener inherited from `InputMixin`\n       * to capture native `change` event and make sure that\n       * a new one is dispatched after validation runs.\n       * @param {Event} event\n       * @protected\n       * @override\n       */\n      _onChange(event) {\n        event.stopPropagation();\n\n        this.validate();\n\n        this.dispatchEvent(\n          new CustomEvent('change', {\n            detail: {\n              sourceEvent: event,\n            },\n            bubbles: event.bubbles,\n            cancelable: event.cancelable,\n          }),\n        );\n      }\n\n      /** @private */\n      __isValidConstraint(constraint) {\n        // 0 is valid for `minlength` and `maxlength`\n        return Boolean(constraint) || constraint === 0;\n      }\n    },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { DelegateFocusMixin } from '@vaadin/a11y-base/src/delegate-focus-mixin.js';\nimport { KeyboardMixin } from '@vaadin/a11y-base/src/keyboard-mixin.js';\nimport { timeOut } from '@vaadin/component-base/src/async.js';\nimport { Debouncer } from '@vaadin/component-base/src/debounce.js';\nimport { SlotStylesMixin } from '@vaadin/component-base/src/slot-styles-mixin.js';\nimport { ClearButtonMixin } from './clear-button-mixin.js';\nimport { FieldMixin } from './field-mixin.js';\nimport { InputConstraintsMixin } from './input-constraints-mixin.js';\n\n/**\n * A mixin to provide shared logic for the editable form input controls.\n *\n * @polymerMixin\n * @mixes DelegateFocusMixin\n * @mixes FieldMixin\n * @mixes InputConstraintsMixin\n * @mixes KeyboardMixin\n * @mixes ClearButtonMixin\n * @mixes SlotStylesMixin\n */\nexport const InputControlMixin = (superclass) =>\n  class InputControlMixinClass extends SlotStylesMixin(\n    DelegateFocusMixin(InputConstraintsMixin(FieldMixin(ClearButtonMixin(KeyboardMixin(superclass))))),\n  ) {\n    static get properties() {\n      return {\n        /**\n         * A pattern matched against individual characters the user inputs.\n         *\n         * When set, the field will prevent:\n         * - `keydown` events if the entered key doesn't match `/^allowedCharPattern$/`\n         * - `paste` events if the pasted text doesn't match `/^allowedCharPattern*$/`\n         * - `drop` events if the dropped text doesn't match `/^allowedCharPattern*$/`\n         *\n         * For example, to allow entering only numbers and minus signs, use:\n         * `allowedCharPattern = \"[\\\\d-]\"`\n         * @attr {string} allowed-char-pattern\n         */\n        allowedCharPattern: {\n          type: String,\n          observer: '_allowedCharPatternChanged',\n        },\n\n        /**\n         * If true, the input text gets fully selected when the field is focused using click or touch / tap.\n         */\n        autoselect: {\n          type: Boolean,\n          value: false,\n        },\n\n        /**\n         * The name of this field.\n         */\n        name: {\n          type: String,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * A hint to the user of what can be entered in the field.\n         */\n        placeholder: {\n          type: String,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * When present, it specifies that the field is read-only.\n         */\n        readonly: {\n          type: Boolean,\n          value: false,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * The text usually displayed in a tooltip popup when the mouse is over the field.\n         */\n        title: {\n          type: String,\n          reflectToAttribute: true,\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'name', 'type', 'placeholder', 'readonly', 'invalid', 'title'];\n    }\n\n    constructor() {\n      super();\n\n      this._boundOnPaste = this._onPaste.bind(this);\n      this._boundOnDrop = this._onDrop.bind(this);\n      this._boundOnBeforeInput = this._onBeforeInput.bind(this);\n    }\n\n    /** @protected */\n    get slotStyles() {\n      // Needed for Safari, where ::slotted(...)::placeholder does not work\n      return [\n        `\n          :is(input[slot='input'], textarea[slot='textarea'])::placeholder {\n            font: inherit;\n            color: inherit;\n          }\n        `,\n      ];\n    }\n\n    /**\n     * Override an event listener from `DelegateFocusMixin`.\n     * @param {FocusEvent} event\n     * @protected\n     * @override\n     */\n    _onFocus(event) {\n      super._onFocus(event);\n\n      if (this.autoselect && this.inputElement) {\n        this.inputElement.select();\n      }\n    }\n\n    /**\n     * Override an event listener inherited from `InputMixin`\n     * to capture native `change` event and make sure that\n     * a new one is dispatched after validation runs.\n     * @param {Event} event\n     * @protected\n     * @override\n     */\n    _onChange(event) {\n      event.stopPropagation();\n\n      this.validate();\n\n      this.dispatchEvent(\n        new CustomEvent('change', {\n          detail: {\n            sourceEvent: event,\n          },\n          bubbles: event.bubbles,\n          cancelable: event.cancelable,\n        }),\n      );\n    }\n\n    /**\n     * Override a method from `InputMixin`.\n     * @param {!HTMLElement} input\n     * @protected\n     * @override\n     */\n    _addInputListeners(input) {\n      super._addInputListeners(input);\n\n      input.addEventListener('paste', this._boundOnPaste);\n      input.addEventListener('drop', this._boundOnDrop);\n      input.addEventListener('beforeinput', this._boundOnBeforeInput);\n    }\n\n    /**\n     * Override a method from `InputMixin`.\n     * @param {!HTMLElement} input\n     * @protected\n     * @override\n     */\n    _removeInputListeners(input) {\n      super._removeInputListeners(input);\n\n      input.removeEventListener('paste', this._boundOnPaste);\n      input.removeEventListener('drop', this._boundOnDrop);\n      input.removeEventListener('beforeinput', this._boundOnBeforeInput);\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     * @param {!KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onKeyDown(event) {\n      super._onKeyDown(event);\n\n      if (this.allowedCharPattern && !this.__shouldAcceptKey(event)) {\n        event.preventDefault();\n        this._markInputPrevented();\n      }\n    }\n\n    /** @protected */\n    _markInputPrevented() {\n      // Add input-prevented attribute for 200ms\n      this.setAttribute('input-prevented', '');\n      this._preventInputDebouncer = Debouncer.debounce(this._preventInputDebouncer, timeOut.after(200), () => {\n        this.removeAttribute('input-prevented');\n      });\n    }\n\n    /** @private */\n    __shouldAcceptKey(event) {\n      return (\n        event.metaKey ||\n        event.ctrlKey ||\n        !event.key || // Allow typing anything if event.key is not supported\n        event.key.length !== 1 || // Allow \"Backspace\", \"ArrowLeft\" etc.\n        this.__allowedCharRegExp.test(event.key)\n      );\n    }\n\n    /** @private */\n    _onPaste(e) {\n      if (this.allowedCharPattern) {\n        const pastedText = e.clipboardData.getData('text');\n        if (!this.__allowedTextRegExp.test(pastedText)) {\n          e.preventDefault();\n          this._markInputPrevented();\n        }\n      }\n    }\n\n    /** @private */\n    _onDrop(e) {\n      if (this.allowedCharPattern) {\n        const draggedText = e.dataTransfer.getData('text');\n        if (!this.__allowedTextRegExp.test(draggedText)) {\n          e.preventDefault();\n          this._markInputPrevented();\n        }\n      }\n    }\n\n    /** @private */\n    _onBeforeInput(e) {\n      // The `beforeinput` event covers all the cases for `allowedCharPattern`: keyboard, pasting and dropping,\n      // but it is still experimental technology so we can't rely on it. It's used here just as an additional check,\n      // because it seems to be the only way to detect and prevent specific keys on mobile devices.\n      // See https://github.com/vaadin/vaadin-text-field/issues/429\n      if (this.allowedCharPattern && e.data && !this.__allowedTextRegExp.test(e.data)) {\n        e.preventDefault();\n        this._markInputPrevented();\n      }\n    }\n\n    /** @private */\n    _allowedCharPatternChanged(charPattern) {\n      if (charPattern) {\n        try {\n          this.__allowedCharRegExp = new RegExp(`^${charPattern}$`, 'u');\n          this.__allowedTextRegExp = new RegExp(`^${charPattern}*$`, 'u');\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    /**\n     * Fired when the user commits a value change.\n     *\n     * @event change\n     */\n\n    /**\n     * Fired when the value is changed by the user: on every typing keystroke,\n     * and the value is cleared using the clear button.\n     *\n     * @event input\n     */\n  };\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { InputControlMixin } from './input-control-mixin.js';\n\n/**\n * A mixin to provide logic for vaadin-text-field and related components.\n *\n * @polymerMixin\n * @mixes InputControlMixin\n */\nexport const InputFieldMixin = (superclass) =>\n  class InputFieldMixinClass extends InputControlMixin(superclass) {\n    static get properties() {\n      return {\n        /**\n         * Whether the value of the control can be automatically completed by the browser.\n         * List of available options at:\n         * https://developer.mozilla.org/en/docs/Web/HTML/Element/input#attr-autocomplete\n         */\n        autocomplete: {\n          type: String,\n        },\n\n        /**\n         * This is a property supported by Safari that is used to control whether\n         * autocorrection should be enabled when the user is entering/editing the text.\n         * Possible values are:\n         * on: Enable autocorrection.\n         * off: Disable autocorrection.\n         */\n        autocorrect: {\n          type: String,\n        },\n\n        /**\n         * This is a property supported by Safari and Chrome that is used to control whether\n         * autocapitalization should be enabled when the user is entering/editing the text.\n         * Possible values are:\n         * characters: Characters capitalization.\n         * words: Words capitalization.\n         * sentences: Sentences capitalization.\n         * none: No capitalization.\n         */\n        autocapitalize: {\n          type: String,\n          reflectToAttribute: true,\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'autocapitalize', 'autocomplete', 'autocorrect'];\n    }\n\n    // Workaround for https://github.com/Polymer/polymer/issues/5259\n    get __data() {\n      return this.__dataValue || {};\n    }\n\n    set __data(value) {\n      this.__dataValue = value;\n    }\n\n    /**\n     * @param {HTMLElement} input\n     * @protected\n     * @override\n     */\n    _inputElementChanged(input) {\n      super._inputElementChanged(input);\n\n      if (input) {\n        // Discard value set on the custom slotted input.\n        if (input.value && input.value !== this.value) {\n          console.warn(`Please define value on the <${this.localName}> component!`);\n          input.value = '';\n        }\n\n        if (this.value) {\n          input.value = this.value;\n        }\n      }\n    }\n\n    /**\n     * Override an event listener from `FocusMixin`.\n     * @param {boolean} focused\n     * @protected\n     * @override\n     */\n    _setFocused(focused) {\n      super._setFocused(focused);\n\n      // Do not validate when focusout is caused by document\n      // losing focus, which happens on browser tab switch.\n      if (!focused && document.hasFocus()) {\n        this.validate();\n      }\n    }\n\n    /**\n     * Override an event listener from `InputMixin`\n     * to mark as valid after user started typing.\n     * @param {Event} event\n     * @protected\n     * @override\n     */\n    _onInput(event) {\n      super._onInput(event);\n\n      if (this.invalid) {\n        this.validate();\n      }\n    }\n\n    /**\n     * Override an observer from `InputMixin` to validate the field\n     * when a new value is set programmatically.\n     *\n     * @param {string | undefined} newValue\n     * @param {string | undefined} oldValue\n     * @protected\n     * @override\n     */\n    _valueChanged(newValue, oldValue) {\n      super._valueChanged(newValue, oldValue);\n\n      if (oldValue === undefined) {\n        return;\n      }\n\n      if (this.invalid) {\n        this.validate();\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller for linking a `<label>` element with an `<input>` element.\n */\nexport class LabelledInputController {\n  constructor(input, labelController) {\n    this.input = input;\n    this.__preventDuplicateLabelClick = this.__preventDuplicateLabelClick.bind(this);\n\n    labelController.addEventListener('slot-content-changed', (event) => {\n      this.__initLabel(event.detail.node);\n    });\n\n    // Initialize the default label element\n    this.__initLabel(labelController.node);\n  }\n\n  /**\n   * @param {HTMLElement} label\n   * @private\n   */\n  __initLabel(label) {\n    if (label) {\n      label.addEventListener('click', this.__preventDuplicateLabelClick);\n\n      if (this.input) {\n        label.setAttribute('for', this.input.id);\n      }\n    }\n  }\n\n  /**\n   * The native platform fires an event for both the click on the label, and also\n   * the subsequent click on the native input element caused by label click.\n   * This results in two click events arriving at the host, but we only want one.\n   * This method prevents the duplicate click and ensures the correct isTrusted event\n   * with the correct event.target arrives at the host.\n   * @private\n   */\n  __preventDuplicateLabelClick() {\n    const inputClickHandler = (e) => {\n      e.stopImmediatePropagation();\n      this.input.removeEventListener('click', inputClickHandler);\n    };\n    this.input.addEventListener('click', inputClickHandler);\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\n\n/**\n * A controller to create and initialize slotted `<textarea>` element.\n */\nexport class TextAreaController extends SlotController {\n  constructor(host, callback) {\n    super(host, 'textarea', 'textarea', {\n      initializer: (node, host) => {\n        const value = host.getAttribute('value');\n        if (value) {\n          node.value = value;\n        }\n\n        const name = host.getAttribute('name');\n        if (name) {\n          node.setAttribute('name', name);\n        }\n\n        node.id = this.defaultId;\n\n        if (typeof callback === 'function') {\n          callback(node);\n        }\n      },\n      useUniqueId: true,\n    });\n  }\n}\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { ResizeMixin } from '@vaadin/component-base/src/resize-mixin.js';\nimport { InputFieldMixin } from '@vaadin/field-base/src/input-field-mixin.js';\nimport { LabelledInputController } from '@vaadin/field-base/src/labelled-input-controller.js';\nimport { TextAreaController } from '@vaadin/field-base/src/text-area-controller.js';\n\n/**\n * A mixin providing common text area functionality.\n *\n * @polymerMixin\n * @mixes InputFieldMixin\n * @mixes ResizeMixin\n */\nexport const TextAreaMixin = (superClass) =>\n  class TextAreaMixinClass extends ResizeMixin(InputFieldMixin(superClass)) {\n    static get properties() {\n      return {\n        /**\n         * Maximum number of characters (in Unicode code points) that the user can enter.\n         */\n        maxlength: {\n          type: Number,\n        },\n\n        /**\n         * Minimum number of characters (in Unicode code points) that the user can enter.\n         */\n        minlength: {\n          type: Number,\n        },\n\n        /**\n         * A regular expression that the value is checked against.\n         * The pattern must match the entire value, not just some subset.\n         */\n        pattern: {\n          type: String,\n        },\n      };\n    }\n\n    static get delegateAttrs() {\n      return [...super.delegateAttrs, 'maxlength', 'minlength', 'pattern'];\n    }\n\n    static get constraints() {\n      return [...super.constraints, 'maxlength', 'minlength', 'pattern'];\n    }\n\n    /**\n     * Used by `InputControlMixin` as a reference to the clear button element.\n     * @protected\n     */\n    get clearElement() {\n      return this.$.clearButton;\n    }\n\n    /**\n     * @protected\n     * @override\n     */\n    _onResize() {\n      this.__scrollPositionUpdated();\n    }\n\n    /** @protected */\n    _onScroll() {\n      this.__scrollPositionUpdated();\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.addController(\n        new TextAreaController(this, (input) => {\n          this._setInputElement(input);\n          this._setFocusElement(input);\n          this.stateTarget = input;\n          this.ariaTarget = input;\n        }),\n      );\n      this.addController(new LabelledInputController(this.inputElement, this._labelController));\n\n      this.addEventListener('animationend', this._onAnimationEnd);\n\n      this._inputField = this.shadowRoot.querySelector('[part=input-field]');\n\n      // Wheel scrolling results in async scroll events. Preventing the wheel\n      // event, scrolling manually and then synchronously updating the scroll position CSS variable\n      // allows us to avoid some jumpy behavior that would occur on wheel otherwise.\n      this._inputField.addEventListener('wheel', (e) => {\n        const scrollTopBefore = this._inputField.scrollTop;\n        this._inputField.scrollTop += e.deltaY;\n\n        if (scrollTopBefore !== this._inputField.scrollTop) {\n          e.preventDefault();\n          this.__scrollPositionUpdated();\n        }\n      });\n\n      this._updateHeight();\n      this.__scrollPositionUpdated();\n    }\n\n    /** @private */\n    __scrollPositionUpdated() {\n      this._inputField.style.setProperty('--_text-area-vertical-scroll-position', '0px');\n      this._inputField.style.setProperty('--_text-area-vertical-scroll-position', `${this._inputField.scrollTop}px`);\n    }\n\n    /** @private */\n    _onAnimationEnd(e) {\n      if (e.animationName.indexOf('vaadin-text-area-appear') === 0) {\n        this._updateHeight();\n      }\n    }\n\n    /**\n     * @param {unknown} newVal\n     * @param {unknown} oldVal\n     * @protected\n     * @override\n     */\n    _valueChanged(newVal, oldVal) {\n      super._valueChanged(newVal, oldVal);\n\n      this._updateHeight();\n    }\n\n    /** @private */\n    _updateHeight() {\n      const input = this.inputElement;\n      const inputField = this._inputField;\n\n      if (!input || !inputField) {\n        return;\n      }\n\n      const scrollTop = inputField.scrollTop;\n\n      // Only clear the height when the content shortens to minimize scrollbar flickering.\n      const valueLength = this.value ? this.value.length : 0;\n\n      if (this._oldValueLength >= valueLength) {\n        const inputFieldHeight = getComputedStyle(inputField).height;\n        const inputWidth = getComputedStyle(input).width;\n\n        // Temporarily fix the height of the wrapping input field container to prevent changing the browsers scroll\n        // position while resetting the textareas height. If the textarea had a large height, then removing its height\n        // will reset its height to the default of two rows. That might reduce the height of the page, and the\n        // browser might adjust the scroll position before we can restore the measured height of the textarea.\n        inputField.style.display = 'block';\n        inputField.style.height = inputFieldHeight;\n\n        // Fix the input element width so its scroll height isn't affected by host's disappearing scrollbars\n        input.style.maxWidth = inputWidth;\n\n        // Clear the height of the textarea to allow measuring a reduced scroll height\n        input.style.height = 'auto';\n      }\n      this._oldValueLength = valueLength;\n\n      const inputHeight = input.scrollHeight;\n      if (inputHeight > input.clientHeight) {\n        input.style.height = `${inputHeight}px`;\n      }\n\n      // Restore\n      input.style.removeProperty('max-width');\n      inputField.style.removeProperty('display');\n      inputField.style.removeProperty('height');\n      inputField.scrollTop = scrollTop;\n    }\n\n    /**\n     * Returns true if the current textarea value satisfies all constraints (if any).\n     * @return {boolean}\n     * @override\n     */\n    checkValidity() {\n      if (!super.checkValidity()) {\n        return false;\n      }\n\n      // Native <textarea> does not support pattern attribute, so we have a custom logic\n      // according to WHATWG spec for <input>, with tests inspired by web-platform-tests\n      // https://html.spec.whatwg.org/multipage/input.html#the-pattern-attribute\n\n      if (!this.pattern || !this.inputElement.value) {\n        // Mark as valid if there is no pattern, or the value is empty\n        return true;\n      }\n\n      try {\n        const match = this.inputElement.value.match(this.pattern);\n        return match ? match[0] === match.input : false;\n      } catch (_) {\n        // If the pattern can not be compiled, then report as valid\n        return true;\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from 'lit';\n\nexport const textAreaStyles = css`\n  :host {\n    animation: 1ms vaadin-text-area-appear;\n  }\n\n  .vaadin-text-area-container {\n    flex: auto;\n  }\n\n  /* The label, helper text and the error message should neither grow nor shrink. */\n  [part='label'],\n  [part='helper-text'],\n  [part='error-message'] {\n    flex: none;\n  }\n\n  [part='input-field'] {\n    flex: auto;\n    overflow: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n\n  ::slotted(textarea) {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    flex: auto;\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    resize: none;\n    margin: 0;\n    padding: 0 0.25em;\n    border: 0;\n    border-radius: 0;\n    min-width: 0;\n    font: inherit;\n    font-size: 1em;\n    line-height: normal;\n    color: inherit;\n    background-color: transparent;\n    /* Disable default invalid style in Firefox */\n    box-shadow: none;\n  }\n\n  /* Override styles from <vaadin-input-container> */\n  [part='input-field'] ::slotted(textarea) {\n    align-self: stretch;\n    white-space: pre-wrap;\n  }\n\n  [part='input-field'] ::slotted(:not(textarea)) {\n    align-self: flex-start;\n  }\n\n  /* Workaround https://bugzilla.mozilla.org/show_bug.cgi?id=1739079 */\n  :host([disabled]) ::slotted(textarea) {\n    user-select: none;\n  }\n\n  @keyframes vaadin-text-area-appear {\n    to {\n      opacity: 1;\n    }\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/input-container/src/vaadin-input-container.js';\nimport { html, PolymerElement } from '@polymer/polymer';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { inputFieldShared } from '@vaadin/field-base/src/styles/input-field-shared-styles.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { TextAreaMixin } from './vaadin-text-area-mixin.js';\nimport { textAreaStyles } from './vaadin-text-area-styles.js';\n\nregisterStyles('vaadin-text-area', [inputFieldShared, textAreaStyles], { moduleId: 'vaadin-text-area-styles' });\n\n/**\n * `<vaadin-text-area>` is a web component for multi-line text input.\n *\n * ```html\n * <vaadin-text-area label=\"Comment\"></vaadin-text-area>\n * ```\n *\n * ### Prefixes and suffixes\n *\n * These are child elements of a `<vaadin-text-area>` that are displayed\n * inline with the input, before or after.\n * In order for an element to be considered as a prefix, it must have the slot\n * attribute set to `prefix` (and similarly for `suffix`).\n *\n * ```html\n * <vaadin-text-area label=\"Description\">\n *   <div slot=\"prefix\">Details:</div>\n *   <div slot=\"suffix\">The end!</div>\n * </vaadin-text-area>\n * ```\n *\n * ### Styling\n *\n * The following custom properties are available for styling:\n *\n * Custom property                | Description                | Default\n * -------------------------------|----------------------------|---------\n * `--vaadin-field-default-width` | Default width of the field | `12em`\n *\n * `<vaadin-text-area>` provides the same set of shadow DOM parts and state attributes as `<vaadin-text-field>`.\n * See [`<vaadin-text-field>`](#/elements/vaadin-text-field) for the styling documentation.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @fires {Event} input - Fired when the value is changed by the user: on every typing keystroke, and the value is cleared using the clear button.\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ElementMixin\n * @mixes TextAreaMixin\n * @mixes ThemableMixin\n */\nexport class TextArea extends TextAreaMixin(ThemableMixin(ElementMixin(PolymerElement))) {\n  static get is() {\n    return 'vaadin-text-area';\n  }\n\n  static get template() {\n    return html`\n      <div class=\"vaadin-text-area-container\">\n        <div part=\"label\">\n          <slot name=\"label\"></slot>\n          <span part=\"required-indicator\" aria-hidden=\"true\"></span>\n        </div>\n\n        <vaadin-input-container\n          part=\"input-field\"\n          readonly=\"[[readonly]]\"\n          disabled=\"[[disabled]]\"\n          invalid=\"[[invalid]]\"\n          theme$=\"[[_theme]]\"\n          on-scroll=\"_onScroll\"\n        >\n          <slot name=\"prefix\" slot=\"prefix\"></slot>\n          <slot name=\"textarea\"></slot>\n          <slot name=\"suffix\" slot=\"suffix\"></slot>\n          <div id=\"clearButton\" part=\"clear-button\" slot=\"suffix\" aria-hidden=\"true\"></div>\n        </vaadin-input-container>\n\n        <div part=\"helper-text\">\n          <slot name=\"helper\"></slot>\n        </div>\n\n        <div part=\"error-message\">\n          <slot name=\"error-message\"></slot>\n        </div>\n      </div>\n\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._tooltipController = new TooltipController(this);\n    this._tooltipController.setPosition('top');\n    this._tooltipController.setAriaTarget(this.inputElement);\n    this.addController(this._tooltipController);\n  }\n}\n\ndefineCustomElement(TextArea);\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-message-input',\n  css`\n    :host {\n      padding: var(--lumo-space-s) var(--lumo-space-m);\n    }\n\n    ::slotted([slot='textarea']) {\n      margin-inline-end: var(--lumo-space-s);\n    }\n  `,\n  { moduleId: 'lumo-message-input' },\n);\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/button/src/vaadin-button.js';\nimport '@vaadin/text-area/src/vaadin-text-area.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-message-input>` is a Web Component for sending messages.\n * It consists of a text area that grows on along with the content, and a send button to send message.\n *\n * The message can be sent by one of the following actions:\n * - by pressing Enter (use Shift + Enter to add a new line)\n * - by clicking `submit` button.\n *\n * ```html\n * <vaadin-message-input></vaadin-message-input>\n * ```\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass MessageInput extends ElementMixin(ThemableMixin(ControllerMixin(PolymerElement))) {\n  static get properties() {\n    return {\n      /**\n       * Current content of the text input field\n       */\n      value: {\n        type: String,\n        value: '',\n      },\n\n      /**\n       * The object used to localize this component.\n       * For changing the default localization, change the entire\n       * `i18n` object.\n       *\n       * The object has the following JSON structure and default values:\n       *\n       * ```\n       * {\n       *   // Used as the button label\n       *   send: 'Send',\n       *\n       *   // Used as the input field's placeholder and aria-label\n       *   message: 'Message'\n       * }\n       * ```\n       *\n       * @type {!MessageInputI18n}\n       * @default {English}\n       */\n      i18n: {\n        type: Object,\n        value: () => ({\n          send: 'Send',\n          message: 'Message',\n        }),\n      },\n\n      /**\n       * Set to true to disable this element.\n       * @type {boolean}\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n      },\n\n      /** @private */\n      _button: {\n        type: Object,\n      },\n\n      /** @private */\n      _textArea: {\n        type: Object,\n      },\n    };\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          align-items: flex-start;\n          box-sizing: border-box;\n          display: flex;\n          max-height: 50vh;\n          overflow: hidden;\n          flex-shrink: 0;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        ::slotted([slot='button']) {\n          flex-shrink: 0;\n        }\n\n        ::slotted([slot='textarea']) {\n          align-self: stretch;\n          flex-grow: 1;\n        }\n      </style>\n      <slot name=\"textarea\"></slot>\n\n      <slot name=\"button\"></slot>\n\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-message-input';\n  }\n\n  static get observers() {\n    return [\n      '__buttonPropsChanged(_button, disabled, i18n)',\n      '__textAreaPropsChanged(_textArea, disabled, i18n, value)',\n    ];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._buttonController = new SlotController(this, 'button', 'vaadin-button', {\n      initializer: (btn) => {\n        btn.setAttribute('theme', 'primary contained');\n\n        btn.addEventListener('click', () => {\n          this.__submit();\n        });\n\n        this._button = btn;\n      },\n    });\n    this.addController(this._buttonController);\n\n    this._textAreaController = new SlotController(this, 'textarea', 'vaadin-text-area', {\n      initializer: (textarea) => {\n        textarea.addEventListener('value-changed', (event) => {\n          this.value = event.detail.value;\n        });\n\n        textarea.addEventListener('keydown', (event) => {\n          if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            this.__submit();\n          }\n        });\n\n        const input = textarea.inputElement;\n        input.removeAttribute('aria-labelledby');\n\n        // Set initial height to one row\n        input.setAttribute('rows', 1);\n        input.style.minHeight = '0';\n\n        this._textArea = textarea;\n      },\n    });\n    this.addController(this._textAreaController);\n\n    this._tooltipController = new TooltipController(this);\n    this.addController(this._tooltipController);\n  }\n\n  /** @private */\n  __buttonPropsChanged(button, disabled, i18n) {\n    if (button) {\n      button.disabled = disabled;\n      button.textContent = i18n.send;\n    }\n  }\n\n  /** @private */\n  __textAreaPropsChanged(textArea, disabled, i18n, value) {\n    if (textArea) {\n      textArea.disabled = disabled;\n      textArea.value = value;\n\n      const message = i18n.message;\n      textArea.placeholder = message;\n\n      if (message) {\n        textArea.inputElement.setAttribute('aria-label', message);\n      } else {\n        textArea.inputElement.removeAttribute('aria-label');\n      }\n    }\n  }\n\n  /**\n   * Submits the current value as an custom event named 'submit'.\n   * It also clears the text input and refocuses it for sending another message.\n   * In UI, can be triggered by pressing the submit button or pressing enter key when field is focused.\n   * It does not submit anything if text is empty.\n   */\n  __submit() {\n    if (this.value !== '') {\n      this.dispatchEvent(new CustomEvent('submit', { detail: { value: this.value } }));\n      this.value = '';\n    }\n    this._textArea.focus();\n  }\n\n  /**\n   * Fired when a new message is submitted with `<vaadin-message-input>`, either\n   * by clicking the \"send\" button, or pressing the Enter key.\n   * @event submit\n   */\n}\n\ndefineCustomElement(MessageInput);\n\nexport { MessageInput };\n", "export * from \"@vaadin/message-input/vaadin-message-input.js\";\nexport * from './generated/MessageInput.js';\n", "import type { EventName } from \"@lit-labs/react\";\nimport { MessageInput as MessageInputElement, type MessageInputEventMap as _MessageInputEventMap, } from \"@vaadin/message-input/vaadin-message-input.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { MessageInputElement, };\nexport type MessageInputEventMap = Readonly<{\n    onSubmit: EventName<_MessageInputEventMap[\"submit\"]>;\n}>;\nconst events = { onSubmit: \"submit\" } as MessageInputEventMap;\nexport type MessageInputProps = WebComponentProps<MessageInputElement, MessageInputEventMap>;\nexport const MessageInput = createComponent({\n    elementClass: MessageInputElement, events, react: React, tagName: \"vaadin-message-input\"\n});\n"],
  "mappings": "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",
  "names": ["inputFieldShared", "host", "inputField", "inputFieldShared", "textArea", "events", "MessageInput", "createComponent", "MessageInputElement", "React"]
}
