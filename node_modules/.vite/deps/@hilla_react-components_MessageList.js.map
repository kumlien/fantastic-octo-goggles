{
  "version": 3,
  "sources": ["../../@vaadin/vaadin-lumo-styles/user-colors.js", "../../@vaadin/avatar/theme/lumo/vaadin-avatar-styles.js", "../../@vaadin/message-list/theme/lumo/vaadin-message-styles.js", "../../@vaadin/message-list/theme/lumo/vaadin-message-list-styles.js", "../../lit-html/src/directives/if-defined.ts", "../../@vaadin/a11y-base/src/keyboard-direction-mixin.js", "../../@vaadin/avatar/src/vaadin-avatar-icons.js", "../../@vaadin/avatar/src/vaadin-avatar-mixin.js", "../../@vaadin/avatar/src/vaadin-avatar-styles.js", "../../@vaadin/avatar/src/vaadin-avatar.js", "../../@vaadin/message-list/src/vaadin-message.js", "../../@vaadin/message-list/src/vaadin-message-list.js", "../../@hilla/react-components/src/MessageList.ts", "../../@hilla/react-components/src/generated/MessageList.ts"],
  "sourcesContent": ["/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './version.js';\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { addLumoGlobalStyles } from './global.js';\n\nconst userColors = css`\n  :host {\n    --vaadin-user-color-0: #df0b92;\n    --vaadin-user-color-1: #650acc;\n    --vaadin-user-color-2: #097faa;\n    --vaadin-user-color-3: #ad6200;\n    --vaadin-user-color-4: #bf16f3;\n    --vaadin-user-color-5: #084391;\n    --vaadin-user-color-6: #078836;\n  }\n\n  [theme~='dark'] {\n    --vaadin-user-color-0: #ff66c7;\n    --vaadin-user-color-1: #9d8aff;\n    --vaadin-user-color-2: #8aff66;\n    --vaadin-user-color-3: #ffbd66;\n    --vaadin-user-color-4: #dc6bff;\n    --vaadin-user-color-5: #66fffa;\n    --vaadin-user-color-6: #e6ff66;\n  }\n`;\n\naddLumoGlobalStyles('user-color-props', userColors);\nexport { userColors };\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/vaadin-lumo-styles/user-colors.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nconst globalStyle = document.createElement('style');\nglobalStyle.textContent = 'html { --vaadin-avatar-size: var(--lumo-size-m); }';\ndocument.head.appendChild(globalStyle);\n\nregisterStyles(\n  'vaadin-avatar',\n  css`\n    :host {\n      color: var(--lumo-secondary-text-color);\n      background-color: var(--lumo-contrast-10pct);\n      border-radius: 50%;\n      outline: none;\n      cursor: default;\n      user-select: none;\n      -webkit-tap-highlight-color: transparent;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    :host([has-color-index]) {\n      color: var(--lumo-base-color);\n    }\n\n    :host([focus-ring]) {\n      border-color: var(--lumo-primary-color-50pct);\n    }\n\n    [part='icon'],\n    [part='abbr'] {\n      fill: currentColor;\n    }\n\n    [part='abbr'] {\n      font-family: var(--lumo-font-family);\n      font-size: 2.4375em;\n      font-weight: 500;\n    }\n\n    :host([theme~='xlarge']) [part='abbr'] {\n      font-size: 2.5em;\n    }\n\n    :host([theme~='large']) [part='abbr'] {\n      font-size: 2.375em;\n    }\n\n    :host([theme~='small']) [part='abbr'] {\n      font-size: 2.75em;\n    }\n\n    :host([theme~='xsmall']) [part='abbr'] {\n      font-size: 3em;\n    }\n\n    :host([theme~='xlarge']) {\n      --vaadin-avatar-size: var(--lumo-size-xl);\n    }\n\n    :host([theme~='large']) {\n      --vaadin-avatar-size: var(--lumo-size-l);\n    }\n\n    :host([theme~='small']) {\n      --vaadin-avatar-size: var(--lumo-size-s);\n    }\n\n    :host([theme~='xsmall']) {\n      --vaadin-avatar-size: var(--lumo-size-xs);\n    }\n  `,\n  { moduleId: 'lumo-avatar' },\n);\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport '@vaadin/vaadin-lumo-styles/typography.js';\nimport '@vaadin/avatar/theme/lumo/vaadin-avatar-styles.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles(\n  'vaadin-message',\n  css`\n    :host {\n      color: var(--lumo-body-text-color);\n      font-family: var(--lumo-font-family);\n      font-size: var(--lumo-font-size-m);\n      line-height: var(--lumo-line-height-m);\n      padding: var(--lumo-space-s) var(--lumo-space-m);\n      -moz-osx-font-smoothing: grayscale;\n      -webkit-font-smoothing: antialiased;\n      -webkit-text-size-adjust: 100%;\n    }\n\n    :host([focus-ring]) {\n      box-shadow: inset 0 0 0 2px var(--lumo-primary-color-50pct);\n    }\n\n    [part='header'] {\n      min-height: calc(var(--lumo-font-size-m) * var(--lumo-line-height-m));\n    }\n\n    [part='name'] {\n      margin-right: var(--lumo-space-s);\n    }\n\n    [part='name']:empty {\n      margin-right: 0;\n    }\n\n    :host([dir='rtl']) [part='name'] {\n      margin-left: var(--lumo-space-s);\n      margin-right: 0;\n    }\n\n    :host([dir='rtl']) [part='name']:empty {\n      margin-left: 0;\n    }\n\n    [part='time'] {\n      color: var(--lumo-secondary-text-color);\n      font-size: var(--lumo-font-size-s);\n    }\n\n    ::slotted([slot='avatar']) {\n      --vaadin-avatar-size: var(--lumo-size-m);\n      margin-top: calc(var(--lumo-space-s));\n      margin-inline-end: calc(var(--lumo-space-m));\n    }\n  `,\n  { moduleId: 'lumo-message' },\n);\n", "import '@vaadin/vaadin-lumo-styles/color.js';\nimport '@vaadin/vaadin-lumo-styles/sizing.js';\nimport '@vaadin/vaadin-lumo-styles/spacing.js';\nimport '@vaadin/vaadin-lumo-styles/style.js';\nimport './vaadin-message-styles.js';\nimport { css, registerStyles } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nregisterStyles('vaadin-message-list', css``, { moduleId: 'lumo-message-list' });\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = <T>(value: T) => value ?? nothing;\n", "/**\n * @license\n * Copyright (c) 2022 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { isElementFocused, isElementHidden } from './focus-utils.js';\nimport { KeyboardMixin } from './keyboard-mixin.js';\n\n/**\n * A mixin for navigating items with keyboard.\n *\n * @polymerMixin\n * @mixes KeyboardMixin\n */\nexport const KeyboardDirectionMixin = (superclass) =>\n  class KeyboardDirectionMixinClass extends KeyboardMixin(superclass) {\n    /**\n     * @return {Element | null}\n     * @protected\n     */\n    get focused() {\n      return (this._getItems() || []).find(isElementFocused);\n    }\n\n    /**\n     * @return {boolean}\n     * @protected\n     */\n    get _vertical() {\n      return true;\n    }\n\n    /** @protected */\n    focus() {\n      const items = this._getItems();\n      if (Array.isArray(items)) {\n        const idx = this._getAvailableIndex(items, 0, null, (item) => !isElementHidden(item));\n        if (idx >= 0) {\n          items[idx].focus();\n        }\n      }\n    }\n\n    /**\n     * Get the list of items participating in keyboard navigation.\n     * By default, it treats all the light DOM children as items.\n     * Override this method to provide custom list of elements.\n     *\n     * @return {Element[]}\n     * @protected\n     */\n    _getItems() {\n      return Array.from(this.children);\n    }\n\n    /**\n     * Override an event listener from `KeyboardMixin`.\n     *\n     * @param {!KeyboardEvent} event\n     * @protected\n     * @override\n     */\n    _onKeyDown(event) {\n      super._onKeyDown(event);\n\n      if (event.metaKey || event.ctrlKey) {\n        return;\n      }\n\n      const { key } = event;\n      const items = this._getItems() || [];\n      const currentIdx = items.indexOf(this.focused);\n\n      let idx;\n      let increment;\n\n      const isRTL = !this._vertical && this.getAttribute('dir') === 'rtl';\n      const dirIncrement = isRTL ? -1 : 1;\n\n      if (this.__isPrevKey(key)) {\n        increment = -dirIncrement;\n        idx = currentIdx - dirIncrement;\n      } else if (this.__isNextKey(key)) {\n        increment = dirIncrement;\n        idx = currentIdx + dirIncrement;\n      } else if (key === 'Home') {\n        increment = 1;\n        idx = 0;\n      } else if (key === 'End') {\n        increment = -1;\n        idx = items.length - 1;\n      }\n\n      idx = this._getAvailableIndex(items, idx, increment, (item) => !isElementHidden(item));\n\n      if (idx >= 0) {\n        event.preventDefault();\n        this._focus(idx, true);\n      }\n    }\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     * @private\n     */\n    __isPrevKey(key) {\n      return this._vertical ? key === 'ArrowUp' : key === 'ArrowLeft';\n    }\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     * @private\n     */\n    __isNextKey(key) {\n      return this._vertical ? key === 'ArrowDown' : key === 'ArrowRight';\n    }\n\n    /**\n     * Focus the item at given index. Override this method to add custom logic.\n     *\n     * @param {number} index\n     * @param {boolean} navigating\n     * @protected\n     */\n    _focus(index, navigating = false) {\n      const items = this._getItems();\n\n      this._focusItem(items[index], navigating);\n    }\n\n    /**\n     * Focus the given item. Override this method to add custom logic.\n     *\n     * @param {Element} item\n     * @param {boolean} navigating\n     * @protected\n     */\n    _focusItem(item) {\n      if (item) {\n        item.focus();\n\n        // Generally, the items are expected to implement `FocusMixin`\n        // that would set this attribute based on the `keydown` event.\n        // We set it manually to handle programmatic focus() calls.\n        item.setAttribute('focus-ring', '');\n      }\n    }\n\n    /**\n     * Returns index of the next item that satisfies the given condition,\n     * based on the index of the current item and a numeric increment.\n     *\n     * @param {Element[]} items - array of items to iterate over\n     * @param {number} index - index of the current item\n     * @param {number} increment - numeric increment, can be either 1 or -1\n     * @param {Function} condition - function used to check the item\n     * @return {number}\n     * @protected\n     */\n    _getAvailableIndex(items, index, increment, condition) {\n      const totalItems = items.length;\n      let idx = index;\n      for (let i = 0; typeof idx === 'number' && i < totalItems; i += 1, idx += increment || 1) {\n        if (idx < 0) {\n          idx = totalItems - 1;\n        } else if (idx >= totalItems) {\n          idx = 0;\n        }\n\n        const item = items[idx];\n\n        if (!item.hasAttribute('disabled') && this.__isMatchingItem(item, condition)) {\n          return idx;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Returns true if the item matches condition.\n     *\n     * @param {Element} item - item to check\n     * @param {Function} condition - function used to check the item\n     * @return {number}\n     * @private\n     */\n    __isMatchingItem(item, condition) {\n      return typeof condition === 'function' ? condition(item) : true;\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2020 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nconst template = document.createElement('template');\n\ntemplate.innerHTML = `\n  <style>\n    @font-face {\n      font-family: 'vaadin-avatar-icons';\n      src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAQAAAsAAAAABnwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAADsAAABUIIslek9TLzIAAAFEAAAAQwAAAFZAIUmEY21hcAAAAYgAAABLAAABcOspwa1nbHlmAAAB1AAAAEUAAABMYO4o1WhlYWQAAAIcAAAALgAAADYYaAmGaGhlYQAAAkwAAAAdAAAAJAZsA1VobXR4AAACbAAAAAgAAAAIA+gAAGxvY2EAAAJ0AAAABgAAAAYAJgAAbWF4cAAAAnwAAAAeAAAAIAEOACFuYW1lAAACnAAAAUIAAAKavFDYrHBvc3QAAAPgAAAAHQAAAC52hGZ4eJxjYGRgYOBiMGCwY2BycfMJYeDLSSzJY5BiYGGAAJA8MpsxJzM9kYEDxgPKsYBpDiBmg4gCACY7BUgAeJxjYGT8wjiBgZWBgamKaQ8DA0MPhGZ8wGDIyAQUZWBlZsAKAtJcUxgcXjG+YmQO+p/FEMUcxDANKMwIkgMADiUMJQB4nGNgYGBlYGBgBmIdIGZhYGAMYWBkAAE/oCgjWJyZgQsszsKgBFbDAhJ/xfj/P4wE8lnAJAMjG8Mo4AGTMlAeOKwgmIERADU0CX0AeJxjYGIAAmYJpkgGHgYRBgZGJT1GEztGIzlGET5GKEuU8YuSpZKSpQuI+LfLv21emz9jHJQPJP7dsUywsEiwBACG8g9CAAAAeJxjYGRgYADicIOnh+P5bb4ycDO/AIow3JZ4rIJMM0swRQIpDgYmEA8AKwgJOwAAeJxjYGRgYA76nwUkXzAAAbMEAyMDKmACAE2GAskAAAAAAAAAA+gAAAAAAAAAJgAAeJxjYGRgYGBiEAViBjCLgYELCBkY/oP5DAAKuwEwAAB4nI2Qu07DMBSG//SGaCWEhMSAGDx1QU0vYyemdmDrUDEhuamTpkriyHEj9RF4B56Bh2Bg5mmY+8d4Qh3qo9jf+c45thQAt/hGgGYFuHN7s1q4YvbHbdKD5w555LmLAZ499+hfPPfxhDfPA/p33hB0rmmG+PDcwg2+PLfpfzx3yL+eu7gPHj33MAxmnvtYB6+eB/SftZTbtBjJWlppRmmki2qlkkMmzZnKGbVWpkp1Iabh5Ex1qQplpFVbsTmKqk5m1sYiNjoXC11YlWValEbvVWTDnbXlfDyOvQ8jnaOGZGyRouCfky63/AyzFBE0fYUVFBIckLnKZTOXda15s+GZulxgihCTC2eXnC3cfFNV7BfY4Mi9eT3BjNYiZh6zRyMnLdxs050xNE3panuaiD7Ezk2VmGPMiP/1h+71/ATcWYAhAAB4nGNgYoAALgbsgImRiZGZgaW0OLWIgQEACl4B2QAAAA==) format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n  </style>\n`;\n\ndocument.head.appendChild(template.content);\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\n\n/**\n * A mixin providing common avatar functionality.\n *\n * @polymerMixin\n * @mixes FocusMixin\n */\nexport const AvatarMixin = (superClass) =>\n  class AvatarMixinClass extends FocusMixin(superClass) {\n    static get properties() {\n      return {\n        /**\n         * The path to the image\n         */\n        img: {\n          type: String,\n          reflectToAttribute: true,\n          observer: '__imgChanged',\n        },\n\n        /**\n         * A shortened form of name that is displayed\n         * in the avatar when `img` is not provided.\n         */\n        abbr: {\n          type: String,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * Full name of the user\n         * used for the tooltip of the avatar.\n         */\n        name: {\n          type: String,\n          reflectToAttribute: true,\n        },\n\n        /**\n         * Color index used for avatar background.\n         * @attr {number} color-index\n         */\n        colorIndex: {\n          type: Number,\n          observer: '__colorIndexChanged',\n        },\n\n        /**\n         * The object used to localize this component.\n         * To change the default localization, replace the entire\n         * _i18n_ object or just the property you want to modify.\n         *\n         * The object has the following JSON structure and default values:\n         *\n         * ```\n         * {\n         *   // Translation of the anonymous user avatar tooltip.\n         *   anonymous: 'anonymous'\n         * }\n         * ```\n         *\n         * @type {!AvatarI18n}\n         * @default {English/US}\n         */\n        i18n: {\n          type: Object,\n          value: () => {\n            return {\n              anonymous: 'anonymous',\n            };\n          },\n        },\n\n        /**\n         * When true, the avatar has tooltip shown on hover and focus.\n         * The tooltip text is based on the `name` and `abbr` properties.\n         * When neither is provided, `i18n.anonymous` is used instead.\n         * @attr {boolean} with-tooltip\n         */\n        withTooltip: {\n          type: Boolean,\n          value: false,\n          observer: '__withTooltipChanged',\n        },\n\n        /** @protected */\n        __imgVisible: Boolean,\n\n        /** @protected */\n        __iconVisible: Boolean,\n\n        /** @protected */\n        __abbrVisible: Boolean,\n\n        /** @private */\n        __tooltipNode: Object,\n      };\n    }\n\n    static get observers() {\n      return [\n        '__imgOrAbbrOrNameChanged(img, abbr, name)',\n        '__i18nChanged(i18n)',\n        '__tooltipChanged(__tooltipNode, name, abbr)',\n      ];\n    }\n\n    /** @protected */\n    ready() {\n      super.ready();\n\n      this.__updateVisibility();\n\n      // By default, if the user hasn't provided a custom role,\n      // the role attribute is set to \"button\".\n      if (!this.hasAttribute('role')) {\n        this.setAttribute('role', 'button');\n      }\n\n      if (!this.hasAttribute('tabindex')) {\n        this.setAttribute('tabindex', '0');\n      }\n\n      // Should set `anonymous` if name / abbr is not provided\n      if (!this.name && !this.abbr) {\n        this.__setTooltip();\n      }\n    }\n\n    /** @private */\n    __colorIndexChanged(index) {\n      if (index != null) {\n        const prop = `--vaadin-user-color-${index}`;\n\n        // Check if custom CSS property is defined\n        const isValid = Boolean(getComputedStyle(document.documentElement).getPropertyValue(prop));\n\n        if (isValid) {\n          this.setAttribute('has-color-index', '');\n          this.style.setProperty('--vaadin-avatar-user-color', `var(${prop})`);\n        } else {\n          this.removeAttribute('has-color-index');\n          console.warn(`The CSS property --vaadin-user-color-${index} is not defined`);\n        }\n      } else {\n        this.removeAttribute('has-color-index');\n      }\n    }\n\n    /** @private */\n    __imgChanged() {\n      this.__imgFailedToLoad = false;\n    }\n\n    /** @private */\n    __imgOrAbbrOrNameChanged(img, abbr, name) {\n      this.__updateVisibility();\n\n      if (abbr && abbr !== this.__generatedAbbr) {\n        return;\n      }\n\n      if (name) {\n        this.abbr = this.__generatedAbbr = name\n          .split(' ')\n          .map((word) => word.charAt(0))\n          .join('');\n      } else {\n        this.abbr = undefined;\n      }\n    }\n\n    /** @private */\n    __tooltipChanged(tooltipNode, name, abbr) {\n      if (tooltipNode) {\n        if (abbr && abbr !== this.__generatedAbbr) {\n          this.__setTooltip(name ? `${name} (${abbr})` : abbr);\n        } else {\n          this.__setTooltip(name);\n        }\n      }\n    }\n\n    /** @private */\n    __withTooltipChanged(withTooltip, oldWithTooltip) {\n      if (withTooltip) {\n        // Create and attach tooltip\n        const tooltipNode = document.createElement('vaadin-tooltip');\n        tooltipNode.setAttribute('slot', 'tooltip');\n        this.appendChild(tooltipNode);\n        this.__tooltipNode = tooltipNode;\n      } else if (oldWithTooltip) {\n        // Cleanup and detach tooltip\n        this.__tooltipNode.target = null;\n        this.__tooltipNode.remove();\n        this.__tooltipNode = null;\n      }\n    }\n\n    /** @private */\n    __i18nChanged(i18n) {\n      if (i18n && i18n.anonymous) {\n        if (this.__oldAnonymous && this.__tooltipNode && this.__tooltipNode.text === this.__oldAnonymous) {\n          this.__setTooltip();\n        }\n\n        this.__oldAnonymous = i18n.anonymous;\n      }\n    }\n\n    /** @private */\n    __updateVisibility() {\n      this.__imgVisible = !!this.img && !this.__imgFailedToLoad;\n      this.__abbrVisible = !this.__imgVisible && !!this.abbr;\n      this.__iconVisible = !this.__imgVisible && !this.abbr;\n    }\n\n    /** @private */\n    __setTooltip(tooltip) {\n      const tooltipNode = this.__tooltipNode;\n      if (tooltipNode) {\n        tooltipNode.text = tooltip || this.i18n.anonymous;\n      }\n    }\n\n    /** @protected */\n    __onImageLoadError() {\n      if (this.img) {\n        console.warn(`<vaadin-avatar> The specified image could not be loaded: ${this.img}`);\n        this.__imgFailedToLoad = true;\n        this.__updateVisibility();\n      }\n    }\n  };\n", "/**\n * @license\n * Copyright (c) 2017 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { css } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\nexport const avatarStyles = css`\n  :host {\n    display: inline-block;\n    flex: none;\n    border-radius: 50%;\n    overflow: hidden;\n    height: var(--vaadin-avatar-size, 64px);\n    width: var(--vaadin-avatar-size, 64px);\n    border: var(--vaadin-avatar-outline-width) solid transparent;\n    margin: calc(var(--vaadin-avatar-outline-width) * -1);\n    background-clip: content-box;\n    --vaadin-avatar-outline-width: 2px;\n  }\n\n  img {\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n  }\n\n  [part='icon'] {\n    font-size: 5.6em;\n  }\n\n  [part='abbr'] {\n    font-size: 2.2em;\n  }\n\n  [part='icon'] > text {\n    font-family: 'vaadin-avatar-icons';\n  }\n\n  :host([hidden]) {\n    display: none !important;\n  }\n\n  svg[hidden] {\n    display: none !important;\n  }\n\n  :host([has-color-index]) {\n    position: relative;\n    background-color: var(--vaadin-avatar-user-color);\n  }\n\n  :host([has-color-index])::before {\n    position: absolute;\n    content: '';\n    inset: 0;\n    border-radius: inherit;\n    box-shadow: inset 0 0 0 2px var(--vaadin-avatar-user-color);\n  }\n`;\n", "/**\n * @license\n * Copyright (c) 2020 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport './vaadin-avatar-icons.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { TooltipController } from '@vaadin/component-base/src/tooltip-controller.js';\nimport { registerStyles, ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { AvatarMixin } from './vaadin-avatar-mixin.js';\nimport { avatarStyles } from './vaadin-avatar-styles.js';\n\nregisterStyles('vaadin-avatar', avatarStyles, { moduleId: 'vaadin-avatar-styles' });\n\n/**\n * `<vaadin-avatar>` is a Web Component providing avatar displaying functionality.\n *\n * ```html\n * <vaadin-avatar img=\"avatars/avatar-1.jpg\"></vaadin-avatar>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name | Description\n * --------- | ---------------\n * `abbr`    | The abbreviation element\n * `icon`    | The icon element\n *\n * The following state attributes are available for styling:\n *\n * Attribute         | Description\n * ------------------|-------------\n * `focus-ring`      | Set when the avatar is focused using the keyboard.\n * `focused`         | Set when the avatar is focused.\n * `has-color-index` | Set when the avatar has `colorIndex` and the corresponding custom CSS property exists.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes AvatarMixin\n * @mixes ControllerMixin\n * @mixes ElementMixin\n * @mixes ThemableMixin\n */\nclass Avatar extends AvatarMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\n  static get template() {\n    return html`\n      <img hidden$=\"[[!__imgVisible]]\" src$=\"[[img]]\" aria-hidden=\"true\" on-error=\"__onImageLoadError\" />\n      <svg\n        part=\"icon\"\n        hidden$=\"[[!__iconVisible]]\"\n        id=\"avatar-icon\"\n        viewBox=\"-50 -50 100 100\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        aria-hidden=\"true\"\n      >\n        <text dy=\".35em\" text-anchor=\"middle\">&#xea01;</text>\n      </svg>\n      <svg\n        part=\"abbr\"\n        hidden$=\"[[!__abbrVisible]]\"\n        id=\"avatar-abbr\"\n        viewBox=\"-50 -50 100 100\"\n        preserveAspectRatio=\"xMidYMid meet\"\n        aria-hidden=\"true\"\n      >\n        <text dy=\".35em\" text-anchor=\"middle\">[[abbr]]</text>\n      </svg>\n\n      <slot name=\"tooltip\"></slot>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-avatar';\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._tooltipController = new TooltipController(this);\n    this.addController(this._tooltipController);\n  }\n}\n\ndefineCustomElement(Avatar);\n\nexport { Avatar };\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport '@vaadin/avatar/src/vaadin-avatar.js';\nimport { html, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { FocusMixin } from '@vaadin/a11y-base/src/focus-mixin.js';\nimport { ControllerMixin } from '@vaadin/component-base/src/controller-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { SlotController } from '@vaadin/component-base/src/slot-controller.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\n\n/**\n * `<vaadin-message>` is a Web Component for showing a single message with an author, message and time.\n *\n * ```html\n * <vaadin-message time=\"2021-01-28 10:43\"\n *     user-name = \"Bob Ross\"\n *     user-abbr = \"BR\"\n *     user-img = \"/static/img/avatar.jpg\">There is no real ending. It's just the place where you stop the story.</vaadin-message>\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------|----------------\n * `name`    | Author's name\n * `time`    | When the message was posted\n * `content` | The message itself as a slotted content\n *\n * The following state attributes are available for styling:\n *\n * Attribute    | Description\n * -------------|-------------\n * `focus-ring` | Set when the message is focused using the keyboard.\n * `focused`    | Set when the message is focused.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ControllerMixin\n * @mixes FocusMixin\n * @mixes ThemableMixin\n * @mixes ElementMixin\n */\nclass Message extends FocusMixin(ElementMixin(ThemableMixin(ControllerMixin(PolymerElement)))) {\n  static get properties() {\n    return {\n      /**\n       * Time of sending the message. It is rendered as-is to the part='time' slot,\n       * so the formatting is up to you.\n       */\n      time: {\n        type: String,\n      },\n\n      /**\n       * The name of the user posting the message.\n       * It will be placed in the name part to indicate who has sent the message.\n       * It is also used as a tooltip for the avatar.\n       * Example: `message.userName = \"Jessica Jacobs\";`\n       * @attr {string} user-name\n       */\n      userName: {\n        type: String,\n      },\n\n      /**\n       * The abbreviation of the user.\n       * The abbreviation will be passed on to avatar of the message.\n       * If the user does not have an avatar picture set with `userImg`, `userAbbr` will be shown in the avatar.\n       * Example: `message.userAbbr = \"JJ\";`\n       * @attr {string} user-abbr\n       */\n      userAbbr: {\n        type: String,\n      },\n\n      /**\n       * An URL for a user image.\n       * The image will be used in the avatar component to show who has sent the message.\n       * Example: `message.userImg = \"/static/img/avatar.jpg\";`\n       * @attr {string} user-img\n       */\n      userImg: {\n        type: String,\n      },\n\n      /**\n       * A color index to be used to render the color of the avatar.\n       * With no `userColorIndex` set, the basic avatar color will be used.\n       * By setting a userColorIndex, the component will check if there exists a CSS variable defining the color, and uses it if there is one.\n       * If now CSS variable is found for the color index, the property for the color will not be set.\n       *\n       * Example:\n       * CSS:\n       * ```css\n       * html {\n       *   --vaadin-user-color-1: red;\n       * }\n       * ```\n       *\n       * JavaScript:\n       * ```js\n       * message.userColorIndex = 1;\n       * ```\n       * @attr {number} user-color-index\n       */\n      userColorIndex: {\n        type: Number,\n      },\n\n      /** @private */\n      _avatar: {\n        ttype: Object,\n      },\n    };\n  }\n\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: flex;\n          flex-direction: row;\n          outline: none;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n\n        [part='content'] {\n          display: flex;\n          flex-direction: column;\n          flex-grow: 1;\n        }\n\n        [part='header'] {\n          align-items: baseline;\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n        }\n\n        [part='name'] {\n          font-weight: 500;\n        }\n\n        [part='message'] {\n          white-space: pre-wrap;\n        }\n\n        ::slotted([slot='avatar']) {\n          --vaadin-avatar-outline-width: 0px;\n          flex-shrink: 0;\n        }\n      </style>\n      <slot name=\"avatar\"></slot>\n      <div part=\"content\">\n        <div part=\"header\">\n          <span part=\"name\">[[userName]]</span>\n          <span part=\"time\">[[time]]</span>\n        </div>\n        <div part=\"message\"><slot></slot></div>\n      </div>\n    `;\n  }\n\n  static get is() {\n    return 'vaadin-message';\n  }\n\n  static get observers() {\n    return ['__avatarChanged(_avatar, userName, userAbbr, userImg, userColorIndex)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    this._avatarController = new SlotController(this, 'avatar', 'vaadin-avatar', {\n      initializer: (avatar) => {\n        avatar.setAttribute('tabindex', '-1');\n        avatar.setAttribute('aria-hidden', 'true');\n        this._avatar = avatar;\n      },\n    });\n    this.addController(this._avatarController);\n  }\n\n  /** @private */\n  __avatarChanged(avatar, userName, userAbbr, userImg, userColorIndex) {\n    if (avatar) {\n      avatar.setProperties({\n        name: userName,\n        abbr: userAbbr,\n        img: userImg,\n        colorIndex: userColorIndex,\n      });\n    }\n  }\n}\n\ndefineCustomElement(Message);\n\nexport { Message };\n", "/**\n * @license\n * Copyright (c) 2021 - 2023 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\nimport { html as legacyHtml, PolymerElement } from '@polymer/polymer/polymer-element.js';\nimport { html, render } from 'lit';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport { KeyboardDirectionMixin } from '@vaadin/a11y-base/src/keyboard-direction-mixin.js';\nimport { defineCustomElement } from '@vaadin/component-base/src/define.js';\nimport { ElementMixin } from '@vaadin/component-base/src/element-mixin.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { Message } from './vaadin-message.js';\n\n/**\n * `<vaadin-message-list>` is a Web Component for showing an ordered list of messages. The messages are rendered as <vaadin-message>\n *\n * ### Example\n *\n * To create a new message list, add the component to the page:\n *\n * ```html\n * <vaadin-message-list></vaadin-message-list>\n * ```\n *\n * Provide the messages to the message list with the [`items`](#/elements/vaadin-message-list#property-items) property.\n *\n * ```js\n * document.querySelector('vaadin-message-list').items = [\n *   { text: 'Hello list', time: 'yesterday', userName: 'Matt Mambo', userAbbr: 'MM', userColorIndex: 1 },\n *   { text: 'Another message', time: 'right now', userName: 'Linsey Listy', userAbbr: 'LL', userColorIndex: 2, userImg: '/static/img/avatar.jpg' }\n * ];\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name | Description\n * ----------|----------------\n * `list`    | The container wrapping messages.\n *\n * See the [`<vaadin-message>`](#/elements/vaadin-message) documentation for the available\n * state attributes and stylable shadow parts of message elements.\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/styling-components) documentation.\n *\n * @customElement\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes ElementMixin\n * @mixes KeyboardDirectionMixin\n */\nclass MessageList extends KeyboardDirectionMixin(ElementMixin(ThemableMixin(PolymerElement))) {\n  static get is() {\n    return 'vaadin-message-list';\n  }\n\n  static get properties() {\n    return {\n      /**\n       * An array of objects which will be rendered as messages.\n       * The message objects can have the following properties:\n       * ```js\n       * Array<{\n       *   text: string,\n       *   time: string,\n       *   userName: string,\n       *   userAbbr: string,\n       *   userImg: string,\n       *   userColorIndex: number,\n       *   theme: string\n       * }>\n       * ```\n       */\n      items: {\n        type: Array,\n        value: () => [],\n        observer: '_itemsChanged',\n      },\n    };\n  }\n\n  static get template() {\n    return legacyHtml`\n      <style>\n        :host {\n          display: block;\n          overflow: auto;\n        }\n\n        :host([hidden]) {\n          display: none !important;\n        }\n      </style>\n      <div part=\"list\" role=\"list\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  /** @protected */\n  get _messages() {\n    return [...this.querySelectorAll('vaadin-message')];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // Make screen readers announce new messages\n    this.setAttribute('aria-relevant', 'additions');\n    this.setAttribute('role', 'log');\n  }\n\n  /**\n   * Override method inherited from `KeyboardDirectionMixin`\n   * to use the list of message elements as items.\n   *\n   * @return {Element[]}\n   * @protected\n   * @override\n   */\n  _getItems() {\n    return this._messages;\n  }\n\n  /** @private */\n  _itemsChanged(newVal, oldVal) {\n    const items = newVal || [];\n    const oldItems = oldVal || [];\n\n    if (items.length || oldItems.length) {\n      const focusedIndex = this._getIndexOfFocusableElement();\n      const closeToBottom = this.scrollHeight < this.clientHeight + this.scrollTop + 50;\n\n      this._renderMessages(items);\n      this._setTabIndexesByIndex(focusedIndex);\n\n      requestAnimationFrame(() => {\n        if (items.length > oldItems.length && closeToBottom) {\n          this._scrollToLastMessage();\n        }\n      });\n    }\n  }\n\n  /** @private */\n  _renderMessages(items) {\n    render(\n      html`\n        ${items.map(\n          (item) =>\n            html`\n              <vaadin-message\n                role=\"listitem\"\n                .time=\"${item.time}\"\n                .userAbbr=\"${item.userAbbr}\"\n                .userName=\"${item.userName}\"\n                .userImg=\"${item.userImg}\"\n                .userColorIndex=\"${item.userColorIndex}\"\n                theme=\"${ifDefined(item.theme)}\"\n                @focusin=\"${this._onMessageFocusIn}\"\n                >${item.text}</vaadin-message\n              >\n            `,\n        )}\n      `,\n      this,\n      { host: this },\n    );\n  }\n\n  /** @private */\n  _scrollToLastMessage() {\n    if (this.items.length > 0) {\n      this.scrollTop = this.scrollHeight - this.clientHeight;\n    }\n  }\n\n  /** @private */\n  _onMessageFocusIn(e) {\n    const target = e.composedPath().find((node) => node instanceof Message);\n    this._setTabIndexesByMessage(target);\n  }\n\n  /**\n   * @param {number} idx\n   * @protected\n   */\n  _setTabIndexesByIndex(index) {\n    const message = this._messages[index] || this._messages[0];\n    this._setTabIndexesByMessage(message);\n  }\n\n  /** @private */\n  _setTabIndexesByMessage(message) {\n    this._messages.forEach((e) => {\n      e.tabIndex = e === message ? 0 : -1;\n    });\n  }\n\n  /** @private */\n  _getIndexOfFocusableElement() {\n    const index = this._messages.findIndex((e) => e.tabIndex === 0);\n    return index !== -1 ? index : 0;\n  }\n}\n\ndefineCustomElement(MessageList);\n\nexport { MessageList };\n", "export * from \"@vaadin/message-list/vaadin-message-list.js\";\nexport * from './generated/MessageList.js';\n", "import type {} from \"@lit-labs/react\";\nimport { MessageList as MessageListElement, } from \"@vaadin/message-list/vaadin-message-list.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { MessageListElement, };\nexport type MessageListEventMap = Readonly<{}>;\nconst events = {} as MessageListEventMap;\nexport type MessageListProps = WebComponentProps<MessageListElement, MessageListEventMap>;\nexport const MessageList = createComponent({\n    elementClass: MessageListElement, events, react: React, tagName: \"vaadin-message-list\"\n});\n"],
  "mappings": "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",
  "names": ["html", "html", "html", "events", "MessageList", "createComponent", "MessageListElement", "React"]
}
