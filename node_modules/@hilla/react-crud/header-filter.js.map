{
  "version": 3,
  "sources": ["src/header-filter.tsx"],
  "sourcesContent": ["import { DatePicker, DatePickerElement, type DatePickerI18n } from '@hilla/react-components/DatePicker.js';\nimport { Item } from '@hilla/react-components/Item.js';\nimport { ListBox } from '@hilla/react-components/ListBox.js';\nimport { NumberField } from '@hilla/react-components/NumberField.js';\nimport { Select, type SelectElement } from '@hilla/react-components/Select.js';\nimport { TextField, type TextFieldElement } from '@hilla/react-components/TextField.js';\nimport { TimePicker } from '@hilla/react-components/TimePicker.js';\nimport { useContext, useEffect, useRef, useState, type ReactElement, type RefObject } from 'react';\nimport { ColumnContext } from './autogrid-column-context.js';\nimport { DateFormatter } from './date-formatter';\nimport { defaultLocale } from './i18n.js';\nimport Matcher from './types/dev/hilla/crud/filter/PropertyStringFilter/Matcher.js';\n\n// TODO: Replace with more robust solution\nconst autoGridFilterWithLessGreaterEqualsStyle = document.createElement('style');\nautoGridFilterWithLessGreaterEqualsStyle.id = 'autoGridFilterWithLessGreaterEquals';\nautoGridFilterWithLessGreaterEqualsStyle.textContent = `\n.${autoGridFilterWithLessGreaterEqualsStyle.id} {\n  --vaadin-field-default-width: 2em;\n  margin-right: 3px;\n}\n.${autoGridFilterWithLessGreaterEqualsStyle.id} > vaadin-select-value-button {\n  --_lumo-text-field-overflow-mask-image: none !important;\n}\n\n.${autoGridFilterWithLessGreaterEqualsStyle.id}::part(toggle-button) {\n  display: none;\n}`;\ndocument.head.appendChild(autoGridFilterWithLessGreaterEqualsStyle);\n\n// Create date picker I18N config based on the current browser locale\nconst dateFormatter = new DateFormatter(defaultLocale);\n\nconst datePickerI18n: DatePickerI18n = {\n  ...new DatePickerElement().i18n,\n  formatDate: (date) => dateFormatter.format(date),\n  parseDate: (text) => dateFormatter.parse(text) ?? undefined,\n};\n\nfunction useFilterState(initialMatcher: Matcher) {\n  const context = useContext(ColumnContext)!;\n  const [matcher, setMatcher] = useState(initialMatcher);\n  const [filterValue, setFilterValue] = useState('');\n\n  function updateFilter(newMatcher: Matcher, newFilterValue: string) {\n    setFilterValue(newFilterValue);\n    setMatcher(newMatcher);\n\n    const filter = {\n      propertyId: context.propertyInfo.name,\n      filterValue: newFilterValue,\n      matcher: newMatcher,\n    };\n    // eslint-disable-next-line\n    (filter as any).t = 'propertyString';\n    context.setPropertyFilter(filter);\n  }\n\n  return { matcher, filterValue, updateFilter };\n}\n\n// Workaround for https://github.com/vaadin/react-components/issues/148\nfunction useSelectInitWorkaround(selectRef: RefObject<SelectElement>) {\n  useEffect(() => {\n    setTimeout(() => {\n      if (selectRef.current) {\n        selectRef.current.requestContentUpdate();\n      }\n    }, 1);\n  }, []);\n}\n\n// extracted component (and type) to avoid code duplication\ntype ComparationSelectionProps = {\n  value: Matcher;\n  onMatcherChanged(matcher: Matcher): void;\n};\n\nfunction ComparationSelection({ onMatcherChanged, value }: ComparationSelectionProps): ReactElement {\n  const select = useRef<SelectElement>(null);\n\n  useSelectInitWorkaround(select);\n\n  return (\n    <Select\n      ref={select}\n      value={value}\n      onValueChanged={({ detail }) => {\n        onMatcherChanged(detail.value as Matcher);\n      }}\n      renderer={() => (\n        <ListBox>\n          <Item value={Matcher.GREATER_THAN} {...{ label: '>' }}>\n            &gt; Greater than\n          </Item>\n          <Item value={Matcher.LESS_THAN} {...{ label: '<' }}>\n            &lt; Less than\n          </Item>\n          <Item value={Matcher.EQUALS} {...{ label: '=' }}>\n            = Equals\n          </Item>\n        </ListBox>\n      )}\n      className={autoGridFilterWithLessGreaterEqualsStyle.id}\n    ></Select>\n  );\n}\n\nexport function StringHeaderFilter(): ReactElement {\n  const { updateFilter } = useFilterState(Matcher.CONTAINS);\n\n  return (\n    <TextField\n      placeholder=\"Filter...\"\n      onInput={(e: any) => {\n        const fieldValue = ((e as InputEvent).target as TextFieldElement).value;\n        updateFilter(Matcher.CONTAINS, fieldValue);\n      }}\n    ></TextField>\n  );\n}\n\nexport function NumberHeaderFilter(): ReactElement {\n  const { matcher, filterValue, updateFilter } = useFilterState(Matcher.GREATER_THAN);\n  const select = useRef<SelectElement>(null);\n\n  useSelectInitWorkaround(select);\n\n  return (\n    <>\n      <ComparationSelection value={matcher} onMatcherChanged={(m) => updateFilter(m, filterValue)} />\n      <NumberField\n        placeholder=\"Filter...\"\n        onInput={(e) => {\n          const fieldValue = ((e as InputEvent).target as TextFieldElement).value;\n          updateFilter(matcher, fieldValue);\n        }}\n      />\n    </>\n  );\n}\n\nexport function BooleanHeaderFilter(): ReactElement {\n  const { filterValue, updateFilter } = useFilterState(Matcher.EQUALS);\n  const select = useRef<SelectElement>(null);\n\n  useSelectInitWorkaround(select);\n\n  return (\n    <Select\n      ref={select}\n      onValueChanged={(e) => {\n        const newFilterValue = e.detail.value;\n        updateFilter(Matcher.EQUALS, newFilterValue);\n      }}\n      renderer={() => (\n        <ListBox>\n          <Item value={''} {...{ label: '' }}></Item>\n          <Item value={'True'} {...{ label: 'Yes' }}>\n            Yes\n          </Item>\n          <Item value={'False'} {...{ label: 'No' }}>\n            No\n          </Item>\n        </ListBox>\n      )}\n      value={filterValue}\n    ></Select>\n  );\n}\n\nexport function DateHeaderFilter(): ReactElement {\n  const { matcher, filterValue, updateFilter } = useFilterState(Matcher.GREATER_THAN);\n  const [invalid, setInvalid] = useState(false);\n\n  return (\n    <>\n      <ComparationSelection value={matcher} onMatcherChanged={(m) => updateFilter(m, filterValue)} />\n      <DatePicker\n        value={filterValue}\n        placeholder=\"Filter...\"\n        i18n={datePickerI18n}\n        onInvalidChanged={({ detail: { value } }) => {\n          setInvalid(value);\n        }}\n        onValueChanged={({ detail: { value } }) => {\n          if (!(invalid || value === filterValue)) {\n            updateFilter(matcher, value);\n          }\n        }}\n      />\n    </>\n  );\n}\n\nexport function TimeHeaderFilter(): ReactElement {\n  const { matcher, filterValue, updateFilter } = useFilterState(Matcher.GREATER_THAN);\n  const [invalid, setInvalid] = useState(false);\n\n  return (\n    <>\n      <ComparationSelection value={matcher} onMatcherChanged={(m) => updateFilter(m, filterValue)} />\n      <TimePicker\n        value={filterValue}\n        placeholder=\"Filter...\"\n        onInvalidChanged={({ detail: { value } }) => {\n          setInvalid(value);\n        }}\n        onValueChanged={({ detail: { value } }) => {\n          if (!(invalid || value === filterValue)) {\n            updateFilter(matcher, value);\n          }\n        }}\n      />\n    </>\n  );\n}\n\nexport function NoHeaderFilter(): ReactElement {\n  return <></>;\n}\n"],
  "mappings": "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",
  "names": ["Fragment", "jsx", "jsxs", "DatePicker", "DatePickerElement", "Item", "ListBox", "NumberField", "Select", "TextField", "TimePicker", "useContext", "useEffect", "useRef", "useState", "ColumnContext", "DateFormatter", "defaultLocale", "Matcher", "autoGridFilterWithLessGreaterEqualsStyle", "dateFormatter", "datePickerI18n", "date", "text", "useFilterState", "initialMatcher", "context", "matcher", "setMatcher", "filterValue", "setFilterValue", "updateFilter", "newMatcher", "newFilterValue", "filter", "useSelectInitWorkaround", "selectRef", "ComparationSelection", "onMatcherChanged", "value", "select", "detail", "StringHeaderFilter", "e", "fieldValue", "NumberHeaderFilter", "m", "BooleanHeaderFilter", "DateHeaderFilter", "invalid", "setInvalid", "TimeHeaderFilter", "NoHeaderFilter"]
}
