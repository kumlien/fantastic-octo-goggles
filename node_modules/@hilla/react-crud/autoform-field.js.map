{
  "version": 3,
  "sources": ["src/autoform-field.tsx"],
  "sourcesContent": ["import { TextField, type TextFieldProps } from '@hilla/react-components/TextField.js';\nimport type { UseFormResult } from '@hilla/react-form';\nimport type { JSX } from 'react';\nimport type { PropertyInfo } from './property-info.js';\n\ntype AutoFormFieldProps = Omit<TextFieldProps, 'dangerouslySetInnerHTML' | 'disabled' | 'label'> &\n  Readonly<{\n    propertyInfo: PropertyInfo;\n    form: UseFormResult<any>;\n    disabled?: boolean;\n  }>;\n\nexport function AutoFormField({ propertyInfo, form, disabled, ...other }: AutoFormFieldProps): JSX.Element {\n  if (propertyInfo.type === 'string' || propertyInfo.type === 'number') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const model = form.model[propertyInfo.name];\n    return <TextField disabled={disabled} {...other} {...form.field(model)} label={propertyInfo.humanReadableName} />;\n  }\n  return <></>;\n}\n"],
  "mappings": "AAgBW,OAEF,YAAAA,EAFE,OAAAC,MAAA,oBAhBX,OAAS,aAAAC,MAAsC,uCAYxC,SAASC,EAAc,CAAE,aAAAC,EAAc,KAAAC,EAAM,SAAAC,EAAU,GAAGC,CAAM,EAAoC,CACzG,GAAIH,EAAa,OAAS,UAAYA,EAAa,OAAS,SAAU,CAEpE,MAAMI,EAAQH,EAAK,MAAMD,EAAa,IAAI,EAC1C,OAAOH,EAACC,EAAA,CAAU,SAAUI,EAAW,GAAGC,EAAQ,GAAGF,EAAK,MAAMG,CAAK,EAAG,MAAOJ,EAAa,kBAAmB,CACjH,CACA,OAAOH,EAAAD,EAAA,EAAE,CACX",
  "names": ["Fragment", "jsx", "TextField", "AutoFormField", "propertyInfo", "form", "disabled", "other", "model"]
}
