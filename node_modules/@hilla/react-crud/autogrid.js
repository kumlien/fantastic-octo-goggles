import{jsx as u}from"react/jsx-runtime";import{Grid as O}from"@hilla/react-components/Grid.js";import{GridColumn as C}from"@hilla/react-components/GridColumn.js";import{GridColumnGroup as D}from"@hilla/react-components/GridColumnGroup.js";import{useEffect as G,useRef as v,useState as b}from"react";import{ColumnContext as R}from"./autogrid-column-context.js";import{getColumnOptions as E}from"./autogrid-columns.js";import{AutoGridRowNumberRenderer as w}from"./autogrid-renderers.js";import{HeaderSorter as g}from"./header-sorter";import{getIdProperty as M,getProperties as j,includeProperty as x}from"./property-info.js";import T from"./types/org/springframework/data/domain/Sort/Direction.js";function z(s,a,r){let c=!0;return async(o,p)=>{const f={orders:o.sortOrders.filter(i=>i.direction!=null).map(i=>({property:i.path,direction:i.direction==="asc"?T.ASC:T.DESC,ignoreCase:!1}))},n=o.page,{pageSize:e}=o,d={pageNumber:n,pageSize:e,sort:f},t=await a.list(d,r.current);let l;if(t.length===e){l=(n+1)*e+1;const i=s._cache.size;i!==void 0&&l<i&&(l=void 0)}else l=n*e+t.length;p(t,l),c&&(c=!1,setTimeout(()=>s.recalculateColumnWidths(),0))}}function N(s,a,r){const o=(r.visibleColumns??s.filter(x).map(e=>e.name)).map(e=>s.find(d=>d.name===e)).filter(Boolean),[p,f]=b(o.length>0?{[o[0].name]:{direction:"asc"}}:{});let n=o.map(e=>{let d;const t=r.columnOptions?r.columnOptions[e.name]:void 0,{headerRenderer:l,...i}=E(e,t);return r.noHeaderFilters?d=u(C,{path:e.name,headerRenderer:g,...i}):d=u(D,{headerRenderer:g,children:u(C,{path:e.name,headerRenderer:l,...i})}),u(R.Provider,{value:{propertyInfo:e,setPropertyFilter:a,sortState:p,setSortState:f,customColumnOptions:t},children:d},e.name)});return r.customColumns&&(n=[...n,...r.customColumns]),r.rowNumbers&&(n=[u(C,{width:"4em",renderer:w},"rownumbers"),...n]),n}function K({service:s,model:a,experimentalFilter:r,visibleColumns:c,noHeaderFilters:o,refreshTrigger:p=0,customColumns:f,columnOptions:n,rowNumbers:e,...d}){const[t,l]=b({t:"and",children:[]}),i=m=>{const h=t.children.findIndex(A=>A.propertyId===m.propertyId);let y=!1;m.filterValue===""?h>=0&&(t.children.splice(h,1),y=!0):h>=0?(t.children[h]=m,y=!0):(t.children.push(m),y=!0),y&&l({...t})},I=j(a),F=N(I,i,{visibleColumns:c,noHeaderFilters:o,customColumns:f,columnOptions:n,rowNumbers:e});G(()=>{o&&l({t:"and",children:[]})},[o]);const P=v(null),S=v(void 0);return G(()=>{const m=P.current;setTimeout(()=>{m.dataProvider=z(m,s,S)},1)},[a,s]),G(()=>{const m=P.current;m&&(S.current=r??t,m.clearCache())},[r,t,p]),u(O,{itemIdPath:M(I)?.name,...d,ref:P,children:F})}export{K as AutoGrid};
//# sourceMappingURL=autogrid.js.map
