import { type AbstractModel, type DetachedModelConstructor } from '@hilla/form';
import { type JSX } from 'react';
import type { CrudService } from './crud.js';
export declare const defaultItem: unique symbol;
type SubmitErrorEvent = {
    error: unknown;
};
type SubmitEvent<TItem> = {
    item: TItem;
};
export type AutoFormProps<TItem> = Readonly<{
    service: CrudService<TItem>;
    model: DetachedModelConstructor<AbstractModel<TItem>>;
    item?: TItem | typeof defaultItem;
    disabled?: boolean;
    onSubmitError?({ error }: SubmitErrorEvent): void;
    afterSubmit?({ item }: SubmitEvent<TItem>): void;
}>;
export declare function ExperimentalAutoForm<TItem>({ service, model, item, onSubmitError, afterSubmit, disabled, }: AutoFormProps<TItem>): JSX.Element;
export {};
//# sourceMappingURL=autoform.d.ts.map