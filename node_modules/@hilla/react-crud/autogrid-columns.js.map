{
  "version": 3,
  "sources": ["src/autogrid-columns.tsx"],
  "sourcesContent": ["import type { GridColumnElement, GridColumnProps } from '@hilla/react-components/GridColumn.js';\nimport {\n  AutoGridBooleanRenderer,\n  AutoGridDateRenderer,\n  AutoGridDateTimeRenderer,\n  AutoGridNumberRenderer,\n  AutoGridTimeRenderer,\n} from './autogrid-renderers';\nimport {\n  BooleanHeaderFilter,\n  DateHeaderFilter,\n  NoHeaderFilter,\n  NumberHeaderFilter,\n  StringHeaderFilter,\n  TimeHeaderFilter,\n} from './header-filter';\nimport type { PropertyInfo } from './property-info';\n\nexport type ColumnOptions = Omit<GridColumnProps<any>, 'dangerouslySetInnerHTML'>;\n\n// eslint-disable-next-line consistent-return\nfunction getTypeColumnOptions(propertyInfo: PropertyInfo): ColumnOptions {\n  // eslint-disable-next-line default-case\n  switch (propertyInfo.type) {\n    case 'number':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridNumberRenderer,\n        headerRenderer: NumberHeaderFilter,\n      };\n    case 'boolean':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridBooleanRenderer,\n        headerRenderer: BooleanHeaderFilter,\n      };\n    case 'date':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridDateRenderer,\n        headerRenderer: DateHeaderFilter,\n      };\n    case 'time':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridTimeRenderer,\n        headerRenderer: TimeHeaderFilter,\n      };\n    case 'datetime':\n      return {\n        autoWidth: true,\n        textAlign: 'end',\n        flexGrow: 0,\n        renderer: AutoGridDateTimeRenderer,\n        headerRenderer: DateHeaderFilter,\n      };\n    case 'string':\n      return {\n        autoWidth: true,\n        headerRenderer: StringHeaderFilter,\n      };\n    case undefined:\n      return {\n        autoWidth: true,\n        headerRenderer: NoHeaderFilter,\n      };\n  }\n}\n\nexport function getColumnOptions(\n  propertyInfo: PropertyInfo,\n  customColumnOptions: ColumnOptions | undefined,\n): ColumnOptions {\n  const typeColumnOptions = getTypeColumnOptions(propertyInfo);\n  const columnOptions = customColumnOptions ? { ...typeColumnOptions, ...customColumnOptions } : typeColumnOptions;\n  if (!columnOptions.headerRenderer) {\n    console.error(`No header renderer defined for column ${propertyInfo.name}`);\n  }\n  return columnOptions;\n}\n"],
  "mappings": "AACA,OACE,2BAAAA,EACA,wBAAAC,EACA,4BAAAC,EACA,0BAAAC,EACA,wBAAAC,MACK,uBACP,OACE,uBAAAC,EACA,oBAAAC,EACA,kBAAAC,EACA,sBAAAC,EACA,sBAAAC,EACA,oBAAAC,MACK,kBAMP,SAASC,EAAqBC,EAA2C,CAEvE,OAAQA,EAAa,KAAM,CACzB,IAAK,SACH,MAAO,CACL,UAAW,GACX,UAAW,MACX,SAAU,EACV,SAAUT,EACV,eAAgBK,CAClB,EACF,IAAK,UACH,MAAO,CACL,UAAW,GACX,UAAW,MACX,SAAU,EACV,SAAUR,EACV,eAAgBK,CAClB,EACF,IAAK,OACH,MAAO,CACL,UAAW,GACX,UAAW,MACX,SAAU,EACV,SAAUJ,EACV,eAAgBK,CAClB,EACF,IAAK,OACH,MAAO,CACL,UAAW,GACX,UAAW,MACX,SAAU,EACV,SAAUF,EACV,eAAgBM,CAClB,EACF,IAAK,WACH,MAAO,CACL,UAAW,GACX,UAAW,MACX,SAAU,EACV,SAAUR,EACV,eAAgBI,CAClB,EACF,IAAK,SACH,MAAO,CACL,UAAW,GACX,eAAgBG,CAClB,EACF,KAAK,OACH,MAAO,CACL,UAAW,GACX,eAAgBF,CAClB,CACJ,CACF,CAEO,SAASM,EACdD,EACAE,EACe,CACf,MAAMC,EAAoBJ,EAAqBC,CAAY,EACrDI,EAAgBF,EAAsB,CAAE,GAAGC,EAAmB,GAAGD,CAAoB,EAAIC,EAC/F,OAAKC,EAAc,gBACjB,QAAQ,MAAM,yCAAyCJ,EAAa,IAAI,EAAE,EAErEI,CACT",
  "names": ["AutoGridBooleanRenderer", "AutoGridDateRenderer", "AutoGridDateTimeRenderer", "AutoGridNumberRenderer", "AutoGridTimeRenderer", "BooleanHeaderFilter", "DateHeaderFilter", "NoHeaderFilter", "NumberHeaderFilter", "StringHeaderFilter", "TimeHeaderFilter", "getTypeColumnOptions", "propertyInfo", "getColumnOptions", "customColumnOptions", "typeColumnOptions", "columnOptions"]
}
