import { type ComponentType, type ReactElement, type RefAttributes } from 'react';
import { type GridProElement, type GridProProps as _GridProProps } from './generated/GridPro.js';
import type { GridRowDetailsReactRendererProps } from './renderers/grid.js';
export * from './generated/GridPro.js';
export type GridProProps<TItem> = Partial<Omit<_GridProProps<TItem>, 'rowDetailsRenderer'>> & Readonly<{
    rowDetailsRenderer?: ComponentType<GridRowDetailsReactRendererProps<TItem>> | null;
}>;
declare const ForwardedGridPro: <TItem = any>(props: Partial<Omit<_GridProProps<TItem>, "rowDetailsRenderer">> & Readonly<{
    rowDetailsRenderer?: ComponentType<Readonly<{
        item: TItem;
        model: import("@vaadin/grid/src/vaadin-grid-mixin.js").GridItemModel<TItem>;
        original: import("@vaadin/grid/src/vaadin-grid.js").Grid<TItem>;
    }>> | null | undefined;
}> & RefAttributes<GridProElement<TItem>>) => ReactElement | null;
export { ForwardedGridPro as GridPro };
//# sourceMappingURL=GridPro.d.ts.map