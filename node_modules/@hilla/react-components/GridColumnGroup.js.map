{
  "version": 3,
  "sources": ["src/GridColumnGroup.tsx", "src/generated/GridColumnGroup.ts"],
  "sourcesContent": ["export * from \"@vaadin/grid/vaadin-grid-column-group.js\";\nimport { forwardRef, type ComponentType, type ForwardedRef, type ReactElement, type RefAttributes } from 'react';\nimport {\n  GridColumnGroup as _GridColumnGroup,\n  type GridColumnGroupElement,\n  type GridColumnGroupProps as _GridColumnGroupProps,\n} from './generated/GridColumnGroup.js';\nimport { useSimpleRenderer, type ReactSimpleRendererProps } from './renderers/useSimpleRenderer.js';\n\nexport * from './generated/GridColumnGroup.js';\n\nexport type GridColumnGroupProps = Partial<Omit<_GridColumnGroupProps, 'footerRenderer' | 'headerRenderer'>> &\n  Readonly<{\n    footerRenderer?: ComponentType<ReactSimpleRendererProps<GridColumnGroupElement>> | null;\n    headerRenderer?: ComponentType<ReactSimpleRendererProps<GridColumnGroupElement>> | null;\n  }>;\n\nfunction GridColumnGroup(props: GridColumnGroupProps, ref: ForwardedRef<GridColumnGroupElement>): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleRenderer(props.headerRenderer);\n  const [footerPortals, footerRenderer] = useSimpleRenderer(props.footerRenderer);\n\n  return (\n    <_GridColumnGroup {...props} footerRenderer={footerRenderer} headerRenderer={headerRenderer} ref={ref}>\n      {headerPortals}\n      {footerPortals}\n      {props.children}\n    </_GridColumnGroup>\n  );\n}\n\nconst ForwardedGridColumnGroup = forwardRef(GridColumnGroup) as (\n  props: GridColumnGroupProps & RefAttributes<GridColumnGroupElement>,\n) => ReactElement | null;\n\nexport { ForwardedGridColumnGroup as GridColumnGroup };\n", "import type {} from \"@lit-labs/react\";\nimport { GridColumnGroup as GridColumnGroupElement, } from \"@vaadin/grid/vaadin-grid-column-group.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridColumnGroupElement, };\nexport type GridColumnGroupEventMap = Readonly<{}>;\nconst events = {} as GridColumnGroupEventMap;\nexport type GridColumnGroupProps = WebComponentProps<GridColumnGroupElement, GridColumnGroupEventMap>;\nexport const GridColumnGroup = createComponent({\n    elementClass: GridColumnGroupElement, events, react: React, tagName: \"vaadin-grid-column-group\"\n});\n"],
  "mappings": "AAAA,WAAc,2CACd,OAAS,cAAAA,MAAgG,QCAzG,OAAS,mBAAmBC,MAA+B,2CAC3D,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAGxD,IAAMC,EAAS,CAAC,EAEHC,EAAkBC,EAAgB,CAC3C,aAAcC,EAAwB,OAAAH,EAAQ,MAAOI,EAAO,QAAS,0BACzE,CAAC,EDHD,OAAS,qBAAAC,MAAwD,mCAe7D,eAAAC,MAAA,oBALJ,SAASC,EAAgBC,EAA6BC,EAAgE,CACpH,GAAM,CAACC,EAAeC,CAAc,EAAIN,EAAkBG,EAAM,cAAc,EACxE,CAACI,EAAeC,CAAc,EAAIR,EAAkBG,EAAM,cAAc,EAE9E,OACEF,EAACC,EAAA,CAAkB,GAAGC,EAAO,eAAgBK,EAAgB,eAAgBF,EAAgB,IAAKF,EAC/F,UAAAC,EACAE,EACAJ,EAAM,UACT,CAEJ,CAEA,IAAMM,EAA2BC,EAAWR,CAAe",
  "names": ["forwardRef", "GridColumnGroupElement", "React", "createComponent", "events", "GridColumnGroup", "createComponent", "GridColumnGroupElement", "React", "useSimpleRenderer", "jsxs", "GridColumnGroup", "props", "ref", "headerPortals", "headerRenderer", "footerPortals", "footerRenderer", "ForwardedGridColumnGroup", "forwardRef"]
}
