{
  "version": 3,
  "sources": ["src/GridSelectionColumn.tsx", "src/generated/GridSelectionColumn.ts"],
  "sourcesContent": ["export * from \"@vaadin/grid/vaadin-grid-selection-column.js\";\nimport { type ComponentType, type ForwardedRef, forwardRef, type ReactElement, type RefAttributes } from 'react';\nimport type { GridDefaultItem } from './generated/Grid.js';\nimport {\n  GridSelectionColumn as _GridSelectionColumn,\n  type GridSelectionColumnElement,\n  type GridSelectionColumnProps as _GridSelectionColumnProps,\n} from './generated/GridSelectionColumn.js';\nimport type { GridBodyReactRendererProps, GridEdgeReactRendererProps } from './renderers/grid.js';\nimport { useModelRenderer } from './renderers/useModelRenderer.js';\nimport { useSimpleRenderer } from './renderers/useSimpleRenderer.js';\n\nexport * from './generated/GridSelectionColumn.js';\n\nexport type GridSelectionColumnProps<TItem> = Partial<\n  Omit<_GridSelectionColumnProps<TItem>, 'children' | 'footerRenderer' | 'headerRenderer' | 'renderer'>\n> &\n  Readonly<{\n    children?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n    footerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    headerRenderer?: ComponentType<GridEdgeReactRendererProps<TItem>> | null;\n    renderer?: ComponentType<GridBodyReactRendererProps<TItem>> | null;\n  }>;\n\nfunction GridSelectionColumn<TItem = GridDefaultItem>(\n  props: GridSelectionColumnProps<TItem>,\n  ref: ForwardedRef<GridSelectionColumnElement<TItem>>,\n): ReactElement | null {\n  const [headerPortals, headerRenderer] = useSimpleRenderer(props.headerRenderer);\n  const [footerPortals, footerRenderer] = useSimpleRenderer(props.footerRenderer);\n  const [bodyPortals, bodyRenderer] = useModelRenderer(props.renderer ?? props.children);\n\n  return (\n    <_GridSelectionColumn<TItem>\n      {...props}\n      footerRenderer={footerRenderer}\n      headerRenderer={headerRenderer}\n      ref={ref}\n      renderer={bodyRenderer}\n    >\n      {headerPortals}\n      {footerPortals}\n      {bodyPortals}\n    </_GridSelectionColumn>\n  );\n}\n\nconst ForwardedGridSelectionColumn = forwardRef(GridSelectionColumn) as <TItem = GridDefaultItem>(\n  props: GridSelectionColumnProps<TItem> & RefAttributes<GridSelectionColumnElement<TItem>>,\n) => ReactElement | null;\n\nexport { ForwardedGridSelectionColumn as GridSelectionColumn };\n", "import type { EventName } from \"@lit-labs/react\";\nimport { GridSelectionColumn as GridSelectionColumnElement, type GridSelectionColumnEventMap as _GridSelectionColumnEventMap, } from \"@vaadin/grid/vaadin-grid-selection-column.js\";\nimport * as React from \"react\";\nimport { createComponent, type WebComponentProps } from \"../utils/createComponent.js\";\nexport { GridSelectionColumnElement, };\nexport type GridSelectionColumnEventMap = Readonly<{\n    onSelectAllChanged: EventName<_GridSelectionColumnEventMap[\"select-all-changed\"]>;\n}>;\nconst events = { onSelectAllChanged: \"select-all-changed\" } as GridSelectionColumnEventMap;\nexport type GridSelectionColumnProps<T1> = WebComponentProps<GridSelectionColumnElement<T1>, GridSelectionColumnEventMap>;\nexport const GridSelectionColumn = createComponent({\n    elementClass: GridSelectionColumnElement, events, react: React, tagName: \"vaadin-grid-selection-column\"\n}) as <T1>(props: GridSelectionColumnProps<T1> & React.RefAttributes<GridSelectionColumnElement<T1>>) => React.ReactElement | null;\n"],
  "mappings": "AAAA,WAAc,+CACd,OAAgD,cAAAA,MAAyD,QCAzG,OAAS,uBAAuBC,MAAqG,+CACrI,UAAYC,MAAW,QACvB,OAAS,mBAAAC,MAA+C,6BAKxD,IAAMC,EAAS,CAAE,mBAAoB,oBAAqB,EAE7CC,EAAsBC,EAAgB,CAC/C,aAAcC,EAA4B,OAAAH,EAAQ,MAAOI,EAAO,QAAS,8BAC7E,CAAC,EDHD,OAAS,oBAAAC,MAAwB,kCACjC,OAAS,qBAAAC,MAAyB,mCAuB9B,eAAAC,MAAA,oBATJ,SAASC,EACPC,EACAC,EACqB,CACrB,GAAM,CAACC,EAAeC,CAAc,EAAIN,EAAkBG,EAAM,cAAc,EACxE,CAACI,EAAeC,CAAc,EAAIR,EAAkBG,EAAM,cAAc,EACxE,CAACM,EAAaC,CAAY,EAAIX,EAAiBI,EAAM,UAAYA,EAAM,QAAQ,EAErF,OACEF,EAACC,EAAA,CACE,GAAGC,EACJ,eAAgBK,EAChB,eAAgBF,EAChB,IAAKF,EACL,SAAUM,EAET,UAAAL,EACAE,EACAE,GACH,CAEJ,CAEA,IAAME,EAA+BC,EAAWV,CAAmB",
  "names": ["forwardRef", "GridSelectionColumnElement", "React", "createComponent", "events", "GridSelectionColumn", "createComponent", "GridSelectionColumnElement", "React", "useModelRenderer", "useSimpleRenderer", "jsxs", "GridSelectionColumn", "props", "ref", "headerPortals", "headerRenderer", "footerPortals", "footerRenderer", "bodyPortals", "bodyRenderer", "ForwardedGridSelectionColumn", "forwardRef"]
}
