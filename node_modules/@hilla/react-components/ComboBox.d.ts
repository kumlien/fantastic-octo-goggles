import { type ComponentType, type ReactElement, type RefAttributes } from 'react';
import { type ComboBoxElement, type ComboBoxProps as _ComboBoxProps } from './generated/ComboBox.js';
import type { ComboBoxReactRendererProps } from './renderers/combobox.js';
export * from './generated/ComboBox.js';
export type ComboBoxProps<TItem> = Partial<Omit<_ComboBoxProps<TItem>, 'renderer'>> & Readonly<{
    renderer?: ComponentType<ComboBoxReactRendererProps<TItem>> | null;
}>;
declare const ForwardedComboBox: <TItem = any>(props: Partial<Omit<_ComboBoxProps<TItem>, "renderer">> & Readonly<{
    renderer?: ComponentType<Readonly<{
        item: TItem;
        model: import("@vaadin/combo-box").ComboBoxItemModel<TItem>;
        original: ComboBoxElement<TItem>;
    }>> | null | undefined;
}> & RefAttributes<ComboBoxElement<TItem>>) => ReactElement | null;
export { ForwardedComboBox as ComboBox };
//# sourceMappingURL=ComboBox.d.ts.map