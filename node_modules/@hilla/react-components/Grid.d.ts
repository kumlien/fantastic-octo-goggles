import { type ComponentType, type ReactElement, type RefAttributes } from 'react';
import { type GridElement, type GridProps as _GridProps } from './generated/Grid.js';
import type { GridRowDetailsReactRendererProps } from './renderers/grid.js';
export * from '@vaadin/grid/src/vaadin-grid.js';
export { GridElement, type GridEventMap } from './generated/Grid.js';
export type GridProps<TItem> = Partial<Omit<_GridProps<TItem>, 'rowDetailsRenderer'>> & Readonly<{
    rowDetailsRenderer?: ComponentType<GridRowDetailsReactRendererProps<TItem>> | null;
}>;
declare const ForwardedGrid: <TItem = any>(props: Partial<Omit<_GridProps<TItem>, "rowDetailsRenderer">> & Readonly<{
    rowDetailsRenderer?: ComponentType<Readonly<{
        item: TItem;
        model: import("@vaadin/grid/src/vaadin-grid-mixin.js").GridItemModel<TItem>;
        original: GridElement<TItem>;
    }>> | null | undefined;
}> & RefAttributes<GridElement<TItem>>) => ReactElement | null;
export { ForwardedGrid as Grid };
//# sourceMappingURL=Grid.d.ts.map