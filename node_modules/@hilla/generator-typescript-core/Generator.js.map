{
  "version": 3,
  "sources": ["src/Generator.ts"],
  "sourcesContent": ["import SwaggerParser from '@apidevtools/swagger-parser';\nimport type LoggerFactory from '@hilla/generator-typescript-utils/LoggerFactory.js';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport type { ReadonlyDeep } from 'type-fest';\nimport ts from 'typescript';\nimport File from './File.js';\nimport type { PluginConstructor } from './Plugin.js';\nimport PluginManager from './PluginManager.js';\nimport ReferenceResolver from './ReferenceResolver.js';\nimport type SharedStorage from './SharedStorage.js';\n\nexport type GeneratorContext = Readonly<{\n  logger: LoggerFactory;\n  outputDir?: string;\n}>;\n\nexport default class Generator {\n  readonly #logger: LoggerFactory;\n  readonly #manager: PluginManager;\n  readonly #parser: SwaggerParser;\n  readonly #outputDir: string | undefined;\n\n  constructor(plugins: readonly PluginConstructor[], context: GeneratorContext) {\n    this.#parser = new SwaggerParser();\n    this.#manager = new PluginManager(plugins, new ReferenceResolver(this.#parser), context.logger);\n    this.#logger = context.logger;\n    this.#outputDir = context.outputDir;\n  }\n\n  async process(input: string): Promise<readonly File[]> {\n    this.#logger.global.debug('Processing OpenAPI');\n    const api = (await this.#parser.bundle(JSON.parse(input))) as ReadonlyDeep<OpenAPIV3.Document>;\n\n    const storage: SharedStorage = {\n      api,\n      apiRefs: this.#parser.$refs,\n      outputDir: this.#outputDir,\n      pluginStorage: new Map(),\n      sources: [],\n    };\n\n    this.#logger.global.debug('Executing plugins');\n    await this.#manager.execute(storage);\n\n    this.#logger.global.debug('Printing files');\n    const printer = ts.createPrinter({ newLine: ts.NewLineKind.LineFeed });\n\n    return storage.sources.map((file) => new File([printer.printFile(file)], file.fileName));\n  }\n}\n"],
  "mappings": "AAAA,OAAOA,MAAmB,8BAI1B,OAAOC,MAAQ,aACf,OAAOC,MAAU,YAEjB,OAAOC,MAAmB,qBAC1B,OAAOC,MAAuB,yBAQ9B,MAAOC,CAAwB,CACpBC,GACAC,GACAC,GACAC,GAET,YAAYC,EAAuCC,EAA2B,CAC5E,KAAKH,GAAU,IAAIR,EACnB,KAAKO,GAAW,IAAIJ,EAAcO,EAAS,IAAIN,EAAkB,KAAKI,EAAO,EAAGG,EAAQ,MAAM,EAC9F,KAAKL,GAAUK,EAAQ,OACvB,KAAKF,GAAaE,EAAQ,SAC5B,CAEA,MAAM,QAAQC,EAAyC,CACrD,KAAKN,GAAQ,OAAO,MAAM,oBAAoB,EAG9C,MAAMO,EAAyB,CAC7B,IAHW,MAAM,KAAKL,GAAQ,OAAO,KAAK,MAAMI,CAAK,CAAC,EAItD,QAAS,KAAKJ,GAAQ,MACtB,UAAW,KAAKC,GAChB,cAAe,IAAI,IACnB,QAAS,CAAC,CACZ,EAEA,KAAKH,GAAQ,OAAO,MAAM,mBAAmB,EAC7C,MAAM,KAAKC,GAAS,QAAQM,CAAO,EAEnC,KAAKP,GAAQ,OAAO,MAAM,gBAAgB,EAC1C,MAAMQ,EAAUb,EAAG,cAAc,CAAE,QAASA,EAAG,YAAY,QAAS,CAAC,EAErE,OAAOY,EAAQ,QAAQ,IAAKE,GAAS,IAAIb,EAAK,CAACY,EAAQ,UAAUC,CAAI,CAAC,EAAGA,EAAK,QAAQ,CAAC,CACzF,CACF",
  "names": ["SwaggerParser", "ts", "File", "PluginManager", "ReferenceResolver", "Generator", "#logger", "#manager", "#parser", "#outputDir", "plugins", "context", "input", "storage", "printer", "file"]
}
