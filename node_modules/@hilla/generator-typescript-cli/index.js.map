{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["import Generator from '@hilla/generator-typescript-core/Generator.js';\nimport LoggerFactory from '@hilla/generator-typescript-utils/LoggerFactory.js';\nimport meow from 'meow';\nimport GeneratorIO from './GeneratorIO.js';\nimport { processInput } from './utils.js';\n\nconst {\n  flags: { outputDir, plugin: plugins, verbose },\n  input: [input],\n} = meow(\n  `\nUsage:\n  tsgen\n    (will read JSON from stdin)\n  tsgen <OpenAPI JSON string>\n  tsgen <OpenAPI file path>\n\nOptions:\n  -h, --help             Show this screen\n  -o, --output-dir       Output directory\n  -p, --plugin <path>    Use the plugin loadable by <path>.\n  --version              Show the app version\n`,\n  {\n    flags: {\n      outputDir: {\n        default: 'frontend/generated',\n        shortFlag: 'o',\n        type: 'string',\n      },\n      plugin: {\n        default: [],\n        isMultiple: true,\n        shortFlag: 'p',\n        type: 'string',\n      },\n      verbose: {\n        shortFlag: 'v',\n        type: 'boolean',\n      },\n    },\n    importMeta: import.meta,\n  },\n);\n\nconst logger = new LoggerFactory({ verbose });\n\nconst io = new GeneratorIO(outputDir, logger);\n\nconst resolvedPlugins = await Promise.all(\n  Array.from(new Set(plugins), async (pluginPath) => io.loadPlugin(pluginPath)),\n);\nconst generator = new Generator(resolvedPlugins, { logger, outputDir });\n\nconst files = await generator.process(await processInput(io, input));\nconst filesToDelete = await io.getGeneratedFiles();\nconst generatedFiles = await io.writeGeneratedFiles(files);\n\nawait io.cleanOutputDir(generatedFiles, filesToDelete);\n"],
  "mappings": "AAAA,OAAOA,MAAe,gDACtB,OAAOC,MAAmB,qDAC1B,OAAOC,MAAU,OACjB,OAAOC,MAAiB,mBACxB,OAAS,gBAAAC,MAAoB,aAE7B,KAAM,CACJ,MAAO,CAAE,UAAAC,EAAW,OAAQC,EAAS,QAAAC,CAAQ,EAC7C,MAAO,CAACC,CAAK,CACf,EAAIN,EACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAaA,CACE,MAAO,CACL,UAAW,CACT,QAAS,qBACT,UAAW,IACX,KAAM,QACR,EACA,OAAQ,CACN,QAAS,CAAC,EACV,WAAY,GACZ,UAAW,IACX,KAAM,QACR,EACA,QAAS,CACP,UAAW,IACX,KAAM,SACR,CACF,EACA,WAAY,WACd,CACF,EAEMO,EAAS,IAAIR,EAAc,CAAE,QAAAM,CAAQ,CAAC,EAEtCG,EAAK,IAAIP,EAAYE,EAAWI,CAAM,EAEtCE,EAAkB,MAAM,QAAQ,IACpC,MAAM,KAAK,IAAI,IAAIL,CAAO,EAAG,MAAOM,GAAeF,EAAG,WAAWE,CAAU,CAAC,CAC9E,EACMC,EAAY,IAAIb,EAAUW,EAAiB,CAAE,OAAAF,EAAQ,UAAAJ,CAAU,CAAC,EAEhES,EAAQ,MAAMD,EAAU,QAAQ,MAAMT,EAAaM,EAAIF,CAAK,CAAC,EAC7DO,EAAgB,MAAML,EAAG,kBAAkB,EAC3CM,EAAiB,MAAMN,EAAG,oBAAoBI,CAAK,EAEzD,MAAMJ,EAAG,eAAeM,EAAgBD,CAAa",
  "names": ["Generator", "LoggerFactory", "meow", "GeneratorIO", "processInput", "outputDir", "plugins", "verbose", "input", "logger", "io", "resolvedPlugins", "pluginPath", "generator", "files", "filesToDelete", "generatedFiles"]
}
