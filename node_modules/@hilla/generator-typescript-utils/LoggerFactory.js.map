{
  "version": 3,
  "sources": ["src/LoggerFactory.ts"],
  "sourcesContent": ["import Pino, { type Logger } from 'pino';\nimport PinoPretty from 'pino-pretty';\n\nexport { type Logger };\n\nexport type LoggerOptions = Readonly<{\n  name?: string;\n  verbose?: boolean;\n}>;\n\nexport default class LoggerFactory {\n  readonly #children = new Map<string, Logger>();\n  readonly #logger: Logger;\n\n  constructor({ name, verbose }: LoggerOptions) {\n    const pretty = PinoPretty({\n      ignore: 'time',\n    });\n\n    this.#logger = Pino(\n      {\n        base: undefined,\n        level: verbose ? 'debug' : 'info',\n        name: name ?? 'tsgen',\n      },\n      pretty,\n    );\n  }\n\n  get global(): Logger {\n    return this.#logger;\n  }\n\n  for(caller: string): Logger {\n    if (this.#children.has(caller)) {\n      return this.#children.get(caller)!;\n    }\n\n    const child = this.#logger.child({ caller });\n    this.#children.set(caller, child);\n    return child;\n  }\n}\n"],
  "mappings": "AAAA,OAAOA,MAA2B,OAClC,OAAOC,MAAgB,cASvB,MAAOC,CAA4B,CACxBC,GAAY,IAAI,IAChBC,GAET,YAAY,CAAE,KAAAC,EAAM,QAAAC,CAAQ,EAAkB,CAC5C,MAAMC,EAASN,EAAW,CACxB,OAAQ,MACV,CAAC,EAED,KAAKG,GAAUJ,EACb,CACE,KAAM,OACN,MAAOM,EAAU,QAAU,OAC3B,KAAMD,GAAQ,OAChB,EACAE,CACF,CACF,CAEA,IAAI,QAAiB,CACnB,OAAO,KAAKH,EACd,CAEA,IAAII,EAAwB,CAC1B,GAAI,KAAKL,GAAU,IAAIK,CAAM,EAC3B,OAAO,KAAKL,GAAU,IAAIK,CAAM,EAGlC,MAAMC,EAAQ,KAAKL,GAAQ,MAAM,CAAE,OAAAI,CAAO,CAAC,EAC3C,YAAKL,GAAU,IAAIK,EAAQC,CAAK,EACzBA,CACT,CACF",
  "names": ["Pino", "PinoPretty", "LoggerFactory", "#children", "#logger", "name", "verbose", "pretty", "caller", "child"]
}
