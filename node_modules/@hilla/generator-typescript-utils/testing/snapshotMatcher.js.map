{
  "version": 3,
  "sources": ["../src/testing/snapshotMatcher.ts"],
  "sourcesContent": ["import { readFile, writeFile } from 'node:fs/promises';\nimport { fileURLToPath } from 'node:url';\n\nconst argv = process.argv.slice(2);\nconst shouldUpdate = argv.includes('-u') || argv.includes('--update');\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace Chai {\n    interface Assertion {\n      toMatchSnapshot(snapshotName: string, importMetaUrl: string): Promise<void>;\n    }\n  }\n}\n\nexport default function snapshotMatcher(chai: Chai.ChaiStatic, utils: Chai.ChaiUtils): void {\n  utils.addMethod(\n    chai.Assertion.prototype,\n    'toMatchSnapshot',\n    // eslint-disable-next-line prefer-arrow-callback\n    async function toMatchSnapshot(this: object, snapshotName: string, importMetaUrl: string): Promise<void> {\n      const obj = utils.flag(this, 'object');\n      const snapshotURL = new URL(`./fixtures/${snapshotName}.snap.ts`, importMetaUrl);\n      const snapshotPath = fileURLToPath(snapshotURL);\n\n      if (shouldUpdate) {\n        await writeFile(snapshotPath, obj, 'utf8');\n      } else {\n        let snapshot;\n        try {\n          snapshot = await readFile(snapshotPath, 'utf8');\n        } catch (e) {\n          throw new Error(\n            `Snapshot does not exist yet: ${snapshotURL.toString()}.\\nConsider running tests with --update flag.`,\n          );\n        }\n\n        chai.assert.equal(obj, snapshot);\n      }\n    },\n  );\n}\n"],
  "mappings": "AAAA,OAAS,YAAAA,EAAU,aAAAC,MAAiB,mBACpC,OAAS,iBAAAC,MAAqB,WAE9B,MAAMC,EAAO,QAAQ,KAAK,MAAM,CAAC,EAC3BC,EAAeD,EAAK,SAAS,IAAI,GAAKA,EAAK,SAAS,UAAU,EAWrD,SAARE,EAAiCC,EAAuBC,EAA6B,CAC1FA,EAAM,UACJD,EAAK,UAAU,UACf,kBAEA,eAA6CE,EAAsBC,EAAsC,CACvG,MAAMC,EAAMH,EAAM,KAAK,KAAM,QAAQ,EAC/BI,EAAc,IAAI,IAAI,cAAcH,CAAY,WAAYC,CAAa,EACzEG,EAAeV,EAAcS,CAAW,EAE9C,GAAIP,EACF,MAAMH,EAAUW,EAAcF,EAAK,MAAM,MACpC,CACL,IAAIG,EACJ,GAAI,CACFA,EAAW,MAAMb,EAASY,EAAc,MAAM,CAChD,MAAY,CACV,MAAM,IAAI,MACR,gCAAgCD,EAAY,SAAS,CAAC;AAAA,2CACxD,CACF,CAEAL,EAAK,OAAO,MAAMI,EAAKG,CAAQ,CACjC,CACF,CACF,CACF",
  "names": ["readFile", "writeFile", "fileURLToPath", "argv", "shouldUpdate", "snapshotMatcher", "chai", "utils", "snapshotName", "importMetaUrl", "obj", "snapshotURL", "snapshotPath", "snapshot"]
}
