{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["import Plugin from '@hilla/generator-typescript-core/Plugin.js';\nimport type SharedStorage from '@hilla/generator-typescript-core/SharedStorage.js';\nimport BackbonePlugin, { BackbonePluginSourceType } from '@hilla/generator-typescript-plugin-backbone';\nimport PluginError from '@hilla/generator-typescript-utils/PluginError.js';\nimport type { SourceFile } from 'typescript';\nimport BarrelProcessor from './BarrelProcessor.js';\n\nexport default class BarrelPlugin extends Plugin {\n  override get path(): string {\n    return import.meta.url;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/require-await\n  override async execute({ pluginStorage, sources }: SharedStorage): Promise<void> {\n    const tags = pluginStorage.get(BackbonePlugin.BACKBONE_PLUGIN_FILE_TAGS) as WeakMap<SourceFile, string> | undefined;\n\n    if (!tags) {\n      throw new PluginError(`${BackbonePlugin.name} should be run first.`, this.constructor.name);\n    }\n\n    const endpoints = sources.filter((file) => tags.get(file) === BackbonePluginSourceType.Endpoint);\n    const barrelFile = new BarrelProcessor(endpoints, this).process();\n    sources.push(barrelFile);\n  }\n}\n"],
  "mappings": "AAAA,OAAOA,MAAY,6CAEnB,OAAOC,GAAkB,4BAAAC,MAAgC,8CACzD,OAAOC,MAAiB,mDAExB,OAAOC,MAAqB,uBAE5B,MAAOC,UAAmCL,CAAO,CAC/C,IAAa,MAAe,CAC1B,OAAO,YAAY,GACrB,CAGA,MAAe,QAAQ,CAAE,cAAAM,EAAe,QAAAC,CAAQ,EAAiC,CAC/E,MAAMC,EAAOF,EAAc,IAAIL,EAAe,yBAAyB,EAEvE,GAAI,CAACO,EACH,MAAM,IAAIL,EAAY,GAAGF,EAAe,IAAI,wBAAyB,KAAK,YAAY,IAAI,EAG5F,MAAMQ,EAAYF,EAAQ,OAAQG,GAASF,EAAK,IAAIE,CAAI,IAAMR,EAAyB,QAAQ,EACzFS,EAAa,IAAIP,EAAgBK,EAAW,IAAI,EAAE,QAAQ,EAChEF,EAAQ,KAAKI,CAAU,CACzB,CACF",
  "names": ["Plugin", "BackbonePlugin", "BackbonePluginSourceType", "PluginError", "BarrelProcessor", "BarrelPlugin", "pluginStorage", "sources", "tags", "endpoints", "file", "barrelFile"]
}
