{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["import { open } from 'fs/promises';\nimport { fileURLToPath } from 'url';\nimport Plugin from '@hilla/generator-typescript-core/Plugin.js';\nimport type SharedStorage from '@hilla/generator-typescript-core/SharedStorage.js';\nimport ClientProcessor from './ClientProcessor.js';\n\nexport default class ClientPlugin extends Plugin {\n  static readonly CLIENT_FILE_NAME = 'connect-client.default';\n  static readonly CUSTOM_CLIENT_FILE_NAME = '../connect-client';\n\n  static async getClientFileName(path?: string): Promise<string> {\n    return (await ClientPlugin.#checkForCustomClientFile(path))\n      ? ClientPlugin.CUSTOM_CLIENT_FILE_NAME\n      : ClientPlugin.CLIENT_FILE_NAME;\n  }\n\n  static async #checkForCustomClientFile(path?: string): Promise<boolean> {\n    const dir = path?.startsWith('file:') ? fileURLToPath(path) : path;\n\n    try {\n      return !!(dir && (await open(`${dir}/${ClientPlugin.CUSTOM_CLIENT_FILE_NAME}.ts`, 'r')));\n    } catch (e) {\n      return false;\n    }\n  }\n\n  declare ['constructor']: typeof ClientPlugin;\n\n  override get path(): string {\n    return import.meta.url;\n  }\n\n  override async execute({ outputDir, sources }: SharedStorage): Promise<void> {\n    // the client file is created only if a custom client file is not found\n    if (!(outputDir && (await ClientPlugin.#checkForCustomClientFile(outputDir)))) {\n      const clientFile = new ClientProcessor(this.constructor.CLIENT_FILE_NAME, this).process();\n      sources.push(clientFile);\n    }\n  }\n}\n"],
  "mappings": "AAAA,OAAS,QAAAA,MAAY,cACrB,OAAS,iBAAAC,MAAqB,MAC9B,OAAOC,MAAY,6CAEnB,OAAOC,MAAqB,uBAE5B,MAAOC,UAAmCF,CAAO,CAC/C,OAAgB,iBAAmB,yBACnC,OAAgB,wBAA0B,oBAE1C,aAAa,kBAAkBG,EAAgC,CAC7D,OAAQ,MAAMD,EAAaE,GAA0BD,CAAI,EACrDD,EAAa,wBACbA,EAAa,gBACnB,CAEA,YAAaE,GAA0BD,EAAiC,CACtE,MAAME,EAAMF,GAAM,WAAW,OAAO,EAAIJ,EAAcI,CAAI,EAAIA,EAE9D,GAAI,CACF,MAAO,CAAC,EAAEE,GAAQ,MAAMP,EAAK,GAAGO,CAAG,IAAIH,EAAa,uBAAuB,MAAO,GAAG,EACvF,MAAY,CACV,MAAO,EACT,CACF,CAIA,IAAa,MAAe,CAC1B,OAAO,YAAY,GACrB,CAEA,MAAe,QAAQ,CAAE,UAAAI,EAAW,QAAAC,CAAQ,EAAiC,CAE3E,GAAI,EAAED,GAAc,MAAMJ,EAAaE,GAA0BE,CAAS,GAAK,CAC7E,MAAME,EAAa,IAAIP,EAAgB,KAAK,YAAY,iBAAkB,IAAI,EAAE,QAAQ,EACxFM,EAAQ,KAAKC,CAAU,CACzB,CACF,CACF",
  "names": ["open", "fileURLToPath", "Plugin", "ClientProcessor", "ClientPlugin", "path", "#checkForCustomClientFile", "dir", "outputDir", "sources", "clientFile"]
}
