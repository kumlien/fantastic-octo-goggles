{
  "version": 3,
  "sources": ["src/MetadataProcessor.ts"],
  "sourcesContent": ["import type { Schema } from '@hilla/generator-typescript-core/Schema.js';\nimport ts, { type ObjectLiteralExpression, type PropertyAssignment } from 'typescript';\n\ninterface Annotation {\n  name: string;\n  attributes?: Record<string, unknown>;\n}\n\nexport type SchemaWithMetadata = Schema & {\n  'x-annotations'?: Annotation[];\n  'x-java-type'?: string;\n};\n\nexport class MetadataProcessor {\n  process(schema: Schema): ObjectLiteralExpression | null {\n    const schemaWithMetadata = schema as SchemaWithMetadata;\n\n    const properties = [\n      this.#createAnnotationsProperty(schemaWithMetadata),\n      this.#createJavaTypeProperty(schemaWithMetadata),\n    ].filter(Boolean) as PropertyAssignment[];\n\n    if (properties.length === 0) {\n      return null;\n    }\n\n    return ts.factory.createObjectLiteralExpression(properties);\n  }\n\n  #createAnnotationsProperty(schema: SchemaWithMetadata): PropertyAssignment | null {\n    const annotations = schema['x-annotations'];\n    const hasAnnotations = annotations && annotations.length > 0;\n    if (!hasAnnotations) {\n      return null;\n    }\n\n    const annotationLiterals = annotations.map((annotation) =>\n      ts.factory.createObjectLiteralExpression([\n        ts.factory.createPropertyAssignment('name', ts.factory.createStringLiteral(annotation.name)),\n      ]),\n    );\n\n    return ts.factory.createPropertyAssignment(\n      'annotations',\n      ts.factory.createArrayLiteralExpression(annotationLiterals),\n    );\n  }\n\n  #createJavaTypeProperty(schema: SchemaWithMetadata): PropertyAssignment | null {\n    const javaType = schema['x-java-type'];\n    if (!javaType) {\n      return null;\n    }\n\n    return ts.factory.createPropertyAssignment('javaType', ts.factory.createStringLiteral(javaType));\n  }\n}\n"],
  "mappings": "AACA,OAAOA,MAAmE,aAYnE,MAAMC,CAAkB,CAC7B,QAAQC,EAAgD,CACtD,MAAMC,EAAqBD,EAErBE,EAAa,CACjB,KAAKC,GAA2BF,CAAkB,EAClD,KAAKG,GAAwBH,CAAkB,CACjD,EAAE,OAAO,OAAO,EAEhB,OAAIC,EAAW,SAAW,EACjB,KAGFJ,EAAG,QAAQ,8BAA8BI,CAAU,CAC5D,CAEAC,GAA2BH,EAAuD,CAChF,MAAMK,EAAcL,EAAO,eAAe,EAE1C,GAAI,EADmBK,GAAeA,EAAY,OAAS,GAEzD,OAAO,KAGT,MAAMC,EAAqBD,EAAY,IAAKE,GAC1CT,EAAG,QAAQ,8BAA8B,CACvCA,EAAG,QAAQ,yBAAyB,OAAQA,EAAG,QAAQ,oBAAoBS,EAAW,IAAI,CAAC,CAC7F,CAAC,CACH,EAEA,OAAOT,EAAG,QAAQ,yBAChB,cACAA,EAAG,QAAQ,6BAA6BQ,CAAkB,CAC5D,CACF,CAEAF,GAAwBJ,EAAuD,CAC7E,MAAMQ,EAAWR,EAAO,aAAa,EACrC,OAAKQ,EAIEV,EAAG,QAAQ,yBAAyB,WAAYA,EAAG,QAAQ,oBAAoBU,CAAQ,CAAC,EAHtF,IAIX,CACF",
  "names": ["ts", "MetadataProcessor", "schema", "schemaWithMetadata", "properties", "#createAnnotationsProperty", "#createJavaTypeProperty", "annotations", "annotationLiterals", "annotation", "javaType"]
}
