import{EndpointValidationError as V}from"@hilla/frontend/EndpointErrors.js";import{_clearValidation as p,_setErrorsWithDescendants as f,_update as o,_updateValidation as v,BinderNode as M,CHANGED as s}from"./BinderNode.js";import{getDefaultFieldStrategy as m}from"./Field.js";import{createDetachedModel as y,_parent as g}from"./Models.js";import{runValidator as E,ServerValidator as b,ValidationError as d}from"./Validation.js";class u extends M{static interpolateMessageCallback;#a;#t;#n;#r=!1;#o=!1;#i;#s;#e=new Map;#l=this;constructor(e,t){super(y(e)),this.model[g]=this,this.#l=t?.context??this,this.#s=t,this.initializeValue(!0),this.#n=this.value}get defaultValue(){return this.#a}set defaultValue(e){this.#a=e,this.dispatchEvent(s)}get binder(){return this}get value(){return this.#t}set value(e){if(e===this.#t)return;const t=this.#t;this.#t=e,this[o](t),this[v]().catch(()=>{})}get submitting(){return this.#r}get validating(){return this.#o}read(e){if(e==null){this.clear();return}this.defaultValue=e,this.value&&this[p]()&&this.value===e&&this[o](this.value),this.value=this.defaultValue}reset(){this.read(this.#a)}clear(){this.read(this.#n)}async submit(){const e=this.#s?.onSubmit;if(e)return this.submitTo(e)}async submitTo(e){const t=await this.validate();if(t.length)throw new d(t);this.#r=!0,this[o](this.value),this.dispatchEvent(s);try{return await e.call(this.#l,this.value)}catch(i){if(i instanceof V&&i.validationErrorData.length){const a=[];throw i.validationErrorData.forEach(r=>{const l=/Object of type '(.+)' has invalid property '(.+)' with value '(.+)', validation error: '(.+)'/u.exec(r.message),[h,c,n]=l?l.splice(2):[r.parameterName??"",void 0,r.message];a.push({message:n,property:h,validator:new b(n),value:c})}),this[f](a),new d(a)}throw i}finally{this.#r=!1,this.defaultValue=this.value,this[o](this.value)}}async requestValidation(e,t){let i;if(this.#e.has(e)?i=this.#e.get(e):(i=new Map,this.#e.set(e,i)),await this.performValidation(),i.has(t))return i.get(t);const a=E(e,t,u.interpolateMessageCallback);i.set(t,a);const r=await a;return i.delete(t),i.size===0&&this.#e.delete(e),this.#e.size===0&&this.completeValidation(),r}getFieldStrategy(e,t){return m(e,t)}performValidation(){return this.#i||(this.#o=!0,this.dispatchEvent(s),this.#i=Promise.resolve().then(()=>{this.#i=void 0})),this.#i}completeValidation(){this.#o=!1,this.dispatchEvent(s)}[o](e){this.#s?.onChange?.call(this.#l,e),this.dispatchEvent(s)}}export{u as BinderRoot};
//# sourceMappingURL=BinderRoot.js.map
