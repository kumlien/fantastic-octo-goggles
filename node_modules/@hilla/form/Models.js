import h from"validator/es/lib/isNumeric.js";import{getBinderNode as u}from"./BinderNode.js";import{IsNumber as g}from"./Validators.js";const m=Symbol("itemModel"),p=Symbol("parent"),M=Symbol("key"),s=Symbol("fromString"),y=Symbol("validators"),f=Symbol("meta"),V=Symbol("getPropertyModel"),b=Symbol("enum"),d=Symbol("optional");function O(r){return s in r}const v={$value$:void 0};function x(r){return new r(v,"$value$",!1)}class l{static createEmptyValue(){}[p];[y];[f];[d];[M];constructor(e,t,o,n){this[p]=e,this[M]=t,this[d]=o,this[y]=n?.validators??[],this[f]=n?.meta??{}}toString(){return String(this.valueOf())}valueOf(){const{value:e}=u(this);if(e===void 0)throw new TypeError("Value is undefined");return e}}class i extends l{}class I extends i{static createEmptyValue=Boolean;[s](e){return["true","1","yes"].includes(e.toLowerCase())}}class P extends i{static createEmptyValue=Number;constructor(e,t,o,n){const a=[new g(o),...n?.validators??[]];super(e,t,o,{...n,validators:a})}[s](e){if(e!=="")return h(e)?Number.parseFloat(e):NaN}}class j extends i{static createEmptyValue=String;[s]=String}function N(r){const{[b]:e}=x(r),t=Object.values(e)[0];return()=>t}class w extends l{[s](e){return e in this[b]?e:void 0}}function*T(r){for(let e=Object.getPrototypeOf(r);e!==c.prototype;e=Object.getPrototypeOf(e)){const t=Object.getOwnPropertyDescriptors(e);for(const[o,{get:n}]of Object.entries(t))n&&(yield[o,n])}}function E(r){const e=x(r);return()=>{const t={};for(const[o,n]of T(e)){const a=n.call(e);t[o]=a[d]?void 0:a.constructor.createEmptyValue()}return t}}class c extends l{static createEmptyValue=E(c);#e={};[V](e,t){return this.#e[e]||(this.#e[e]=t(this,e)),this.#e[e]}}class C extends l{static createEmptyValue(){return[]}[m];#e;#t=[];constructor(e,t,o,n,a){super(e,t,o,a),this.#e=n,this[m]=n(this,0).constructor.createEmptyValue}*[Symbol.iterator](){const e=this.valueOf();e.length!==this.#t.length&&(this.#t.length=e.length);for(let t=0;t<e.length;t++){let o=this.#t[t];o||(o=this.#e(this,t),this.#t[t]=o),yield u(o)}}}export{l as AbstractModel,C as ArrayModel,I as BooleanModel,w as EnumModel,P as NumberModel,c as ObjectModel,i as PrimitiveModel,j as StringModel,m as _createEmptyItemValue,b as _enum,s as _fromString,V as _getPropertyModel,M as _key,f as _meta,p as _parent,y as _validators,x as createDetachedModel,T as getObjectModelOwnAndParentGetters,O as hasFromString,N as makeEnumEmptyValueCreator,E as makeObjectEmptyValueCreator,v as modelDetachedParent};
//# sourceMappingURL=Models.js.map
