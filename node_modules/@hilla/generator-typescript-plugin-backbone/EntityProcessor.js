import{dirname as d}from"path/posix";import{convertReferenceSchemaToPath as m,convertReferenceSchemaToSpecifier as f,decomposeSchema as p,isComposedSchema as l,isEmptyObject as h,isEnumSchema as u,isNullableSchema as y,isObjectSchema as g,isReferenceSchema as S}from"@hilla/generator-typescript-core/Schema.js";import{convertFullyQualifiedNameToRelativePath as P,simplifyFullyQualifiedName as b}from"@hilla/generator-typescript-core/utils.js";import E from"@hilla/generator-typescript-utils/createSourceFile.js";import T from"@hilla/generator-typescript-utils/dependencies/DependencyManager.js";import s from"@hilla/generator-typescript-utils/dependencies/PathManager.js";import n from"typescript";import x from"./TypeSchemaProcessor.js";class M{#t;#e;#n;#i;#c=new s({extension:"ts"});#r;#o;constructor(e,t,r){this.#t=t,this.#r=r,this.#n=e,this.#i=b(e),this.#o=P(e),this.#e=new T(new s({extension:".js",relativeTo:d(this.#o)}))}get#a(){const e=n.factory.createIdentifier(this.#i);return this.#e.exports.default.set(e),e}process(){this.#r.logger.debug(`Processing entity: ${this.#i}`);const e=u(this.#t)?this.#d(this.#t):this.#m(this.#t),t=e?[e]:[],{exports:r,imports:i}=this.#e;return E([...i.toCode(),...t,...r.toCode()],this.#c.createRelativePath(this.#o))}#s(e){const{logger:t}=this.#r;if(!g(e)){t.debug(e,`Component is not an object: '${this.#n}'`);return}return h(e)&&t.debug(`Component has no properties:' ${this.#n}'`),n.factory.createInterfaceDeclaration(void 0,this.#a,void 0,void 0,this.#p(e))}#d({enum:e}){return n.factory.createEnumDeclaration(void 0,this.#a,e.map(t=>n.factory.createEnumMember(t,n.factory.createStringLiteral(t))))}#m(e){const{logger:t}=this.#r;if(l(e)){const r=p(e);if(r.length>2){t.debug(e,`Schema for '${this.#n}' has more than two components. This plugin will ignore it.`);return}const[i,a]=r;if(!S(i)){t.debug(i,"Only reference schema allowed for parent class");return}const o=this.#s(a),c=this.#f(i);return o&&n.factory.updateInterfaceDeclaration(o,o.modifiers,o.name,void 0,[n.factory.createHeritageClause(n.SyntaxKind.ExtendsKeyword,[n.factory.createExpressionWithTypeArguments(c,void 0)])],o.members)}return this.#s(e)}#f(e){const{imports:t,paths:r}=this.#e,i=f(e),a=r.createRelativePath(m(e));return t.default.getIdentifier(a)??t.default.add(a,i,!0)}#p({properties:e}){return Object.entries(e??{}).map(([t,r])=>{const[i]=new x(r,this.#e).process();return n.factory.createPropertySignature(void 0,t,y(r)?n.factory.createToken(n.SyntaxKind.QuestionToken):void 0,i)})}}export{M as EntityProcessor};
//# sourceMappingURL=EntityProcessor.js.map
