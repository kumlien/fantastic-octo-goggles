import{isEmptyObject as s,isObjectSchema as p}from"@hilla/generator-typescript-core/Schema.js";import e from"typescript";import d from"./TypeSchemaProcessor.js";import{defaultMediaType as y}from"./utils.js";class o{static#e="init";#a;#n;#t;#r;constructor(a,n,r,t){this.#n=r,this.#a=n,this.#t=a?r.resolver.resolve(a):void 0,this.#r=t}process(){if(!this.#t)return{initParam:e.factory.createIdentifier(o.#e),packedParameters:e.factory.createObjectLiteralExpression(),parameters:[e.factory.createParameterDeclaration(void 0,void 0,o.#e,e.factory.createToken(e.SyntaxKind.QuestionToken),e.factory.createTypeReferenceNode(this.#r))]};const a=this.#o(this.#t.content[y].schema),n=a.map(([t])=>t);let r=o.#e;for(;n.includes(r);)r=`_${r}`;return{initParam:e.factory.createIdentifier(r),packedParameters:e.factory.createObjectLiteralExpression(a.map(([t])=>e.factory.createShorthandPropertyAssignment(t))),parameters:[...a.map(([t,i])=>{const c=new d(i,this.#a).process();return e.factory.createParameterDeclaration(void 0,void 0,t,void 0,e.factory.createUnionTypeNode(c))}),e.factory.createParameterDeclaration(void 0,void 0,r,e.factory.createToken(e.SyntaxKind.QuestionToken),e.factory.createTypeReferenceNode(this.#r))]}}#o(a){if(!a)return[];const{logger:n,resolver:r}=this.#n,t=r.resolve(a);return p(t)&&!s(t)?Object.entries(t.properties):(n.warn("A schema provided for endpoint method's 'requestBody' is not supported"),[])}}export{o as default};
//# sourceMappingURL=EndpointMethodRequestBodyProcessor.js.map
