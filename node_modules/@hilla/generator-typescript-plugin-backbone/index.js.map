{
  "version": 3,
  "sources": ["src/index.ts"],
  "sourcesContent": ["import Plugin from '@hilla/generator-typescript-core/Plugin.js';\nimport type SharedStorage from '@hilla/generator-typescript-core/SharedStorage.js';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport type { ReadonlyDeep } from 'type-fest';\nimport type { SourceFile } from 'typescript';\nimport EndpointProcessor from './EndpointProcessor.js';\nimport { EntityProcessor } from './EntityProcessor.js';\n\nexport enum BackbonePluginSourceType {\n  Endpoint = 'endpoint',\n  Entity = 'entity',\n}\n\nexport default class BackbonePlugin extends Plugin {\n  static readonly BACKBONE_PLUGIN_FILE_TAGS = 'BACKBONE_PLUGIN_FILE_TAGS';\n  declare ['constructor']: typeof BackbonePlugin;\n  readonly #tags = new WeakMap<SourceFile, BackbonePluginSourceType>();\n\n  override get path(): string {\n    return import.meta.url;\n  }\n\n  override async execute(storage: SharedStorage): Promise<void> {\n    const endpointSourceFiles = await this.#processEndpoints(storage);\n    const entitySourceFiles = this.#processEntities(storage);\n\n    endpointSourceFiles.forEach((file) => this.#tags.set(file, BackbonePluginSourceType.Endpoint));\n    entitySourceFiles.forEach((file) => this.#tags.set(file, BackbonePluginSourceType.Entity));\n\n    storage.sources.push(...endpointSourceFiles, ...entitySourceFiles);\n    storage.pluginStorage.set(this.constructor.BACKBONE_PLUGIN_FILE_TAGS, this.#tags);\n  }\n\n  async #processEndpoints(storage: SharedStorage): Promise<readonly SourceFile[]> {\n    this.logger.debug('Processing endpoints');\n    const endpoints = new Map<string, Map<string, ReadonlyDeep<OpenAPIV3.PathItemObject>>>();\n\n    Object.entries(storage.api.paths)\n      .filter(([, pathItem]) => !!pathItem)\n      .forEach(([path, pathItem]) => {\n        const [, endpointName, endpointMethodName] = path.split('/');\n\n        let methods: Map<string, ReadonlyDeep<OpenAPIV3.PathItemObject>>;\n\n        if (endpoints.has(endpointName)) {\n          methods = endpoints.get(endpointName)!;\n        } else {\n          methods = new Map();\n          endpoints.set(endpointName, methods);\n        }\n\n        methods.set(endpointMethodName, pathItem!);\n      });\n\n    const processors = await Promise.all(\n      [...endpoints.entries()].map(async ([endpointName, methods]) =>\n        EndpointProcessor.create(endpointName, this, methods, storage.outputDir),\n      ),\n    );\n\n    return Promise.all(processors.map(async (processor) => processor.process()));\n  }\n\n  #processEntities(storage: SharedStorage): readonly SourceFile[] {\n    this.logger.debug('Processing entities');\n\n    return storage.api.components?.schemas\n      ? Object.entries(storage.api.components.schemas).map(([name, component]) =>\n          new EntityProcessor(name, component, this).process(),\n        )\n      : [];\n  }\n}\n"],
  "mappings": "AAAA,OAAOA,MAAY,6CAKnB,OAAOC,MAAuB,yBAC9B,OAAS,mBAAAC,MAAuB,uBAEzB,IAAKC,OACVA,EAAA,SAAW,WACXA,EAAA,OAAS,SAFCA,OAAA,IAKZ,MAAOC,UAAqCJ,CAAO,CACjD,OAAgB,0BAA4B,4BAEnCK,GAAQ,IAAI,QAErB,IAAa,MAAe,CAC1B,OAAO,YAAY,GACrB,CAEA,MAAe,QAAQC,EAAuC,CAC5D,MAAMC,EAAsB,MAAM,KAAKC,GAAkBF,CAAO,EAC1DG,EAAoB,KAAKC,GAAiBJ,CAAO,EAEvDC,EAAoB,QAASI,GAAS,KAAKN,GAAM,IAAIM,EAAM,UAAiC,CAAC,EAC7FF,EAAkB,QAASE,GAAS,KAAKN,GAAM,IAAIM,EAAM,QAA+B,CAAC,EAEzFL,EAAQ,QAAQ,KAAK,GAAGC,EAAqB,GAAGE,CAAiB,EACjEH,EAAQ,cAAc,IAAI,KAAK,YAAY,0BAA2B,KAAKD,EAAK,CAClF,CAEA,KAAMG,GAAkBF,EAAwD,CAC9E,KAAK,OAAO,MAAM,sBAAsB,EACxC,MAAMM,EAAY,IAAI,IAEtB,OAAO,QAAQN,EAAQ,IAAI,KAAK,EAC7B,OAAO,CAAC,CAAC,CAAEO,CAAQ,IAAM,CAAC,CAACA,CAAQ,EACnC,QAAQ,CAAC,CAACC,EAAMD,CAAQ,IAAM,CAC7B,KAAM,CAAC,CAAEE,EAAcC,CAAkB,EAAIF,EAAK,MAAM,GAAG,EAE3D,IAAIG,EAEAL,EAAU,IAAIG,CAAY,EAC5BE,EAAUL,EAAU,IAAIG,CAAY,GAEpCE,EAAU,IAAI,IACdL,EAAU,IAAIG,EAAcE,CAAO,GAGrCA,EAAQ,IAAID,EAAoBH,CAAS,CAC3C,CAAC,EAEH,MAAMK,EAAa,MAAM,QAAQ,IAC/B,CAAC,GAAGN,EAAU,QAAQ,CAAC,EAAE,IAAI,MAAO,CAACG,EAAcE,CAAO,IACxDhB,EAAkB,OAAOc,EAAc,KAAME,EAASX,EAAQ,SAAS,CACzE,CACF,EAEA,OAAO,QAAQ,IAAIY,EAAW,IAAI,MAAOC,GAAcA,EAAU,QAAQ,CAAC,CAAC,CAC7E,CAEAT,GAAiBJ,EAA+C,CAC9D,YAAK,OAAO,MAAM,qBAAqB,EAEhCA,EAAQ,IAAI,YAAY,QAC3B,OAAO,QAAQA,EAAQ,IAAI,WAAW,OAAO,EAAE,IAAI,CAAC,CAACc,EAAMC,CAAS,IAClE,IAAInB,EAAgBkB,EAAMC,EAAW,IAAI,EAAE,QAAQ,CACrD,EACA,CAAC,CACP,CACF",
  "names": ["Plugin", "EndpointProcessor", "EntityProcessor", "BackbonePluginSourceType", "BackbonePlugin", "#tags", "storage", "endpointSourceFiles", "#processEndpoints", "entitySourceFiles", "#processEntities", "file", "endpoints", "pathItem", "path", "endpointName", "endpointMethodName", "methods", "processors", "processor", "name", "component"]
}
